{"version":3,"sources":["globals.js","reportWebVitals.js","helpers/animation.js","objects/world/createPath.js","store/object.js","store/index.js","objects/paragraphs/Paragraph.jsx","objects/paragraphs/Time.jsx","objects/paragraphs/Patience.jsx","objects/paragraphs/Android.jsx","objects/paragraphs/IOS.jsx","objects/paragraphs/ReactJS.jsx","objects/constants.js","objects/Starter.js","objects/TestOnlyPlane.js","objects/Sheet.js","fonts/bold.blob","objects/Text.jsx","objects/Loading.js","postprocessing/index.js","objects/animHandler.js","objects/world/index.jsx","scene/index.js","index.js"],"names":["window","progressSteps","planeFold","start","end","planeToLineStart","planeMove","fatstronaut","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","seekGltfAnimation","animation","progress","playbackControllerRef","customAnimationDuration","clampWhenFinished","repetitions","reset","setDuration","current","factor","_mixer","setTime","timeScale","_clip","duration","play","createSpiralPathFromCoordinateWithRadius","coordinate","radius","spirals","heightDivider","direction","type","vector3Array","x","y","z","i","yCord","v1","Vector3","v2","v3","v4","push","points","lastPosition","length","useObject","set","get","key","position","rotation","rotationAngle","animationTime","initialTrajectoryPointAnimationTime","lastChanged","scaleFactor","scrollY","scrollingStopped","move","state","rotate","setRotationAngle","setScaleFactor","setAnimationTime","setInitialTrajectoryPointAnimationTime","setScrollY","setProgress","sameProgress","setScrollingStopped","useStore","create","subscribeWithSelector","scrollStatus","isScrolling","setIsSCrolling","initialAnimation","planeAndSheetReverseOpacitiesProgress","setPlaneAndSheetReverseOpacitiesProgress","experience","visible","initialJoinProgress","initialGoProgress","initialScaleProgress","experienceCubesToClockPositionProgress","experienceCubesToClockRotationProgress","toClockProgress","clockMoveProgress","timeDefinitionProgress","clockCloseProgress","timeDefinitionCloseProgress","cubesToCamelPositionProgress","cubesToCamelRotationProgress","toCamelProgress","camelMoveProgress","patienceDefinitionProgress","camelGoProgress","patienceDefitionCloseProgress","cubesToAndroidPositionProgress","cubesToAndroidRotationProgress","toAndroidProgress","androidParagraphProgress","androidMoveProgress","androidGoProgress","androidParagraphCloseProgress","experienceCubesToApplePositionProgress","experienceCubesToAppleRotationProgress","toAppleProgress","appleParagraphProgress","appleParagraphCloseProgress","appleMoveProgress","appleGoProgress","cubesToReactPositionProgress","cubesToReactRotationProgress","flowerColorsProgress","toFlowerProgress","flowerParagraphProgress","flowerParagraphCloseProgress","pineappleColorsProgress","toPineAppleProgress","pineappleParagraphProgress","pineappleParagraphCloseProgress","cannonColorsProgress","toCannonProgress","cannonParagraphProgress","cannonParagraphCloseProgress","setInitialJoinProgress","setInitialScaleProgress","setInitialGoProgress","setExperienceCubesToClockPositionProgress","setExperienceCubesToClockRotationProgress","setToClockProgress","setClockMoveProgress","setTimeDefinitionProgress","setClockCloseProgress","setTimeDefintionCloseProgress","setCubesToCamelPositionProgress","setCubesToCamelRotationProgress","setToCamelProgress","setCamelMoveProgress","setPatienceDefinitonProgress","setCamelGoProgress","setPatinceDefinitionCloseProgres","setCubesToAndroidPositionProgress","setCubesToAndroidRotationProgress","setToAndroidProgress","setAndroidParagraphProgress","setAndroidMoveProgress","setAndroidGoProgress","setAndroidParagraphCloseProgress","setExperienceCubesToApplePositionProgress","setExperienceCubesToAppleRotationProgress","setToAppleProgress","setAppleParagraphProgress","setAppleMoveProgress","setAppleGoProgress","setAppleParagraphCloseProgress","setCubesToReactPositionProgress","setCubesToReactRotationProgress","setFlowerColorsProgress","setToFLowerProgress","setFlowerParagraphProgress","setFlowerParagraphCloseProgress","setPineappleColorsProgress","setToPinappleProgress","setPineappleParagraphProgress","setPineappleParagraphCloseProgress","setCannonColorsProgress","setToCannonProgress","setCannonParagraphProgress","setCannonParagraphCloseProgress","sheet","moveToCenterProgress","rotateToSheetProgress","sheetProgress","backRotateProgress","fixSheetPositonbeforeConvertingToSheetProgress","setMoveToCenterProgress","setRotateToSheetProgress","setSheetProgress","setBackRotateProgress","setFixSheetPositonbeforeConvertingToSheetProgress","plane","planeFoldingProgress","planeToInitialTrajectoryPointProgress","planeToClockProgress","planeToCamelProgres","planeToAndroidProgress","planeToAppleProgress","planeToReactPositionProgress","setPlaneFoldingProgress","setPlaneToInitialTrajectoryPointProgress","setPlaneToClockProgress","setPlaneToCamelProgress","setPlaneToAndroidProgress","setPlaneToAppleProgress","setPlaneToReactPositionProgress","Paragraph","ref","title","pronounciation","definition","sentence1","sentence2","conclusion","children","Html","transform","sprite","style","opacity","color","forwardRef","Time","_","Patience","Android","IOS","ReactJS","objectPositionsInSpace","Model","props","mainContainer","useThree","camera","useRef","secondaryContainer","mainCubeMaterial","mainCubeFaceMaterial","cube1Material","cube2Material","cube3Material","cube4Material","timeDefinition","patienceDefintion","andoridParagraph","appleParagraph","reactParagraph","useGLTF","process","nodes","animations","useAnimations","actions","mixer","activeAnimation","timeTweak","animationLoop","LoopOnce","action","setLoop","time","paused","useEffect","clock","camel","android","ios","react","initialRotation","anime","targets","autoplay","Math","PI","unsubscribeInitialAnimation","subscribe","seek","scaleDown","scale","join","cubesToClockPosition","cubesToClockRotation","timeDefinitionShow","timeDefinitionClose","cubesToCamelPosition","rotateCubesForCamelAnim","showPatienceDefinition","hidePatienceDefinition","cubesToAndroidPosition","rotateCubesForAndroidAnimation","showAndroidParagraph","hideAndroidParagraph","cubesToApplePosition","cubesToAppleRotation","showAppleParagraph","hideAppleParagraph","cubesToReactPosition","cubesToReactRotation","showReactParagraph","go","toClock","clockMove","toCamel","camelMove","toAndroid","androidMove","toApple","appleMove","toFlower","toPineapple","toCannon","unsubscribeExperieneStore","stopAllAction","LoopRepeat","moveTweak","useFrame","acAnim","dispose","name","geometry","cube","material","receiveShadow","morphTargetDictionary","morphTargetInfluences","layers","roughness","metalness","emissive","cube_1","cube_2","cube_3","cube_4","cube_5","preload","group","front","useLoader","TextureLoader","flipY","back","planeFoldingProgressChecker","planeToClockProgressChecker","planeToCamelProgressChecker","planeToAndroidProgressChecker","planeToAppleProgressChecker","planeToReactPositionProgressChecker","moveCamera","lineRef","computeLineDistances","p","useState","c","CatmullRomCurve3","tension","arcLengthDivisions","curveType","closed","line","BufferGeometry","setFromPoints","getSpacedPoints","lineGeometry","planePosition","planeRotation","up","axis","unsubscribeFromSheetListener","planeToIntialPosition","planeToInitialRotation","quaternion","w","fold","unsubcribeFromPlaneAnimationListener","setFromAxisAngle","handleMovePlane","sheetProgressCheckerRef","shouldCameraMove","fraction","isBackward","getPoint","tangent","getTangent","crossVectors","normalize","angle","acos","dot","movePlane","copy","emissiveIntensity","dashSize","gapSize","map","transparent","depthTest","alphaTest","material_1","material_2","material1Ref","material2Ref","material3Ref","sheetProgressChecker","unsubscribeFromPlaneListener","moveToCenterAnimation","rotateToSheet","rotateBack","unsubscribeSheetStore","toSheet","Text","vAlign","hAlign","size","font","FontLoader","boldUrl","config","useMemo","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","mesh","useLayoutEffect","computeBoundingBox","boundingBox","getSize","args","extend","TextGeometry","LoadingText","text","createRef","positionChange","unsubscribeStore","EffectComposer","ShaderPass","RenderPass","Effect","gl","scene","effectComposer","renderScene","toneMappingExposure","pow","autoClear","antialias","finalComposer","unrealBloomPass","UnrealBloomPass","Vector2","width","addPass","setSize","clear","render","clearDepth","Animator","_event","deltaY","percentage","touchStartY","divContainer","document","getElementById","maxHeight","clientHeight","offsetHeight","innerHeight","scrollTimeout","onWheel","e","clearTimeout","setTimeout","getState","wheelDeltaY","scroll","onTouchStart","t","targetTouches","pageY","onTouchMove","onResize","a","b","timeline","easing","empty","initialAnimationProgress","initalCubeJoinProgress","initalCubeGoProgress","centerSheetProgress","rotateSheetProgress","toSheetProgress","sheetBackRotateProgress","planeFoldProgress","clockGoProgress","experienceCubesToCamelPosition","experienceCubesToCamelRotation","patienceDefitionProgress","showAndroidParagraphProgress","handleUpdateAnimation","anim","progressTracker","progressSetter","completed","addEventListener","passive","add","update","removeEventListener","World","Stats","fallback","Loading","intensity","Scene","canvas","id","className","shadows","far","near","fov","aspect","innerWidth","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.0bd797bd.chunk.js","sourcesContent":["const progressSteps = {\n  planeFold: {\n    start: 0,\n    end: 15000,\n  },\n  planeToLineStart: {\n    start: 15000,\n    end: 17000,\n  },\n  planeMove: {\n    start: 17000,\n  },\n  fatstronaut: {\n    start: 20000,\n    end: 35000,\n  },\n};\n\nwindow.progressSteps = progressSteps;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { LoopRepeat } from \"three\";\n\nexport function lerp(a, b, t) {\n  return (1 - t) * a + t * b;\n}\n\n/**\n * this function handles gltf animation seeking, which are more complicated than the plain animation seeking from anime JS as they have their own time and mixer\n * @param {object} animation gltf action (animation) that's imported from gltf model that's imported from blender and converted to a jsx component using gltfjsx from https://github.com/pmndrs/gltfjsx\n * @param {number} progress  value emited from the generic timeline from animHandler.js for the specific action\n * @param {object} playbackControllerRef is a ref that is used to check if the naimation is being played backwards\n * @param {number | null} customAnimationDuration is an optional value provided to change the animation duration default value\n * @param {boolean} clampWhenFinished i optional value provided to set animation clampWhenFinished https://threejs.org/docs/#api/en/animation/AnimationAction.clampWhenFinished\n * @param {boolean} onlyOnce optional value provided if the animation should be played only once\n */\nexport function seekGltfAnimation(\n  animation,\n  progress,\n  playbackControllerRef,\n  customAnimationDuration = null,\n  clampWhenFinished = true,\n  repetitions = 1\n) {\n  if (!animation) return;\n  animation.reset();\n\n  animation.clampWhenFinished = clampWhenFinished;\n  animation.repetitions = repetitions;\n\n  if (customAnimationDuration) {\n    animation.setDuration(customAnimationDuration);\n  }\n\n  //check if animation is playing backwards\n  if (playbackControllerRef.current > progress) {\n    const factor = customAnimationDuration / 100;\n    animation._mixer.setTime(progress * factor);\n  } else {\n    //animation is playing forward\n    animation.timeScale = 1;\n    animation._mixer.setTime((animation._clip.duration * progress) / 100);\n    animation.play();\n  }\n  //very important\n  playbackControllerRef.current = progress;\n}\n","import { Vector3 } from \"three\";\n\nfunction createSpiralPathFromCoordinateWithRadius({\n  coordinate = [0, 0, 0],\n  radius = 1,\n  spirals = 5,\n  heightDivider = 2,\n  direction = -1,\n  type = null,\n}) {\n  let vector3Array = [];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  const z = coordinate[2];\n  for (let i = 0; i < spirals; i++) {\n    const yCord = y + (radius / heightDivider) * direction * i;\n    const v1 = new Vector3(x, yCord, z);\n    const v2 = new Vector3(x - radius, yCord, z + radius);\n    const v3 = new Vector3(x, yCord, z + radius * 2);\n    const v4 = new Vector3(x + radius, yCord, z + radius);\n\n    vector3Array.push(v1);\n    if (type === \"double\") vector3Array.push(v1);\n    if (type === \"twisted\")\n      vector3Array.push(new Vector3(v1.x + 2, v1.y + 2, v1.z + 2));\n    if (type === \"twistedDown\")\n      vector3Array.push(new Vector3(v1.x - 2, v1.y - 2, v1.z - 2));\n\n    // vector3Array.push(new Vector3(x +2, yCord +2, z +2));\n    vector3Array.push(v2);\n    if (type === \"double\") vector3Array.push(v2);\n    if (type === \"twisted\")\n      vector3Array.push(new Vector3(v2.x + 2, v2.y + 2, v2.z + 2));\n    if (type === \"twistedDown\")\n      vector3Array.push(new Vector3(v2.x - 2, v2.y - 2, v2.z - 2));\n\n    // vector3Array.push(new Vector3(x - radius +2, yCord +2, z + radius +2));\n    vector3Array.push(v3);\n    if (type === \"double\") vector3Array.push(v3);\n    if (type === \"twisted\")\n      vector3Array.push(new Vector3(v3.x + 2, v3.y + 2, v3.z + 2));\n    if (type === \"twistedDown\")\n      vector3Array.push(new Vector3(v3.x - 2, v3.y - 2, v3.z - 2));\n\n    // vector3Array.push(new Vector3(x +2, yCord +2, z + radius * 2 +2));\n    vector3Array.push(v4);\n    if (type === \"double\") vector3Array.push(v4);\n    if (type === \"twisted\")\n      vector3Array.push(new Vector3(v4.x + 2, v4.y + 2, v4.z + 2));\n    if (type === \"twistedDown\")\n      vector3Array.push(new Vector3(v4.x - 2, v4.y - 2, v4.z - 2));\n  }\n\n  const lastPosition = vector3Array[vector3Array.length - 1];\n\n  return { points: vector3Array, lastPosition };\n}\n\nexport default createSpiralPathFromCoordinateWithRadius;\n","const useObject = (set, get, key) => {\n  return {\n    [key]: {\n      position: null,\n      rotation: null,\n      rotationAngle: null,\n      animationTime: null,\n      initialTrajectoryPointAnimationTime: null,\n      lastChanged: null,\n      progress: null,\n      scaleFactor: null,\n      scrollY: null,\n      scrollingStopped: null,\n\n      move(position) {\n        set((state) => ({\n          [key]: {\n            ...state[key],\n            lastChanged: \"position\",\n            position,\n          },\n        }));\n      },\n      rotate(rotation) {\n        set((state) => ({\n          [key]: {\n            ...state[key],\n            lastChanged: \"rotation\",\n            rotation,\n          },\n        }));\n      },\n      setRotationAngle(rotationAngle) {\n        set((state) => ({\n          [key]: {\n            ...state[key],\n            lastChanged: \"rotationAngle\",\n            rotationAngle,\n          },\n        }));\n      },\n      setScaleFactor(scaleFactor) {\n        set((state) => ({\n          [key]: {\n            ...state[key],\n            lastChanged: \"scaleFactor\",\n            scaleFactor,\n          },\n        }));\n      },\n      setAnimationTime(animationTime) {\n        set((state) => ({\n          [key]: {\n            ...state[key],\n            lastChanged: \"animationTime\",\n            animationTime,\n          },\n        }));\n      },\n      setInitialTrajectoryPointAnimationTime(\n        initialTrajectoryPointAnimationTime\n      ) {\n        set((state) => ({\n          [key]: {\n            ...state[key],\n            lastChanged: \"initialTrajectoryPointAnimationTime\",\n            initialTrajectoryPointAnimationTime,\n          },\n        }));\n      },\n      setScrollY(scrollY) {\n        set((state) => ({\n          [key]: {\n            ...state[key],\n            lastChanged: \"scrollY\",\n            scrollY,\n          },\n        }));\n      },\n      setProgress(progress) {\n        set((state) => ({\n          [key]: {\n            ...state[key],\n            lastChanged: \"progress\",\n            sameProgress: state.progress === progress,\n            progress,\n          },\n        }));\n      },\n      setScrollingStopped(scrollingStopped) {\n        set((state) => ({\n          [key]: {\n            ...state[key],\n            lastChanged: \"scrollingStopped\",\n            scrollingStopped,\n          },\n        }));\n      },\n    },\n  };\n};\n\nexport default useObject;\n","import create from \"zustand\";\nimport { subscribeWithSelector } from \"zustand/middleware\";\n\nimport useObject from \"./object\";\n\nconst useStore = create(\n  subscribeWithSelector((set, get) => ({\n    ...useObject(set, get, \"world\"),\n    ...useObject(set, get, \"paperPlane\"),\n    ...useObject(set, get, \"fatstronaut\"),\n    ...useObject(set, get, \"sky\"),\n    ...useObject(set, get, \"camera\"),\n\n    //TODO: set scrollstatus checks before each update.\n    //TODO: separate initialAnimation,experience,shet,plane to different files\n    //TODO: create state modifier function with key string as arguments (or don't do that)\n    scrollStatus: {\n      isScrolling: false,\n      setIsSCrolling(isScrolling) {\n        set((state) => ({\n          scrollStatus: {\n            ...state.scrollStatus,\n            isScrolling,\n          },\n        }));\n      },\n    },\n\n    //todo: change name to mutual animations\n    initialAnimation: {\n      //todo: change name to intial animations progress\n      progress: null,\n      planeAndSheetReverseOpacitiesProgress: null,\n      lastChanged: null,\n      setProgress(progress) {\n        set((state) => {\n          return {\n            initialAnimation: {\n              ...state.initialAnimation,\n              progress,\n              lastChanged: \"progress\",\n            },\n          };\n        });\n      },\n      setPlaneAndSheetReverseOpacitiesProgress(\n        planeAndSheetReverseOpacitiesProgress\n      ) {\n        set((state) => {\n          return {\n            initialAnimation: {\n              ...state.initialAnimation,\n              planeAndSheetReverseOpacitiesProgress,\n              lastChanged: \"planeAndSheetReverseOpacitiesProgress\",\n            },\n          };\n        });\n      },\n    },\n    experience: {\n      visible: false,\n      //initial animations progress values\n      initialJoinProgress: null,\n      initialGoProgress: null,\n      lastChanged: null,\n      initialScaleProgress: null,\n      experienceCubesToClockPositionProgress: null,\n      experienceCubesToClockRotationProgress: null,\n\n      //clock animation progress values\n      toClockProgress: null,\n      clockMoveProgress: null,\n      timeDefinitionProgress: null,\n      clockCloseProgress: null,\n      timeDefinitionCloseProgress: null,\n\n      //camel animation progress values\n      cubesToCamelPositionProgress: null,\n      cubesToCamelRotationProgress: null,\n      toCamelProgress: null,\n      camelMoveProgress: null,\n      patienceDefinitionProgress: null,\n      camelGoProgress: null,\n      patienceDefitionCloseProgress: null,\n\n      //android animation progress values\n      cubesToAndroidPositionProgress: null,\n      cubesToAndroidRotationProgress: null,\n      toAndroidProgress: null,\n      androidParagraphProgress: null,\n      androidMoveProgress: null,\n      androidGoProgress: null,\n      androidParagraphCloseProgress: null,\n\n      //apple animation progress values\n      experienceCubesToApplePositionProgress: null,\n      experienceCubesToAppleRotationProgress: null,\n      toAppleProgress: null,\n      appleParagraphProgress: null,\n      appleParagraphCloseProgress: null,\n      appleMoveProgress: null,\n      appleGoProgress: null,\n\n      //react animation progress values\n      cubesToReactPositionProgress: null,\n      cubesToReactRotationProgress: null,\n\n      //flower\n      flowerColorsProgress: null,\n      toFlowerProgress: null,\n      flowerParagraphProgress: null,\n      flowerParagraphCloseProgress: null,\n\n      //pineapple\n      pineappleColorsProgress: null,\n      toPineAppleProgress: null,\n      pineappleParagraphProgress: null,\n      pineappleParagraphCloseProgress: null,\n\n      //cannon\n      cannonColorsProgress: null,\n      toCannonProgress: null,\n      cannonParagraphProgress: null,\n      cannonParagraphCloseProgress: null,\n\n      setInitialJoinProgress(initialJoinProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              initialJoinProgress,\n              lastChanged: \"initialJoinProgress\",\n            },\n          };\n        });\n      },\n      setInitialScaleProgress(initialScaleProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              initialScaleProgress,\n              lastChanged: \"initialScaleProgress\",\n            },\n          };\n        });\n      },\n      setInitialGoProgress(initialGoProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              initialGoProgress,\n              lastChanged: \"initialGoProgress\",\n            },\n          };\n        });\n      },\n      setExperienceCubesToClockPositionProgress(\n        experienceCubesToClockPositionProgress\n      ) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              experienceCubesToClockPositionProgress,\n              lastChanged: \"experienceCubesToClockPositionProgress\",\n            },\n          };\n        });\n      },\n\n      setExperienceCubesToClockRotationProgress(\n        experienceCubesToClockRotationProgress\n      ) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              experienceCubesToClockRotationProgress,\n              lastChanged: \"experienceCubesToClockRotationProgress\",\n            },\n          };\n        });\n      },\n      setToClockProgress(toClockProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              toClockProgress,\n              lastChanged: \"toClockProgress\",\n            },\n          };\n        });\n      },\n      setClockMoveProgress(clockMoveProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              clockMoveProgress,\n              lastChanged: \"clockMoveProgress\",\n            },\n          };\n        });\n      },\n      setTimeDefinitionProgress(timeDefinitionProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              timeDefinitionProgress,\n              lastChanged: \"timeDefinitionProgress\",\n            },\n          };\n        });\n      },\n      setClockCloseProgress(clockCloseProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              clockCloseProgress,\n              lastChanged: \"clockCloseProgress\",\n            },\n          };\n        });\n      },\n      setTimeDefintionCloseProgress(timeDefinitionCloseProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              timeDefinitionCloseProgress,\n              lastChanged: \"timeDefinitionCloseProgress\",\n            },\n          };\n        });\n      },\n      setCubesToCamelPositionProgress(cubesToCamelPositionProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cubesToCamelPositionProgress,\n              lastChanged: \"cubesToCamelPositionProgress\",\n            },\n          };\n        });\n      },\n      setCubesToCamelRotationProgress(cubesToCamelRotationProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cubesToCamelRotationProgress,\n              lastChanged: \"cubesToCamelRotationProgress\",\n            },\n          };\n        });\n      },\n      setToCamelProgress(toCamelProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              toCamelProgress,\n              lastChanged: \"toCamelProgress\",\n            },\n          };\n        });\n      },\n      setCamelMoveProgress(camelMoveProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              camelMoveProgress,\n              lastChanged: \"camelMoveProgress\",\n            },\n          };\n        });\n      },\n      setPatienceDefinitonProgress(patienceDefinitionProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              patienceDefinitionProgress,\n              lastChanged: \"patienceDefinitionProgress\",\n            },\n          };\n        });\n      },\n      setCamelGoProgress(camelGoProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              camelGoProgress,\n              lastChanged: \"camelGoProgress\",\n            },\n          };\n        });\n      },\n      setPatinceDefinitionCloseProgres(patienceDefitionCloseProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              patienceDefitionCloseProgress,\n              lastChanged: \"patienceDefitionCloseProgress\",\n            },\n          };\n        });\n      },\n      setCubesToAndroidPositionProgress(cubesToAndroidPositionProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cubesToAndroidPositionProgress,\n              lastChanged: \"cubesToAndroidPositionProgress\",\n            },\n          };\n        });\n      },\n      setCubesToAndroidRotationProgress(cubesToAndroidRotationProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cubesToAndroidRotationProgress,\n              lastChanged: \"cubesToAndroidRotationProgress\",\n            },\n          };\n        });\n      },\n      setToAndroidProgress(toAndroidProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              toAndroidProgress,\n              lastChanged: \"toAndroidProgress\",\n            },\n          };\n        });\n      },\n      setAndroidParagraphProgress(androidParagraphProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              androidParagraphProgress,\n              lastChanged: \"androidParagraphProgress\",\n            },\n          };\n        });\n      },\n      setAndroidMoveProgress(androidMoveProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              androidMoveProgress,\n              lastChanged: \"androidMoveProgress\",\n            },\n          };\n        });\n      },\n      setAndroidGoProgress(androidGoProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              androidGoProgress,\n              lastChanged: \"androidGoProgress\",\n            },\n          };\n        });\n      },\n      setAndroidParagraphCloseProgress(androidParagraphCloseProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              androidParagraphCloseProgress,\n              lastChanged: \"androidParagraphCloseProgress\",\n            },\n          };\n        });\n      },\n      setExperienceCubesToApplePositionProgress(\n        experienceCubesToApplePositionProgress\n      ) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              experienceCubesToApplePositionProgress,\n              lastChanged: \"experienceCubesToApplePositionProgress\",\n            },\n          };\n        });\n      },\n      setExperienceCubesToAppleRotationProgress(\n        experienceCubesToAppleRotationProgress\n      ) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              experienceCubesToAppleRotationProgress,\n              lastChanged: \"experienceCubesToAppleRotationProgress\",\n            },\n          };\n        });\n      },\n      setToAppleProgress(toAppleProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              toAppleProgress,\n              lastChanged: \"toAppleProgress\",\n            },\n          };\n        });\n      },\n      setAppleParagraphProgress(appleParagraphProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              appleParagraphProgress,\n              lastChanged: \"appleParagraphProgress\",\n            },\n          };\n        });\n      },\n      setAppleMoveProgress(appleMoveProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              appleMoveProgress,\n              lastChanged: \"appleMoveProgress\",\n            },\n          };\n        });\n      },\n      setAppleGoProgress(appleGoProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              appleGoProgress,\n              lastChanged: \"appleGoProgress\",\n            },\n          };\n        });\n      },\n      setAppleParagraphCloseProgress(appleParagraphCloseProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              appleParagraphCloseProgress,\n              lastChanged: \"appleParagraphCloseProgress\",\n            },\n          };\n        });\n      },\n      setCubesToReactPositionProgress(cubesToReactPositionProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cubesToReactPositionProgress,\n              lastChanged: \"cubesToReactPositionProgress\",\n            },\n          };\n        });\n      },\n      setCubesToReactRotationProgress(cubesToReactRotationProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cubesToReactRotationProgress,\n              lastChanged: \"cubesToReactRotationProgress\",\n            },\n          };\n        });\n      },\n      setFlowerColorsProgress(flowerColorsProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              flowerColorsProgress,\n              lastChanged: \"flowerColorsProgress\",\n            },\n          };\n        });\n      },\n      setToFLowerProgress(toFlowerProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              toFlowerProgress,\n              lastChanged: \"toFlowerProgress\",\n            },\n          };\n        });\n      },\n      setFlowerParagraphProgress(flowerParagraphProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              flowerParagraphProgress,\n              lastChanged: \"flowerParagraphProgress\",\n            },\n          };\n        });\n      },\n      setFlowerParagraphCloseProgress(flowerParagraphCloseProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              flowerParagraphCloseProgress,\n              lastChanged: \"flowerParagraphCloseProgress\",\n            },\n          };\n        });\n      },\n      setPineappleColorsProgress(pineappleColorsProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              pineappleColorsProgress,\n              lastChanged: \"pineappleColorsProgress\",\n            },\n          };\n        });\n      },\n      setToPinappleProgress(toPineAppleProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              toPineAppleProgress,\n              lastChanged: \"toPineAppleProgress\",\n            },\n          };\n        });\n      },\n      setPineappleParagraphProgress(pineappleParagraphProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              pineappleParagraphProgress,\n              lastChanged: \"pineappleParagraphProgress\",\n            },\n          };\n        });\n      },\n      setPineappleParagraphCloseProgress(pineappleParagraphCloseProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              pineappleParagraphCloseProgress,\n              lastChanged: \"pineappleParagraphCloseProgress\",\n            },\n          };\n        });\n      },\n      setCannonColorsProgress(cannonColorsProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cannonColorsProgress,\n              lastChanged: \"cannonColorsProgress\",\n            },\n          };\n        });\n      },\n      setToCannonProgress(toCannonProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              toCannonProgress,\n              lastChanged: \"toCannonProgress\",\n            },\n          };\n        });\n      },\n      setCannonParagraphProgress(cannonParagraphProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cannonParagraphProgress,\n              lastChanged: \"cannonParagraphProgress\",\n            },\n          };\n        });\n      },\n      setCannonParagraphCloseProgress(cannonParagraphCloseProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cannonParagraphCloseProgress,\n              lastChanged: \"cannonParagraphCloseProgress\",\n            },\n          };\n        });\n      },\n    },\n    sheet: {\n      moveToCenterProgress: null,\n      rotateToSheetProgress: null,\n      sheetProgress: null,\n      backRotateProgress: null,\n      fixSheetPositonbeforeConvertingToSheetProgress: null,\n      lastChanged: null,\n      setMoveToCenterProgress(moveToCenterProgress) {\n        set((state) => {\n          return {\n            sheet: {\n              ...state.sheet,\n              moveToCenterProgress,\n              lastChanged: \"moveToCenterProgress\",\n            },\n          };\n        });\n      },\n      setRotateToSheetProgress(rotateToSheetProgress) {\n        set((state) => {\n          return {\n            sheet: {\n              ...state.sheet,\n              rotateToSheetProgress,\n              lastChanged: \"rotateToSheetProgress\",\n            },\n          };\n        });\n      },\n      setSheetProgress(sheetProgress) {\n        set((state) => {\n          return {\n            sheet: {\n              ...state.sheet,\n              sheetProgress,\n              lastChanged: \"sheetProgress\",\n            },\n          };\n        });\n      },\n      setBackRotateProgress(backRotateProgress) {\n        set((state) => {\n          return {\n            sheet: {\n              ...state.sheet,\n              backRotateProgress,\n              lastChanged: \"backRotateProgress\",\n            },\n          };\n        });\n      },\n      setFixSheetPositonbeforeConvertingToSheetProgress(\n        fixSheetPositonbeforeConvertingToSheetProgress\n      ) {\n        set((state) => {\n          return {\n            sheet: {\n              ...state.sheet,\n              fixSheetPositonbeforeConvertingToSheetProgress,\n              lastChanged: \"fixSheetPositonbeforeConvertingToSheet\",\n            },\n          };\n        });\n      },\n    },\n    plane: {\n      planeFoldingProgress: null,\n      planeToInitialTrajectoryPointProgress: null,\n      planeToClockProgress: null,\n      lastChanged: null,\n      planeToCamelProgres: null,\n      planeToAndroidProgress: null,\n      planeToAppleProgress: null,\n      planeToReactPositionProgress: null,\n      setPlaneFoldingProgress(planeFoldingProgress) {\n        set((state) => {\n          return {\n            plane: {\n              ...state.plane,\n              planeFoldingProgress,\n              lastChanged: \"planeFoldingProgress\",\n            },\n          };\n        });\n      },\n      setPlaneToInitialTrajectoryPointProgress(\n        planeToInitialTrajectoryPointProgress\n      ) {\n        set((state) => {\n          return {\n            plane: {\n              ...state.plane,\n              planeToInitialTrajectoryPointProgress,\n              lastChanged: \"planeToInitialTrajectoryPointProgress\",\n            },\n          };\n        });\n      },\n      setPlaneToClockProgress(planeToClockProgress) {\n        set((state) => {\n          return {\n            plane: {\n              ...state.plane,\n              planeToClockProgress,\n              lastChanged: \"planeToClockProgress\",\n            },\n          };\n        });\n      },\n      setPlaneToCamelProgress(planeToCamelProgres) {\n        set((state) => {\n          return {\n            plane: {\n              ...state.plane,\n              planeToCamelProgres,\n              lastChanged: \"planeToCamelProgres\",\n            },\n          };\n        });\n      },\n      setPlaneToAndroidProgress(planeToAndroidProgress) {\n        set((state) => {\n          return {\n            plane: {\n              ...state.plane,\n              planeToAndroidProgress,\n              lastChanged: \"planeToAndroidProgress\",\n            },\n          };\n        });\n      },\n      setPlaneToAppleProgress(planeToAppleProgress) {\n        set((state) => {\n          return {\n            plane: {\n              ...state.plane,\n              planeToAppleProgress,\n              lastChanged: \"planeToAppleProgress\",\n            },\n          };\n        });\n      },\n      setPlaneToReactPositionProgress(planeToReactPositionProgress) {\n        set((state) => {\n          return {\n            plane: {\n              ...state.plane,\n              planeToReactPositionProgress,\n              lastChanged: \"planeToReactPositionProgress\",\n            },\n          };\n        });\n      },\n    },\n  }))\n);\n\nexport default useStore;\n","import { forwardRef } from \"react\";\nimport { Html } from \"@react-three/drei\";\n\nfunction Paragraph(\n  {\n    title = \"Time\",\n    pronounciation = \"/tʌɪm/\",\n    definition = \"Time is valuable, and it's running\",\n    sentence1 = \" If you dont' have the time right now\",\n    sentence2 = \" Just download my resume by pressing [SPACE]\",\n    conclusion = \"Otherwise, keep scrolling\",\n    position = [15, 4, 0],\n    children,\n  },\n  ref\n) {\n  return (\n    <Html\n      position={position}\n      ref={ref}\n      transform\n      sprite\n      style={{\n        opacity: 0,\n      }}\n    >\n      <h1 style={{ color: \"white\" }}>{title}</h1>\n      <h2 style={{ color: \"white\" }}>{pronounciation}</h2>\n      <h3 style={{ color: \"white\" }}>{definition}</h3>\n      <p style={{ color: \"white\" }}>{sentence1}</p>\n      <p style={{ color: \"white\" }}>{sentence2}</p>\n      <p style={{ color: \"white\" }}>{conclusion}</p>\n      {children}\n    </Html>\n  );\n}\n\nexport default forwardRef(Paragraph);\n","import { forwardRef } from \"react\";\n\nimport Paragraph from \"./Paragraph\";\n\nfunction Time(_, ref) {\n  return (\n    <Paragraph\n      ref={ref}\n      position={[15, 4, 0]}\n      title=\"Time\"\n      pronounciation=\"/tʌɪm/\"\n      definition=\"Time is valuable and it's running\"\n      sentence1=\"If you dont' have the time right now\"\n      sentence2=\"Just download my resume by pressing [SPACE]\"\n      conclusion=\"Otherwise keep scrolling\"\n    />\n  );\n}\n\nexport default forwardRef(Time);\n","import { forwardRef } from \"react\";\n\nimport Paragraph from \"./Paragraph\";\n\nfunction Patience(_, ref) {\n  return (\n    <Paragraph\n      ref={ref}\n      position={[-22, 2, 0]}\n      title=\"Patience\"\n      pronounciation=\"/ˈpeɪʃ(ə)ns/\"\n      definition=\"Sometimes I put myself in difficult circumstances 😤\"\n      sentence1=\"Just to endure them 💪\"\n      sentence2=\"Don't worry, I tend not to do this in work-related stuff\"\n      conclusion=\"If we don't train our patience, we cannot acomplish bigger things\"\n    />\n  );\n}\n\nexport default forwardRef(Patience);\n","import { forwardRef } from \"react\";\n\nimport Paragraph from \"./Paragraph\";\n\nfunction Android(_, ref) {\n  return (\n    <Paragraph\n      ref={ref}\n      position={[0, 0, 5]}\n      title=\"Android\"\n      pronounciation=\"/ˈpeɪʃ(ə)ns/\"\n      definition=\"This is the starting point of my career as a Software Developer\"\n      sentence1=\"I learned the internal mobile lifecycle and some OOP design patterns\"\n      sentence2=\"Build and shipped 2 Android Native Apps\"\n      conclusion=\"Press [1] for app 1 and press [2] for app 2\"\n    />\n  );\n}\n\nexport default forwardRef(Android);\n","import { forwardRef } from \"react\";\n\nimport Paragraph from \"./Paragraph\";\n\nfunction IOS(_, ref) {\n  return (\n    <Paragraph\n      ref={ref}\n      position={[0, 2, 10]}\n      title=\"iOS\"\n      pronounciation=\"/ʌɪəʊˈɛs/\"\n      definition=\"iOS development was next, and I had the chance to learn some even more complex design patterns on SWIFT\"\n      sentence1=\"Refactored, Maintained and Built from scratch multipe iOS Apps qe the ti Bash\"\n      sentence2=\"iOS was fun, but React Was better\"\n      conclusion=\"Press [1] for app 1 and press [2] for app 2\"\n    />\n  );\n}\n\nexport default forwardRef(IOS);\n","import { forwardRef } from \"react\";\n\nimport Paragraph from \"./Paragraph\";\n\nfunction ReactJS(_, ref) {\n  return (\n    <Paragraph\n      ref={ref}\n      position={[0, 0, 0]}\n      title=\"React JS\"\n      pronounciation=\"/rɪˈakt/\"\n      definition=\"I got into the javascript and react world, and I'm here to stay\"\n      sentence1=\"bla bla bla bla\"\n      sentence2=\"la la la la\"\n      conclusion=\"ahahhahahhahhahaha\"\n    />\n  );\n}\n\nexport default forwardRef(ReactJS);\n","export const objectPositionsInSpace = {\n  planeInitialPosition: { x: 15, y: -1.09, z: 682 },\n  clock: {\n    x: 0,\n    y: 0,\n    z: 500,\n  },\n  camel: {\n    x: 50,\n    y: 10,\n    z: 400,\n  },\n  android: {\n    x: 100,\n    y: 0,\n    z: 300,\n  },\n  ios: {\n    x: 0,\n    y: 10,\n    z: 200,\n  },\n  react: {\n    x: 0,\n    y: 0,\n    z: 100,\n  },\n};\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useEffect, useRef } from \"react\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport useStore from \"../store\";\nimport anime from \"animejs/lib/anime.es\";\n\nimport { Time, Patience, Android, IOS, ReactJS } from \"./paragraphs\";\n\nimport { seekGltfAnimation } from \"../helpers/animation\";\nimport { objectPositionsInSpace } from \"./constants\";\nimport { AnimationMixer, LoopRepeat, LoopOnce, LoopPingPong } from \"three\";\nimport { AnimationAction } from \"three/src/animation/AnimationAction\";\n\n//https://discourse.threejs.org/t/playing-an-animation-changes-behaviour-of-next-animation/14928/7\n\nexport default function Model({ ...props }) {\n  const { camera } = useThree();\n\n  //cube refs\n  const mainContainer = useRef();\n  const secondaryContainer = useRef();\n\n  //material refs\n  const mainCubeMaterial = useRef();\n  const mainCubeFaceMaterial = useRef();\n  const cube1Material = useRef();\n  const cube2Material = useRef();\n  const cube3Material = useRef();\n  const cube4Material = useRef();\n\n  //TODO: REFACTOR THE PARAGRAPHGS with forwardrefs\n  //paragraphs ref\n  const timeDefinition = useRef();\n  const patienceDefintion = useRef();\n  const andoridParagraph = useRef();\n  const appleParagraph = useRef();\n  const reactParagraph = useRef();\n\n  const { nodes, animations } = useGLTF(process.env.PUBLIC_URL + \"/all.glb\");\n  const { actions, mixer } = useAnimations(animations, mainContainer);\n  const activeAnimation = useRef({});\n\n  function play({ progress = 0.0, timeTweak = 0.0, animationLoop = LoopOnce }) {\n    const action = activeAnimation.current;\n    action.repetitions = 1;\n    action.setLoop(animationLoop);\n\n    if (action.time <= action._clip.duration - timeTweak) {\n      //handle transform animation reset glitch\n      action.reset().play();\n      mixer.setTime((action._clip.duration / 100) * progress);\n    } else {\n      action.paused = true;\n    }\n  }\n\n  useEffect(() => {\n    if (!mainContainer.current) return;\n    const { clock, camel, android, ios, react } = objectPositionsInSpace;\n\n    const _ = anime({\n      targets: mainContainer.current.position,\n      x: [15.45, 15.45],\n      y: [-0.6, -0.6],\n      z: [681.4, 681.4],\n      duration: 1,\n      autoplay: true,\n    });\n    const __ = anime({\n      targets: mainContainer.current.rotation,\n      y: [Math.PI / 8, Math.PI / 8],\n      duration: 1,\n      autoplay: true,\n    });\n\n    //initial rotation\n    const initialRotation = anime({\n      targets: mainContainer.current.rotation,\n      x: 0,\n      y: 0,\n      z: 0,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //store listener for intial anim\n    const unsubscribeInitialAnimation = useStore.subscribe(\n      (state) => state.initialAnimation,\n      ({ progress }) => {\n        initialRotation.seek(progress);\n      }\n    );\n\n    //initial scaleDown for playing the go animation\n    const scaleDown = anime({\n      targets: secondaryContainer.current.scale,\n      x: 1,\n      y: 1,\n      z: 1,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //joining the cubes.\n    const join = anime({\n      targets: secondaryContainer.current.position,\n      x: secondaryContainer.current.position.x - 2.6,\n      y: 0,\n      z: 0,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //bring cubes to the clock position\n    const cubesToClockPosition = anime({\n      targets: mainContainer.current.position,\n      //small adjustments for the camera\n      x: [15.45, clock.x - 2],\n      y: [-0.6, clock.y + 8],\n      z: [681.4, clock.z + 50],\n      duration: 500,\n      autoplay: false,\n    });\n\n    //rotate cubes to show good clock animation\n    const cubesToClockRotation = anime({\n      targets: mainContainer.current.rotation,\n      y: [Math.PI / 8, Math.PI / 3],\n      duration: 500,\n      autoplay: false,\n    });\n\n    //show timeDefinition\n    const timeDefinitionShow = anime({\n      targets: timeDefinition.current.style,\n      opacity: 1,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //hide timeDefinition\n    const timeDefinitionClose = anime({\n      targets: timeDefinition.current.style,\n      opacity: 0,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //TODO: set clock colors\n\n    //bring cubes to the camel position\n    const cubesToCamelPosition = anime({\n      targets: mainContainer.current.position,\n      x: [clock.x - 4, camel.x - 10],\n      y: [clock.y + 10, camel.y + 5],\n      z: [clock.z + 20, camel.z + 40],\n      duration: 500,\n      autoplay: false,\n    });\n\n    //rotate cubes for camel anim\n    const rotateCubesForCamelAnim = anime({\n      targets: mainContainer.current.rotation,\n      y: [0, -Math.PI / 3],\n      duration: 500,\n      autoplay: false,\n    });\n\n    //show patience definition\n    const showPatienceDefinition = anime({\n      targets: patienceDefintion.current.style,\n      opacity: 1,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //hide patience definition\n    const hidePatienceDefinition = anime({\n      targets: patienceDefintion.current.style,\n      opacity: 0,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //bring the cubes to android position\n    const cubesToAndroidPosition = anime({\n      targets: mainContainer.current.position,\n      x: [camel.x - 4, android.x - 6],\n      y: [camel.y + 5, android.y + 3],\n      z: [camel.z + 20, android.z + 36],\n      duration: 500,\n      autoplay: false,\n    });\n\n    const rotateCubesForAndroidAnimation = anime({\n      targets: mainContainer.current.rotation,\n      y: [0, Math.PI / 3],\n      duration: 500,\n      autoplay: false,\n    });\n\n    //show android paragraph\n    const showAndroidParagraph = anime({\n      targets: andoridParagraph.current.style,\n      opacity: 1,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //hide android paragraph\n    const hideAndroidParagraph = anime({\n      targets: andoridParagraph.current.style,\n      opacity: 0,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //bring the cubes to apple position\n    const cubesToApplePosition = anime({\n      targets: mainContainer.current.position,\n      x: [android.x + 2, ios.x + 15],\n      y: [android.y, ios.y],\n      z: [android.z + 20, ios.z + 40],\n      duration: 500,\n      autoplay: false,\n    });\n    //adjust helper cubes 4 apple animation\n    //TODO: adjust\n\n    //rotate main cubes for apple animation\n    //TODO: adjust\n    const cubesToAppleRotation = anime({\n      targets: mainContainer.current.rotation,\n      y: [Math.PI / 3, Math.PI / 2],\n      duration: 500,\n      autoplay: false,\n    });\n\n    //show apple paragraph\n    const showAppleParagraph = anime({\n      targets: appleParagraph.current.style,\n      opacity: 1,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //hideAppleParagraph\n    const hideAppleParagraph = anime({\n      targets: appleParagraph.current.style,\n      opacity: 0,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //cubes to react animation\n    const cubesToReactPosition = anime({\n      targets: mainContainer.current.position,\n      x: [ios.x - 4, react.x - 2],\n      y: [ios.y, react.y + 2],\n      z: [ios.z + 30, react.z + 20],\n      duration: 500,\n      autoplay: false,\n    });\n\n    //cubes to react rotation\n    const cubesToReactRotation = anime({\n      targets: mainContainer.current.rotation,\n      y: Math.PI / 2, //TODO: check this\n      duration: 500,\n      autoplay: false,\n    });\n\n    //show react paragraph\n    const showReactParagraph = anime({\n      targets: reactParagraph.current.style,\n      opacity: 1,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //flower colors\n    //TODO: add refs for cube materials or fowradref them from another file or use context and have them reused for performance\n    //this initial time just go with local refs to save time (23:35 pm me to next day's 8:00 am me)\n\n    const mainCubeMaterialToXColor = anime({\n      targets: mainCubeFaceMaterial.current.color,\n    });\n\n    const {\n      go,\n      toClock,\n      clockMove,\n      toCamel,\n      camelMove,\n      toAndroid,\n      androidMove,\n      toApple,\n      appleMove,\n      toFlower,\n      toPineapple,\n      toCannon,\n    } = actions;\n    const unsubscribeExperieneStore = useStore.subscribe(\n      (state) => state.experience,\n      ({\n        //last changed (very important)\n        lastChanged,\n        //intial animation\n        initialJoinProgress,\n        initialGoProgress,\n        initialScaleProgress,\n\n        //clock\n        experienceCubesToClockPositionProgress,\n        experienceCubesToClockRotationProgress,\n        toClockProgress,\n        clockMoveProgress,\n        timeDefinitionProgress,\n        clockCloseProgress,\n        timeDefinitionCloseProgress,\n\n        //camel\n        cubesToCamelPositionProgress,\n        cubesToCamelRotationProgress,\n        toCamelProgress,\n        patienceDefinitionProgress,\n        camelMoveProgress,\n        camelGoProgress,\n        patienceDefitionCloseProgress,\n\n        //android\n        cubesToAndroidPositionProgress,\n        cubesToAndroidRotationProgress,\n        toAndroidProgress,\n        androidParagraphProgress,\n        androidMoveProgress,\n        androidGoProgress,\n        androidParagraphCloseProgress,\n\n        //apple\n        experienceCubesToApplePositionProgress,\n        experienceCubesToAppleRotationProgress,\n        toAppleProgress,\n        appleParagraphProgress,\n        appleMoveProgress,\n        appleGoProgress,\n        appleParagraphCloseProgress,\n\n        //react\n        cubesToReactPositionProgress,\n        cubesToReactRotationProgress,\n        //fower\n        toFlowerProgress,\n        flowerColorsProgress,\n        flowerParagraphProgress,\n        flowerParagraphCloseProgress,\n        //pineapple\n        toPineAppleProgress,\n        pineappleColorsProgress,\n        pineappleParagraphProgress,\n        pineappleParagraphCloseProgress,\n        //cannon\n        toCannonProgress,\n        cannonColorsProgress,\n        cannonParagraphProgress,\n        cannonParagraphCloseProgress,\n      }) => {\n        switch (lastChanged) {\n          case \"initialJoinProgress\":\n            join.seek(initialJoinProgress);\n            break;\n          case \"initialScaleProgress\":\n            scaleDown.seek(initialScaleProgress);\n\n            mixer.stopAllAction();\n            break;\n          case \"initialGoProgress\":\n            if (activeAnimation.current !== go) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = go;\n            play({\n              progress: initialGoProgress,\n              timeTweak: 0.1,\n            });\n            break;\n          case \"experienceCubesToClockPositionProgress\":\n            cubesToClockPosition.seek(experienceCubesToClockPositionProgress);\n            break;\n          case \"experienceCubesToClockRotationProgress\":\n            cubesToClockRotation.seek(experienceCubesToClockRotationProgress);\n            break;\n          case \"toClockProgress\":\n            if (activeAnimation.current !== toClock) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = toClock;\n            play({\n              progress: toClockProgress,\n              timeTweak: 0.1,\n            });\n            break;\n          case \"clockMoveProgress\":\n            if (activeAnimation.current !== clockMove) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = clockMove;\n            play({\n              animationLoop: LoopRepeat,\n              repetitions: 1,\n              progress: clockMoveProgress,\n            });\n            break;\n          case \"timeDefinitionProgress\":\n            timeDefinitionShow.seek(timeDefinitionProgress);\n            break;\n          case \"clockCloseProgress\":\n            if (activeAnimation.current !== go) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = go;\n            play({\n              progress: clockCloseProgress,\n              timeTweak: 0.1,\n            });\n            break;\n          case \"timeDefinitionCloseProgress\":\n            timeDefinitionClose.seek(timeDefinitionCloseProgress);\n            break;\n          case \"cubesToCamelPositionProgress\":\n            cubesToCamelPosition.seek(cubesToCamelPositionProgress);\n            break;\n          case \"cubesToCamelRotationProgress\":\n            rotateCubesForCamelAnim.seek(cubesToCamelRotationProgress);\n            break;\n          case \"toCamelProgress\":\n            if (activeAnimation.current !== toCamel) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = toCamel;\n            play({\n              progress: toCamelProgress,\n              timeTweak: 0.1,\n            });\n            break;\n          case \"patienceDefinitionProgress\":\n            showPatienceDefinition.seek(patienceDefinitionProgress);\n            break;\n          case \"camelMoveProgress\":\n            if (activeAnimation.current !== camelMove) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = camelMove;\n            play({\n              progress: camelMoveProgress,\n              moveTweak: 0.055,\n              animationLoop: LoopRepeat,\n            });\n            break;\n          case \"camelGoProgress\":\n            if (activeAnimation.current !== go) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = go;\n            play({\n              progress: camelGoProgress,\n              timeTweak: 0.1,\n            });\n            break;\n          case \"patienceDefitionCloseProgress\":\n            hidePatienceDefinition.seek(patienceDefitionCloseProgress);\n            break;\n          case \"cubesToAndroidPositionProgress\":\n            cubesToAndroidPosition.seek(cubesToAndroidPositionProgress);\n            //TODO: animate color chages for cube materials and mabybe environment\n            break;\n          case \"cubesToAndroidRotationProgress\":\n            rotateCubesForAndroidAnimation.seek(cubesToAndroidRotationProgress);\n            //TODO: animate color chages for cube materials and mabybe environment\n            break;\n          case \"toAndroidProgress\":\n            if (activeAnimation.current !== toAndroid) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = toAndroid;\n            play({\n              timeTweak: 0.1,\n              progress: toAndroidProgress,\n            });\n            break;\n          case \"androidParagraphProgress\":\n            showAndroidParagraph.seek(androidParagraphProgress);\n            break;\n          case \"androidMoveProgress\":\n            if (activeAnimation.current !== androidMove) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = androidMove;\n            play({\n              moveTweak: 0.05,\n              animationLoop: LoopRepeat,\n              progress: androidMoveProgress,\n            });\n            break;\n          case \"androidGoProgress\":\n            if (activeAnimation.current !== go) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = go;\n\n            play({\n              progress: androidGoProgress,\n              timeTweak: 0.1,\n            });\n            break;\n          case \"androidParagraphCloseProgress\":\n            hideAndroidParagraph.seek(androidParagraphCloseProgress);\n            break;\n          case \"experienceCubesToApplePositionProgress\":\n            //TODO: FIX THE FISIBILITIY 4 WHEN GOING BACKWARDS\n            //adjust cubes\n            //TODO: ADJUST ALL CUBES AND ALSO ANIMATE THE COLORS HERE & MAYBE CHANGE THE DURATION TO 1000\n            cubesToApplePosition.seek(experienceCubesToApplePositionProgress);\n\n            cubesToAppleRotation.seek(experienceCubesToApplePositionProgress);\n            break;\n          case \"experienceCubesToAppleRotationProgress\":\n            cubesToAppleRotation.seek(experienceCubesToAppleRotationProgress);\n            break;\n          case \"toAppleProgress\":\n            if (activeAnimation.current !== toApple) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = toApple;\n            play({\n              timeTweak: 0.1,\n              animationLoop: LoopOnce,\n              progress: toAppleProgress,\n            });\n            break;\n          case \"appleParagraphProgress\":\n            showAppleParagraph.seek(appleParagraphProgress);\n            break;\n          case \"appleMoveProgress\":\n            if (activeAnimation.current !== appleMove) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = appleMove;\n            play({\n              animationLoop: LoopRepeat,\n              progress: appleMoveProgress,\n            });\n            break;\n          case \"appleGoProgress\":\n            if (activeAnimation.current !== go) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = go;\n\n            play({\n              progress: appleGoProgress,\n              timeTweak: 0.1,\n            });\n            break;\n          case \"appleParagraphCloseProgress\":\n            hideAppleParagraph.seek(appleParagraphCloseProgress);\n            break;\n          case \"cubesToReactPositionProgress\":\n            cubesToReactPosition.seek(cubesToReactPositionProgress);\n            break;\n          case \"cubesToReactRotationProgress\":\n            cubesToReactRotation.seek(cubesToReactRotationProgress);\n            break;\n          case \"toFlowerProgress\":\n            if (activeAnimation.current !== toFlower) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = toFlower;\n            play({\n              progress: toFlowerProgress,\n              timeTweak: 0.15,\n            });\n            break;\n          case \"flowerColorsProgress\":\n            break;\n          case \"flowerParagraphProgress\":\n            showReactParagraph.seek(flowerParagraphProgress);\n            break;\n          case \"flowerParagraphCloseProgress\":\n            break;\n          case \"toPineAppleProgress\":\n            if (activeAnimation.current !== toPineapple) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = toPineapple;\n            play({\n              progress: toPineAppleProgress,\n              timeTweak: 0.15,\n            });\n            break;\n          case \"pineappleColorsProgress\":\n            break;\n          case \"pineappleParagraphProgress\":\n            break;\n          case \"pineappleParagraphCloseProgress\":\n            break;\n          case \"toCannonProgress\":\n            if (activeAnimation.current !== toCannon) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = toCannon;\n            play({\n              progress: toCannonProgress,\n              timeTweak: 0.15,\n            });\n            break;\n          case \"cannonColorsProgress\":\n            break;\n          case \"cannonParagraphProgress\":\n            break;\n          case \"cannonParagraphCloseProgress\":\n            break;\n          default:\n            break;\n        }\n      }\n    );\n\n    return () => {\n      unsubscribeInitialAnimation();\n      unsubscribeExperieneStore();\n    };\n  }, [mainContainer.current]);\n\n  useFrame(() => {\n    if (!activeAnimation.current) return;\n    const { clockMove, camelMove, androidMove, appleMove } = actions;\n    const acAnim = activeAnimation.current;\n    if (\n      acAnim === clockMove ||\n      acAnim === androidMove ||\n      acAnim === camelMove ||\n      acAnim === androidMove\n    ) {\n      if (acAnim.time + 0.055 >= acAnim._clip.duration) {\n        acAnim.time = 0.055;\n      }\n    } else if (acAnim === appleMove) {\n      if (acAnim.time + 0.1 >= acAnim._clip.duration) {\n        acAnim.time = 0.1;\n      }\n    }\n  });\n\n  return (\n    <group\n      position={[15.45, -0.6, 681.4]}\n      rotation={[0, Math.PI / 8, 0]}\n      ref={mainContainer}\n      {...props}\n      dispose={null}\n    >\n      <mesh\n        name=\"cube\"\n        geometry={nodes.cube.geometry}\n        material={nodes.cube.material}\n        receiveShadow={true}\n        morphTargetDictionary={nodes.cube.morphTargetDictionary}\n        morphTargetInfluences={nodes.cube.morphTargetInfluences}\n      >\n        {/**this is the main cube */}\n        <meshStandardMaterial\n          {...nodes.cube.material}\n          layers={2}\n          roughness={0.8}\n          metalness={0.2}\n          emissive=\"green\"\n          ref={mainCubeMaterial}\n        />\n      </mesh>\n      <mesh\n        name=\"cube_1\"\n        geometry={nodes.cube_1.geometry}\n        material={nodes.cube_1.material}\n        morphTargetDictionary={nodes.cube_1.morphTargetDictionary}\n        morphTargetInfluences={nodes.cube_1.morphTargetInfluences}\n      >\n        {/** this is the face of the main cube */}\n        <meshStandardMaterial\n          {...nodes.cube_1.material}\n          layers={2}\n          emissive=\"#fff000\"\n          ref={mainCubeFaceMaterial}\n        />\n      </mesh>\n      <group\n        ref={secondaryContainer}\n        position={[3.1, -0.25, 0]}\n        scale={[1.255, 1.255, 1.255]}\n      >\n        <mesh\n          name=\"cube_2\"\n          geometry={nodes.cube_2.geometry}\n          material={nodes.cube_2.material}\n          morphTargetDictionary={nodes.cube_2.morphTargetDictionary}\n          morphTargetInfluences={nodes.cube_2.morphTargetInfluences}\n        >\n          <meshStandardMaterial\n            {...nodes.cube_2.material}\n            layers={2}\n            emissive=\"#00ff00\"\n            ref={cube1Material}\n          />\n        </mesh>\n        <mesh\n          name=\"cube_3\"\n          geometry={nodes.cube_3.geometry}\n          material={nodes.cube_3.material}\n          morphTargetDictionary={nodes.cube_3.morphTargetDictionary}\n          morphTargetInfluences={nodes.cube_3.morphTargetInfluences}\n        >\n          <meshStandardMaterial\n            {...nodes.cube_3.material}\n            layers={2}\n            emissive=\"#ff00ff\"\n            ref={cube2Material}\n          />\n        </mesh>\n        <mesh\n          name=\"cube_4\"\n          geometry={nodes.cube_4.geometry}\n          material={nodes.cube_4.material}\n          morphTargetDictionary={nodes.cube_4.morphTargetDictionary}\n          morphTargetInfluences={nodes.cube_4.morphTargetInfluences}\n        >\n          <meshStandardMaterial layers={2} emissive=\"red\" ref={cube3Material} />\n        </mesh>\n        <mesh\n          name=\"cube_5\"\n          geometry={nodes.cube_5.geometry}\n          material={nodes.cube_5.material}\n          morphTargetDictionary={nodes.cube_5.morphTargetDictionary}\n          morphTargetInfluences={nodes.cube_5.morphTargetInfluences}\n        >\n          <meshStandardMaterial\n            {...nodes.cube_5.material}\n            layers={2}\n            emissive=\"#ff00aa\"\n            ref={cube4Material}\n          />\n        </mesh>\n      </group>\n      <Time ref={timeDefinition} />\n      <Patience ref={patienceDefintion} />\n      <Android ref={andoridParagraph} />\n      <IOS ref={appleParagraph} />\n      <ReactJS ref={reactParagraph} />\n    </group>\n  );\n}\n\nuseGLTF.preload(process.env.PUBLIC_URL + \"/all.glb\");\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\n//the lifesaver (source):https://observablehq.com/@rveciana/three-js-object-moving-object-along-path\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Vector3, BufferGeometry, CatmullRomCurve3 } from \"three\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\nimport { useFrame, useLoader, useThree } from \"@react-three/fiber\";\nimport anime from \"animejs/lib/anime.es\";\nimport { TextureLoader } from \"three\";\n\nimport useStore from \"../store\";\nimport { seekGltfAnimation } from \"../helpers/animation\";\nimport createSpiralPathFromCoordinateWithRadius from \"./world/createPath\";\nimport { objectPositionsInSpace } from \"./constants\";\n\nexport default function Model({ ...props }) {\n  const { camera } = useThree();\n\n  const group = useRef();\n  const { nodes, animations } = useGLTF(\n    process.env.PUBLIC_URL + \"/testOnlyPlane.glb\"\n  );\n  const { actions } = useAnimations(animations, group);\n\n  const front = useLoader(TextureLoader, process.env.PUBLIC_URL + \"/front.jpg\");\n  front.flipY = false;\n  const back = useLoader(TextureLoader, process.env.PUBLIC_URL + \"/back.jpg\");\n  back.flipY = false;\n\n  //animation progress checkers for handling going backwards\n  const planeFoldingProgressChecker = useRef(0);\n  const planeToClockProgressChecker = useRef(0);\n  const planeToCamelProgressChecker = useRef(0);\n  const planeToAndroidProgressChecker = useRef(0);\n  const planeToAppleProgressChecker = useRef(0);\n  const planeToReactPositionProgressChecker = useRef(0);\n  const moveCamera = useRef(false);\n\n  const lineRef = useRef();\n\n  lineRef.current && lineRef.current.computeLineDistances();\n\n  const {\n    planeInitialPosition: p,\n    clock,\n    camel,\n    android,\n    ios,\n    react,\n  } = objectPositionsInSpace;\n\n  /** Line */\n  const [points] = useState(() => {\n    return [\n      new Vector3(p.x, p.y, p.z),\n      //clock\n      ...createSpiralPathFromCoordinateWithRadius({\n        coordinate: [clock.x, clock.y, clock.z],\n        radius: 10,\n        direction: 1,\n        spirals: 4,\n        heightDivider: 4,\n      }).points,\n      //camel\n      ...createSpiralPathFromCoordinateWithRadius({\n        coordinate: [camel.x, camel.y, camel.z],\n        direction: 1,\n        radius: 10,\n        spirals: 2,\n        type: \"twisted\",\n        heightDivider: 3,\n      }).points,\n      //android\n      ...createSpiralPathFromCoordinateWithRadius({\n        coordinate: [android.x, android.y, android.z],\n        direction: -1,\n        radius: 10,\n        spirals: 2,\n        heightDivider: 3,\n        type: \"double\",\n      }).points,\n      //ios\n      ...createSpiralPathFromCoordinateWithRadius({\n        coordinate: [ios.x, ios.y, ios.z],\n        direction: -1,\n        radius: 10,\n        spirals: 2,\n        heightDivider: 4,\n        type: \"twistedDown\",\n      }).points,\n      //react\n      ...createSpiralPathFromCoordinateWithRadius({\n        coordinate: [react.x, react.y, react.z],\n        direction: 1,\n        radius: 10,\n        spirals: 2,\n        heightDivider: 5,\n      }).points,\n      new Vector3(0, 0, 0),\n    ];\n  });\n\n  const [line] = useState(() => {\n    const c = new CatmullRomCurve3(points);\n    c.tension = 0.65;\n    c.arcLengthDivisions = 20000;\n    c.curveType = \"catmullrom\";\n    c.closed = false;\n    return c;\n  });\n\n  const [lineGeometry] = useState(() =>\n    new BufferGeometry().setFromPoints(line.getSpacedPoints(20000))\n  );\n\n  const planePosition = useRef(null);\n  const planeRotation = useRef(null);\n\n  const up = new Vector3(0, 1, 0);\n  const axis = new Vector3();\n\n  function movePlane({ fraction, isBackward, moveCamera }) {\n    if (!group.current) return;\n    //move\n    const position = line.getPoint(fraction);\n    planePosition.current = { ...position };\n    if (isBackward) {\n      //TODO: take care of this when the all journey is completed.\n      up.y = -1;\n    } else {\n      up.y = 1;\n    }\n    //rotate\n    const tangent = line.getTangent(fraction);\n    axis.crossVectors(up, tangent).normalize();\n    const angle = Math.acos(up.dot(tangent));\n    planeRotation.current = { axis, angle };\n  }\n\n  useEffect(() => {\n    if (!group.current) return;\n\n    //switch between plane & sheet visibilities\n    const unsubscribeFromSheetListener = useStore.subscribe(\n      (state) => state.sheet,\n      ({ lastChanged }) => {\n        if (lastChanged === \"sheetProgress\") {\n          if (group.current.visible) group.current.visible = false;\n          if (lineRef.current.visible) lineRef.current.visible = false;\n        }\n      }\n    );\n\n    // position={[15, -1.09, 682]}\n\n    //TODO: fix this\n    const planeToIntialPosition = anime({\n      targets: group.current.position,\n      x: [15, 12.949322347666651],\n      y: [-1.09, -0.9357873478198813],\n      z: [682, 656.1792166619816],\n      duration: 500,\n      autoplay: false,\n    });\n\n    //TODO: fix this\n    const planeToInitialRotation = anime({\n      targets: group.current.quaternion,\n      w: [1, 0.709238017607531],\n      x: [0, -0.701731634510443],\n      y: [0, 0],\n      z: [0, 0.06748442418396647],\n      duration: 500,\n      autoplay: false,\n    });\n\n    const { fold } = actions;\n    const unsubcribeFromPlaneAnimationListener = useStore.subscribe(\n      (state) => state.plane,\n      ({\n        planeFoldingProgress,\n        lastChanged,\n        planeToInitialTrajectoryPointProgress,\n        planeToClockProgress,\n        planeToCamelProgres,\n        planeToAndroidProgress,\n        planeToAppleProgress,\n        planeToReactPositionProgress,\n      }) => {\n        switch (lastChanged) {\n          case \"planeFoldingProgress\":\n            if (!group.current.visible) group.current.visible = true;\n            if (!lineRef.current.visible) lineRef.current.visible = true;\n            group.current.quaternion.setFromAxisAngle(new Vector3(0, 0, 0), 0);\n            camera.position.z = group.current.position.z + 3;\n            camera.position.y = group.current.position.y + 0.6;\n            seekGltfAnimation(\n              fold,\n              planeFoldingProgress,\n              planeFoldingProgressChecker,\n              10000,\n              true,\n              1,\n              true\n            );\n            break;\n          case \"planeToInitialTrajectoryPointProgress\":\n            planeToIntialPosition.seek(planeToInitialTrajectoryPointProgress);\n            planeToInitialRotation.seek(planeToInitialTrajectoryPointProgress);\n            break;\n          case \"planeToClockProgress\":\n            handleMovePlane(\n              planeToClockProgress,\n              planeToClockProgressChecker,\n              true\n            );\n            break;\n          case \"planeToCamelProgres\":\n            handleMovePlane(\n              planeToCamelProgres,\n              planeToCamelProgressChecker,\n              true\n            );\n            break;\n          case \"planeToAndroidProgress\":\n            handleMovePlane(\n              planeToAndroidProgress,\n              planeToAndroidProgressChecker,\n              true\n            );\n            break;\n          case \"planeToAppleProgress\":\n            handleMovePlane(\n              planeToAppleProgress,\n              planeToAppleProgressChecker,\n              true\n            );\n            break;\n          case \"planeToReactPositionProgress\":\n            handleMovePlane(\n              planeToReactPositionProgress,\n              planeToReactPositionProgressChecker,\n              true\n            );\n            break;\n          default:\n            break;\n        }\n      }\n    );\n\n    function handleMovePlane(\n      progress,\n      sheetProgressCheckerRef,\n      shouldCameraMove\n    ) {\n      const fraction = progress / 550;\n      const isBackward = sheetProgressCheckerRef.current > progress;\n      movePlane({\n        fraction,\n        isBackward,\n      });\n      moveCamera.current = shouldCameraMove;\n      sheetProgressCheckerRef.current = progress;\n    }\n\n    return () => {\n      unsubcribeFromPlaneAnimationListener();\n      unsubscribeFromSheetListener();\n    };\n  }, [group.current]);\n\n  useFrame(() => {\n    if (group.current && planePosition.current && planeRotation.current) {\n      group.current.position.copy(planePosition.current);\n      group.current.quaternion.setFromAxisAngle(\n        planeRotation.current.axis,\n        planeRotation.current.angle\n      );\n      if (moveCamera.current) {\n        camera.position.copy({\n          x: planePosition.current.x,\n          y: planePosition.current.y + 3.5,\n          z: planePosition.current.z + 30,\n        });\n      }\n    }\n  }, 1);\n\n  return (\n    <>\n      <line ref={lineRef} geometry={lineGeometry}>\n        <lineDashedMaterial\n          emissive=\"white\"\n          emissiveIntensity={10}\n          scale={1}\n          dashSize={0.5}\n          gapSize={0.5}\n          color=\"white\"\n        />\n      </line>\n      <group\n        //it's a very very very absolutley bad idea to change the position, only if you match it with the seet position, as they swap visibilies. incopetent blender trick just to save some time, please don't be judge too much :/\n        position={[15, -1.09, 682]}\n        rotation={[0, 0, 0]}\n        ref={group}\n        {...props}\n        visible={false}\n        dispose={null}\n      >\n        <mesh\n          name=\"material\"\n          geometry={nodes.material.geometry}\n          material={nodes.material.material}\n          morphTargetDictionary={nodes.material.morphTargetDictionary}\n          morphTargetInfluences={nodes.material.morphTargetInfluences}\n        >\n          <meshStandardMaterial\n            {...nodes.material.material}\n            map={back}\n            roughness={1}\n            metalness={0.4}\n            transparent={true}\n            depthTest={true}\n            alphaTest={0.5}\n          />\n        </mesh>\n        <mesh\n          name=\"material_1\"\n          geometry={nodes.material_1.geometry}\n          material={nodes.material_1.material}\n          morphTargetDictionary={nodes.material_1.morphTargetDictionary}\n          morphTargetInfluences={nodes.material_1.morphTargetInfluences}\n        >\n          <meshStandardMaterial\n            {...nodes.material_1.material}\n            map={front}\n            roughness={1}\n            metalness={0.4}\n            transparent={true}\n            depthTest={true}\n            alphaTest={0.5}\n          />\n        </mesh>\n        <mesh\n          name=\"material_2\"\n          geometry={nodes.material_2.geometry}\n          material={nodes.material_2.material}\n          morphTargetDictionary={nodes.material_2.morphTargetDictionary}\n          morphTargetInfluences={nodes.material_2.morphTargetInfluences}\n        >\n          <meshStandardMaterial\n            {...nodes.material_2.material}\n            color=\"#fff\"\n            emissive=\"#fff\"\n          />\n        </mesh>\n      </group>\n    </>\n  );\n}\n\nuseGLTF.preload(process.env.PUBLIC_URL + \"/testOnlyPlane.glb\");\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\nimport { useFrame, useLoader } from \"@react-three/fiber\";\nimport { TextureLoader } from \"three\";\nimport anime from \"animejs/lib/anime.es\";\n\nimport useStore from \"../store\";\nimport { seekGltfAnimation } from \"../helpers/animation\";\n\nexport default function Model({ ...props }) {\n  const group = useRef();\n  const material1Ref = useRef();\n  const material2Ref = useRef();\n  const material3Ref = useRef();\n  const { nodes, animations } = useGLTF(process.env.PUBLIC_URL + \"/sheet.glb\");\n  const { actions } = useAnimations(animations, group);\n  const front = useLoader(TextureLoader, process.env.PUBLIC_URL + \"/front.jpg\");\n  front.flipY = false;\n  const back = useLoader(TextureLoader, process.env.PUBLIC_URL + \"/back.jpg\");\n  back.flipY = false;\n\n  let sheetProgressChecker = useRef(0);\n\n  useEffect(() => {\n    if (!group.current) return;\n    const initialRotation = anime({\n      targets: group.current.rotation,\n      x: 0,\n      y: 0,\n      z: 0,\n      duration: 400,\n      autoplay: false,\n    });\n\n    const unsubscribeInitialAnimation = useStore.subscribe(\n      (state) => state.initialAnimation,\n      ({ progress, lastChanged }) => {\n        if (lastChanged === \"progress\") {\n          initialRotation.seek(progress);\n        }\n      }\n    );\n\n    //switch between shet & plane visibilities\n    const unsubscribeFromPlaneListener = useStore.subscribe(\n      (state) => state.plane,\n      ({ lastChanged }) => {\n        if (lastChanged === \"planeFoldingProgress\") {\n          if (group.current.visible) group.current.visible = false;\n        }\n      }\n    );\n\n    const moveToCenterAnimation = anime({\n      //it's a very very very absolutley bad idea to change the position, only if you match it with the plane position, as they swap visibilies. incopetent blender trick just to save some time, please don't be judge too much :/\n      targets: group.current.position,\n      x: 14.5,\n      y: -1,\n      z: 682,\n      duration: 500,\n      autoplay: false,\n    });\n\n    const rotateToSheet = anime({\n      targets: group.current.rotation,\n      x: 0,\n      y: Math.PI / 6,\n      z: 0,\n      duration: 500,\n      autoplay: false,\n    });\n\n    const rotateBack = anime({\n      targets: group.current.rotation,\n      x: 0,\n      y: 0,\n      z: 0,\n      duration: 500,\n      autoplay: false,\n    });\n\n    const fixSheetPositonbeforeConvertingToSheet = anime({\n      targets: group.current.position,\n      x: 13.5,\n      y: 0,\n      z: 682,\n      duration: 200,\n      autoplay: false,\n    });\n\n    const unsubscribeSheetStore = useStore.subscribe(\n      (state) => {\n        return state.sheet;\n      },\n      ({\n        moveToCenterProgress,\n        sheetProgress,\n        rotateToSheetProgress,\n        backRotateProgress,\n        lastChanged,\n      }) => {\n        switch (lastChanged) {\n          case \"moveToCenterProgress\":\n            moveToCenterAnimation.seek(moveToCenterProgress);\n            break;\n\n          case \"rotateToSheetProgress\":\n            rotateToSheet.seek(rotateToSheetProgress);\n            break;\n\n          //this is a gltf animation seeking case:\n          case \"sheetProgress\":\n            if (!group.current.visible) group.current.visible = true;\n            const { toSheet } = actions;\n            seekGltfAnimation(\n              toSheet,\n              sheetProgress,\n              sheetProgressChecker,\n              2000\n            );\n            break;\n          case \"backRotateProgress\":\n            rotateBack.seek(backRotateProgress);\n            break;\n\n          default:\n            break;\n        }\n      }\n    );\n\n    return () => {\n      unsubscribeInitialAnimation();\n      unsubscribeSheetStore();\n      unsubscribeFromPlaneListener();\n    };\n  }, [group.current]);\n\n  return (\n    <group\n      //it's a very very very absolutley bad idea to change the position, only if you match it with the plane position, as they swap visibilies. incopetent blender trick just to save some time, please don't be judge too much :/\n      //todo: check if you can throw an error if the sheet & plane positions don't match\n      position={[12, -0.6, 682]}\n      // scale={[0.4, 0.4, 0.4]}\n      rotation={[0, Math.PI / 8, 0]}\n      ref={group}\n      {...props}\n      dispose={null}\n    >\n      <mesh\n        name=\"material\"\n        geometry={nodes.material.geometry}\n        morphTargetDictionary={nodes.material.morphTargetDictionary}\n        morphTargetInfluences={nodes.material.morphTargetInfluences}\n      >\n        <meshStandardMaterial\n          {...nodes.material.material}\n          map={back}\n          ref={material1Ref}\n          roughness={1}\n          metalness={0.4}\n          transparent={true}\n          depthTest={true}\n          alphaTest={0.5}\n        />\n      </mesh>\n      <mesh\n        name=\"material_1\"\n        geometry={nodes.material_1.geometry}\n        morphTargetDictionary={nodes.material_1.morphTargetDictionary}\n        morphTargetInfluences={nodes.material_1.morphTargetInfluences}\n      >\n        <meshStandardMaterial\n          {...nodes.material_1.material}\n          map={front}\n          ref={material2Ref}\n          roughness={1}\n          metalness={0.4}\n          transparent={true}\n          depthTest={true}\n          alphaTest={0.5}\n        />\n      </mesh>\n      <mesh\n        name=\"material_2\"\n        geometry={nodes.material_2.geometry}\n        morphTargetDictionary={nodes.material_2.morphTargetDictionary}\n        morphTargetInfluences={nodes.material_2.morphTargetInfluences}\n      >\n        <meshStandardMaterial\n          {...nodes.material_2.material}\n          ref={material3Ref}\n          color=\"#fff\"\n          emissive=\"#fff\"\n        />\n      </mesh>\n    </group>\n  );\n}\n\nuseGLTF.preload(process.env.PUBLIC_URL + \"/sheet.glb\");\n","export default __webpack_public_path__ + \"static/media/bold.65e5a908.blob\";","import { Vector3 } from \"three\";\nimport React, {\n  useMemo,\n  useRef,\n  useLayoutEffect,\n  forwardRef,\n  createRef,\n} from \"react\";\nimport { extend, useLoader } from \"@react-three/fiber\";\nimport { FontLoader } from \"three/examples/jsm/loaders/FontLoader\";\nimport { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\nimport boldUrl from \"../fonts/bold.blob\";\n\nextend({ TextGeometry });\n\nfunction Text(\n  {\n    children,\n    vAlign = \"center\",\n    hAlign = \"center\",\n    size = 1.5,\n    color = \"#000000\",\n    ...props\n  },\n  ref\n) {\n  const font = useLoader(FontLoader, boldUrl);\n  const config = useMemo(\n    () => ({\n      font,\n      size: 36,\n      height: 10,\n      curveSegments: 32,\n      bevelEnabled: true,\n      bevelThickness: 5,\n      bevelSize: 1,\n      bevelOffset: -0.1,\n      bevelSegments: 8,\n    }),\n    [font]\n  );\n  const mesh = useRef();\n  useLayoutEffect(() => {\n    const size = new Vector3();\n    mesh.current.geometry.computeBoundingBox();\n    mesh.current.geometry.boundingBox.getSize(size);\n    mesh.current.position.x =\n      hAlign === \"center\" ? -size.x / 2 : hAlign === \"right\" ? 0 : -size.x;\n    mesh.current.position.y =\n      vAlign === \"center\" ? -size.y / 2 : vAlign === \"top\" ? 0 : -size.y;\n  }, [children]);\n  return (\n    <group ref={ref} {...props} scale={[0.05 * size, 0.05 * size, 0.05]}>\n      <mesh ref={mesh}>\n        <textGeometry args={[children, config]} />\n        <meshNormalMaterial />\n      </mesh>\n    </group>\n  );\n}\n\nexport default forwardRef(Text);\n","import anime from \"animejs/lib/anime.es\";\nimport { useEffect, forwardRef, createRef } from \"react\";\nimport useStore from \"../store\";\nimport Text from \"./Text\";\n\nfunction LoadingText() {\n  const text = createRef();\n\n  useEffect(() => {\n    if (!text.current) return;\n    const positionChange = anime({\n      duration: 400,\n      autoplay: false,\n      targets: text.current.position,\n      x: -10,\n      y: 1,\n      z: 688,\n    });\n\n    const unsubscribeStore = useStore.subscribe(\n      (state) => state.initialAnimation,\n      ({ progress }) => {\n        positionChange.seek(progress);\n      }\n    );\n\n    return () => {\n      unsubscribeStore();\n    };\n  }, [text.current]);\n\n  return (\n    <group position={[2, 1, 686]} rotation={[0, Math.PI / 8, 0]}>\n      <Text position={[-13, 0, 0]} ref={text} children=\"JUST\" />\n      <Text ref={text} children=\"SCROLL\" />\n    </group>\n  );\n}\n\nexport default forwardRef(LoadingText);\n","import { useEffect, useMemo } from \"react\";\nimport { WebGLRenderTarget, Vector2 } from \"three\";\nimport { extend, useFrame, useThree } from \"@react-three/fiber\";\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer\";\nimport { ShaderPass } from \"three/examples/jsm/postprocessing/ShaderPass\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass\";\nimport { UnrealBloomPass } from \"three/examples/jsm/postprocessing/UnrealBloomPass\";\nimport { useControls } from \"leva\";\n\nextend({ EffectComposer, ShaderPass, RenderPass });\n\nfunction Effect() {\n  const { gl, scene, camera, size } = useThree();\n\n  useEffect(() => {}, []);\n\n  // /**\n  //  * Bloom Pass controls\n  //  */\n  // const { exposure, bloomThreshold, bloomRadius, bloomStrength } = useControls(\n  //   \"bloomPass\",\n  //   {\n  //     exposure: {\n  //       value: 1,\n  //       min: 0,\n  //       max: 5,\n  //       step: 0.01,\n  //     },\n  //     bloomThreshold: {\n  //       min: 0,\n  //       max: 1,\n  //       value: 0,\n  //       step: 0.01,\n  //     },\n  //     bloomRadius: {\n  //       min: 0,\n  //       max: 5,\n  //       step: 0.01,\n  //       value: 1,\n  //     },\n  //     bloomStrength: {\n  //       min: 0,\n  //       max: 5,\n  //       step: 0.01,\n  //       value: 1,\n  //     },\n  //   }\n  // );\n\n  const effectComposer = useMemo(() => {\n    const renderScene = new RenderPass(scene, camera);\n\n    //renderer exposure\n    gl.toneMappingExposure = Math.pow(1, 4.0);\n    gl.autoClear = false;\n    gl.antialias = true;\n\n    const finalComposer = new EffectComposer(gl);\n    const unrealBloomPass = new UnrealBloomPass(\n      //resolution,\n      //strength,\n      //radius,\n      //threshold\n      new Vector2(size.width, size.height),\n      1.5,\n      1,\n      0\n    );\n    finalComposer.addPass(renderScene);\n    finalComposer.addPass(unrealBloomPass);\n    return finalComposer;\n  }, []);\n\n  useEffect(() => {\n    effectComposer.setSize(size.width, size.height);\n  }, [effectComposer, size]);\n\n  useFrame(() => {\n    //APPLY EFFECTS TO A PARTICULAR LAYER.\n\n    gl.autoClear = false;\n    gl.clear();\n    camera.layers.set(1);\n    effectComposer.render();\n\n    gl.clearDepth();\n    camera.layers.set(2);\n    gl.render(scene, camera);\n\n    gl.clearDepth();\n    camera.layers.set(3);\n    gl.render(scene, camera);\n\n    gl.clearDepth();\n    camera.layers.set(0);\n    gl.render(scene, camera);\n  }, 1);\n\n  return null;\n}\n\nexport default Effect;\n","//the lifesaver (source): https://codeburst.io/scroll-based-animate-timeline-with-easing-functions-on-a-webgl-scene-ef7c3f5a8d9b\n\nimport { useEffect, useState, useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport anime from \"animejs/lib/anime.es.js\";\nimport { useThree } from \"@react-three/fiber\";\nimport useStore from \"../store\";\n\nexport default function Animator() {\n  const _event = useRef({\n    y: 0,\n    deltaY: 0,\n  });\n  var percentage = 0;\n  var touchStartY = 0;\n\n  // this is the container where we will attach the scroll event. For this example we will set its height to 1200vh.\n  const divContainer = document.getElementById(\"fold\");\n  // container height - window height to limit the scroll at the top of the screen when we are at the bottom of the container\n  var maxHeight =\n    (divContainer.clientHeight || divContainer.offsetHeight) -\n    window.innerHeight;\n\n  let scrollTimeout = null;\n\n  const isScrolling = useRef(false);\n\n  function onWheel(e) {\n    // e.preventDefault();\n\n    if (scrollTimeout) {\n      clearTimeout(scrollTimeout);\n    }\n    scrollTimeout = setTimeout(() => {\n      scrollTimeout = null;\n      useStore.getState().scrollStatus.setIsSCrolling(false);\n      isScrolling.current = false;\n    }, 100);\n    if (!isScrolling.current) {\n      isScrolling.current = true;\n      useStore.getState().scrollStatus.setIsSCrolling(true);\n    }\n\n    _event.current.deltaY = e.wheelDeltaY || e.deltaY * -1;\n    // reduce by half the delta amount otherwise it scroll too fast (in a other way we could increase the height of the container too)\n    _event.current.deltaY *= 0.2;\n    scroll(e);\n  }\n\n  function scroll(e) {\n    // limit scroll top\n    if (_event.current.y + _event.current.deltaY > 0) {\n      _event.current.y = 0;\n      // limit scroll bottom\n    } else if (-(_event.current.y + _event.current.deltaY) >= maxHeight) {\n      _event.current.y = -maxHeight;\n    } else {\n      _event.current.y += _event.current.deltaY;\n    }\n  }\n\n  function onTouchStart(e) {\n    var t = e.targetTouches ? e.targetTouches[0] : e;\n    touchStartY = t.pageY;\n  }\n\n  function onTouchMove(e) {\n    var t = e.targetTouches ? e.targetTouches[0] : e;\n    // the multiply factor on mobile must be about 10x the factor applied on the wheel\n    _event.current.deltaY = (t.pageY - touchStartY) * 5;\n    touchStartY = t.pageY;\n    scroll(e);\n  }\n\n  function onResize() {\n    maxHeight = divContainer.clientHeight - window.innerHeight;\n  }\n\n  function lerp(a, b, t) {\n    return (1 - t) * a + t * b;\n  }\n\n  function render() {\n    percentage = lerp(percentage, -_event.current.y, 0.07);\n    timeline.seek(percentage * (timeline.duration / maxHeight));\n  }\n\n  useFrame(() => {\n    render();\n  });\n\n  const [timeline] = useState(() =>\n    anime.timeline({\n      autoplay: false,\n      easing: \"easeOutSine\",\n    })\n  );\n\n  /**\n   * Taken from actions, exported from blender. //TODO: check for automatization\n   */\n  const animationTimes = {\n    //experience\n    androidMove: 1.5833333730697632,\n    appleMove: 1.25,\n    camelMove: 1,\n    clockMove: 0.875,\n    come: 1.2916666269302368,\n    go: 1.5,\n    join: 1.7083333730697632,\n    toAndroid: 2.5416667461395264,\n    toApple: 3.375,\n    toCamel: 3.375,\n    toCannon: 2.4166667461395264,\n    toClock: 3.375,\n    toFlower: 2.5416667461395264,\n    toPineapple: 3.8333332538604736,\n    //sheet\n    toSheet: 2,\n  };\n\n  const { camera } = useThree();\n\n  const empty = {};\n\n  //these refs control animations to avoid emitting multiple times 0's and 100's progress from onUpdate(animation.progress) function from anime js\n\n  //intitial animations\n  const initialAnimationProgress = useRef(0);\n  const initialScaleProgress = useRef(0);\n  const initalCubeJoinProgress = useRef(0);\n  const initalCubeGoProgress = useRef(0);\n  const centerSheetProgress = useRef(0);\n  const rotateSheetProgress = useRef(0);\n  const toSheetProgress = useRef(0);\n  const sheetBackRotateProgress = useRef(0);\n  const planeAndSheetReverseOpacitiesProgress = useRef(0);\n\n  //plane folding progress\n  const planeFoldProgress = useRef(0);\n\n  //plane to intial trajectory point progress\n  const planeToInitialTrajectoryPointProgress = useRef(0);\n\n  //to clock animations group progress\n  const planeToClockProgress = useRef(0);\n  const experienceCubesToClockPositionProgress = useRef(0);\n  const experienceCubesToClockRotationProgress = useRef(0);\n  const toClockProgress = useRef(0);\n  const clockMoveProgress = useRef(0);\n  const timeDefinitionProgress = useRef(0);\n  const clockGoProgress = useRef(0);\n  const timeDefinitionCloseProgress = useRef(0);\n\n  //camel animations group progress handlers\n  const planeToCamelProgres = useRef(0);\n  const experienceCubesToCamelPosition = useRef(0);\n  const experienceCubesToCamelRotation = useRef(0);\n  const toCamelProgress = useRef(0);\n  const camelMoveProgress = useRef(0);\n  const patienceDefitionProgress = useRef(0);\n  const camelGoProgress = useRef(0);\n  const patienceDefitionCloseProgress = useRef(0);\n\n  //android animations group progress\n  const planeToAndroidProgress = useRef(0);\n  const cubesToAndroidPositionProgress = useRef(0);\n  const cubesToAndroidRotationProgress = useRef(0);\n  const toAndroidProgress = useRef(0);\n  const showAndroidParagraphProgress = useRef(0);\n  const androidMoveProgress = useRef(0);\n  const androidGoProgress = useRef(0);\n  const androidParagraphCloseProgress = useRef(0);\n\n  //apple animations group progress\n  const planeToAppleProgress = useRef(0);\n  const experienceCubesToApplePositionProgress = useRef(0);\n  const experienceCubesToAppleRotationProgress = useRef(0);\n  const toAppleProgress = useRef(0);\n  const appleParagraphProgress = useRef(0);\n  const appleMoveProgress = useRef(0);\n  const appleGoProgress = useRef(0);\n  const appleParagraphCloseProgress = useRef(0);\n\n  //react animations group progress\n  const planeToReactPositionProgress = useRef(0);\n  const cubesToReactPositionProgress = useRef(0);\n  const cubesToReactRotationProgress = useRef(0);\n\n  //flower\n  const flowerColorsProgress = useRef(0);\n  const toFlowerProgress = useRef(0);\n  const flowerParagraphProgress = useRef(0);\n  const flowerParagraphCloseProgress = useRef(0);\n\n  //pineapple\n  const pineappleColorsProgress = useRef(0);\n  const toPineAppleProgress = useRef(0);\n  const pineappleParagraphProgress = useRef(0);\n  const pineappleParagraphCloseProgress = useRef(0);\n\n  //cannon\n  const cannonColorsProgress = useRef(0);\n  const toCannonProgress = useRef(0);\n  const cannonParagraphProgress = useRef(0);\n  const cannonParagraphCloseProgress = useRef(0);\n\n  /**\n   * handles the animation updates, making sure to play the animation even when going backwards\n   * @param {object} anim the animation received from update function on animeJS timeline\n   * @param {object} progressTracker a ref for each animation that prevents emiting unnecessary values\n   * @param {function} progressSetter a function with the logic that modifies the state for each animation\n   */\n  function handleUpdateAnimation(anim, progressTracker, progressSetter) {\n    if (!anim.completed) {\n      if (progressTracker.current !== 0) {\n        progressSetter(anim);\n      }\n      progressTracker.current = anim.progress;\n    } else {\n      if (anim.progress < 100) {\n        anim.completed = false;\n      }\n    }\n  }\n\n  function addTimelineEvents() {\n    //set camera to middle of 3 cubes\n    timeline.add({\n      targets: camera.position,\n      x: 15,\n      y: 0,\n      z: 710,\n      duration: 200,\n    });\n\n    //rotate cubes & remove loading text from screen animation control\n    timeline.add({\n      //target is empty because we just control the timing, animation happens on other files via animation.seek()\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          initialAnimationProgress,\n          function progresSetter(anim) {\n            useStore.getState().initialAnimation.setProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //scale down experience helper cubes\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          initialScaleProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setInitialScaleProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //join experience cubes animation control\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          initalCubeJoinProgress,\n          function progresSetter(anim) {\n            useStore\n              .getState()\n              .experience.setInitialJoinProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //initial go (experience cubes) animation control (GLTF anim)\n    timeline.add({\n      targets: empty,\n      duration: 2000, //TO MILLISECONDS\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          initalCubeGoProgress,\n          function progresSetter(anim) {\n            useStore.getState().experience.setInitialGoProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    // set sheet to center animation control\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          centerSheetProgress,\n          function progresSetter(anim) {\n            useStore.getState().sheet.setMoveToCenterProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //zoom into sheet cube\n    timeline.add({\n      targets: camera.position,\n      x: 15,\n      y: 0,\n      z: 688,\n      duration: 500,\n    });\n\n    //rotate the sheet cube\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          rotateSheetProgress,\n          function progresSetter(anim) {\n            useStore.getState().sheet.setRotateToSheetProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //to sheet animation controler (GLTF ANIM)\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          toSheetProgress,\n          function progresSetter(anim) {\n            useStore.getState().sheet.setSheetProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //rotate sheet back to place controller\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          sheetBackRotateProgress,\n          function progresSetter(anim) {\n            useStore.getState().sheet.setBackRotateProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //change sheet to plane\n    timeline.add({\n      targets: empty,\n      duration: 100,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          planeAndSheetReverseOpacitiesProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .initialAnimation.setPlaneAndSheetReverseOpacitiesProgress(\n                anim.progress\n              );\n          }\n        );\n      },\n    });\n\n    //the coolest plane folding animation ever\n    timeline.add({\n      targets: empty,\n      duration: 10000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          planeFoldProgress,\n          function progressSetter(anim) {\n            useStore.getState().plane.setPlaneFoldingProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //move plane to the initial trajectory point\n    //todo: this\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          planeToInitialTrajectoryPointProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .plane.setPlaneToInitialTrajectoryPointProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //move plane from intial point to the clock position\n    //from here the plane movement anim progress will be each time increased with +100 in order to be consistent with the line progress.\n    timeline.add({\n      targets: empty,\n      duration: 5000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          planeToClockProgress,\n          function progressSetter(anim) {\n            useStore.getState().plane.setPlaneToClockProgress(anim.progress);\n            //todo: add on finish function:  increase Plane movement along lines total progress by 100 each time mabe\n          }\n        );\n      },\n    });\n\n    //bring the cubes to clock position\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          experienceCubesToClockPositionProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setExperienceCubesToClockPositionProgress(\n                anim.progress\n              );\n          }\n        );\n      },\n    });\n\n    //rotate for clock animations\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          experienceCubesToClockRotationProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setExperienceCubesToClockRotationProgress(\n                anim.progress\n              );\n          }\n        );\n      },\n    });\n\n    //convert to clock (GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          toClockProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setToClockProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //show time definition\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          timeDefinitionProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setTimeDefinitionProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //clockMove (GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          clockMoveProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setClockMoveProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //give it some time\n    //TODO: move the clock around or rotate or something\n    timeline.add({\n      targets: empty,\n      duration: 3000,\n    });\n\n    //clock go (GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 1000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          clockGoProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setClockCloseProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //remove timeDefinition\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          timeDefinitionCloseProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setTimeDefintionCloseProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //move plane to camel position\n    timeline.add({\n      targets: empty,\n      duration: 5000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          planeToCamelProgres,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .plane.setPlaneToCamelProgress(100 + anim.progress); //add +100 because plane has moved 100 units from the last position\n          }\n        );\n      },\n    });\n\n    //bring the cubes to camel position\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          experienceCubesToCamelPosition,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCubesToCamelPositionProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //rotate the cubes to camel position\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          experienceCubesToCamelRotation,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCubesToCamelRotationProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //transform cubes to camel (GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          toCamelProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setToCamelProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //show patienceDefinition\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          patienceDefitionProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setPatienceDefinitonProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //play camel move animation (GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          camelMoveProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setCamelMoveProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //give it some extra time\n    timeline.add({\n      targets: empty,\n      duration: 3000,\n    });\n\n    //camel go (GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 1000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          camelGoProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setCamelGoProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //remove patience definition\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          patienceDefitionCloseProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setPatinceDefinitionCloseProgres(anim.progress);\n          }\n        );\n      },\n    });\n\n    //move the plane to android position\n    timeline.add({\n      targets: empty,\n      duration: 5000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          planeToAndroidProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .plane.setPlaneToAndroidProgress(200 + anim.progress); //+200 because of the two previous plane movements\n          }\n        );\n      },\n    });\n\n    //bring the cubes to android position\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          cubesToAndroidPositionProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCubesToAndroidPositionProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //bring the cubes to android rotation\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          cubesToAndroidRotationProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCubesToAndroidRotationProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //transform to android(GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          toAndroidProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setToAndroidProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //show android paragraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          showAndroidParagraphProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setAndroidParagraphProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //android move (GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          androidMoveProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setAndroidMoveProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //TODO: check if it's waiting on backwars play too\n    //wait some time\n    timeline.add({\n      targets: empty,\n      duration: 3000,\n    });\n\n    //android go (GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 1000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          androidGoProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setAndroidGoProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //hide android paragraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          androidParagraphCloseProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setAndroidParagraphCloseProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //move the plane to apple position\n    timeline.add({\n      targets: empty,\n      duration: 5000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          planeToAppleProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .plane.setPlaneToAppleProgress(300 + anim.progress); //+300 for the plane to continue it's journey when it left off\n          }\n        );\n      },\n    });\n\n    //bring the cubes to apple position\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          experienceCubesToApplePositionProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setExperienceCubesToApplePositionProgress(\n                anim.progress\n              );\n          }\n        );\n      },\n    });\n    //bring the cubes to apple rotation\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          experienceCubesToAppleRotationProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setExperienceCubesToAppleRotationProgress(\n                anim.progress\n              );\n          }\n        );\n      },\n    });\n\n    //transform the cubes to apple\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          toAppleProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setToAppleProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    // show apple paragraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          appleParagraphProgress,\n          function progressSeter(anim) {\n            useStore\n              .getState()\n              .experience.setAppleParagraphProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //move apple\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          appleMoveProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setAppleMoveProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //give it some extra time\n    timeline.add({\n      targets: empty,\n      duration: 3000,\n    });\n\n    //apple go\n    timeline.add({\n      targets: empty,\n      duration: 1000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          appleGoProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setAppleGoProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //remove apple paragraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          appleParagraphCloseProgress,\n          function progressSeter(anim) {\n            useStore\n              .getState()\n              .experience.setAppleParagraphCloseProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //set plane to react position\n    timeline.add({\n      targets: empty,\n      duration: 3000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          planeToReactPositionProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .plane.setPlaneToReactPositionProgress(400 + anim.progress); //+400 in order for the plane to continue where it left of (in the trajectory)\n          }\n        );\n      },\n    });\n\n    //bring cubes to react position\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          cubesToReactPositionProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCubesToReactPositionProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //cubes to react rotation\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          cubesToReactRotationProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCubesToReactRotationProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //set flower colors\n    timeline.add({\n      targets: empty,\n      duration: 1000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          flowerColorsProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setFlowerColorsProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //transform to flower\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          toFlowerProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setToFLowerProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //TODO: try setting colors before animation???\n\n    //show flowerParagraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          flowerParagraphProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setFlowerParagraphProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //set pineAppleColors\n    timeline.add({\n      targets: empty,\n      duration: 1000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          pineappleColorsProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setPineappleColorsProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //hide flowerParagraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          flowerParagraphCloseProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setFlowerParagraphCloseProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //transform to pineAPple\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          toPineAppleProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setToPinappleProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //show pineapple paragraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          pineappleParagraphProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setPineappleParagraphProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //hide pineapple paragraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          pineappleParagraphCloseProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setPineappleParagraphCloseProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //set cannon colors\n    timeline.add({\n      targets: empty,\n      duration: 1000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          cannonColorsProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCannonColorsProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //transform to Cannon\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          toCannonProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setToCannonProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //show cannon paragraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          cannonParagraphProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCannonParagraphProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //hide cannon paragraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          cannonParagraphCloseProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCannonParagraphCloseProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //****************** just for fixing the timeline */\n    timeline.add({\n      targets: empty,\n      duration: 200,\n    });\n  }\n\n  useEffect(() => {\n    camera.position.z = 725;\n    camera.position.y = 8;\n    // divContainer.scroll({ top: 0, left: 0 });\n    //Scroll & resize event listeners\n    divContainer.addEventListener(\"wheel\", onWheel, false);\n    window.addEventListener(\"resize\", onResize, { passive: true });\n    divContainer.addEventListener(\"touchstart\", onTouchStart);\n    divContainer.addEventListener(\"touchmove\", onTouchMove);\n\n    addTimelineEvents();\n    return () => {\n      divContainer.removeEventListener(\"wheel\", onWheel);\n      window.removeEventListener(\"resize\", onResize);\n      divContainer.removeEventListener(\"touchstart\", onTouchStart);\n      divContainer.removeEventListener(\"touchmove\", onTouchMove);\n\n      //TODO: CHECK IF CAN CLEAR REF????\n    };\n  }, []);\n\n  return null;\n}\n","import { Suspense, useState, useEffect, useRef, createRef } from \"react\";\nimport { Vector3, CatmullRomCurve3, BufferGeometry } from \"three\";\nimport { useFrame, useThree, extend } from \"@react-three/fiber\";\nimport { Stats } from \"@react-three/drei\";\n\nimport { lerp } from \"../../helpers/animation\";\nimport createSpiralPathFromCoordinateWithRadius from \"./createPath\";\nimport anime from \"animejs/lib/anime.es.js\";\n\nimport Everything from \"../Starter\";\nimport TestPlane from \"../TestOnlyPlane\";\nimport Sheet from \"../Sheet\";\nimport Loading from \"../Loading\";\nimport Effect from \"../../postprocessing\";\nimport AnimHandler from \"../animHandler\";\n\nimport useStore from \"../../store\";\n\nconst World = () => {\n  const { camera, ...rest } = useThree();\n\n  /** Window event listener handlers */\n  const divContainer = document.getElementById(\"fold\");\n  var maxHeight = divContainer.clientHeight - window.innerHeight;\n  var percentage = 0;\n  var scrollY = 0;\n  var touchStartY = 0;\n\n  var event = {\n    y: 0,\n    deltaY: 0,\n  };\n\n  const onResize = () => {\n    maxHeight = divContainer.clientHeight - window.innerHeight;\n  };\n\n  let isScrolling;\n\n  function onWheel(e) {\n    var evt = event;\n    evt.deltaY = e.wheelDeltaY || e.deltaY * -1;\n    evt.deltaY *= 0.5;\n    clearTimeout(isScrolling);\n    useStore.getState().world.setScrollingStopped(false);\n    isScrolling = setTimeout(function () {\n      useStore.getState().world.setScrollingStopped(true);\n    }, 66);\n    scroll(e);\n  }\n\n  function scroll() {\n    var evt = event;\n    if (evt.y + evt.deltaY > 0) {\n      evt.y = 0;\n    } else if (-(evt.y + evt.deltaY) >= maxHeight) {\n      evt.y = -maxHeight;\n    } else {\n      evt.y += evt.deltaY;\n    }\n    scrollY = -evt.y;\n    useStore.getState().world.setScrollY(scrollY);\n    percentage = lerp(percentage, scrollY, 0.07);\n    useStore.getState().world.setProgress(percentage);\n  }\n\n  function animatePlane(percentage) {\n    useStore.getState().paperPlane.setAnimationTime(percentage);\n  }\n\n  function animatePlaneToInitialTrajectoryPoint(fraction) {\n    useStore\n      .getState()\n      .paperPlane.setInitialTrajectoryPointAnimationTime(fraction);\n  }\n\n  const up = new Vector3(0, 0, -1);\n  const axis = new Vector3();\n\n  function movePlane({ fraction, isBackward, moveCamera }) {\n    // const point = line.getPoint(fraction);\n    // const { x, y, z } = point;\n    // useStore.getState().paperPlane.move([x, y, z]);\n    // if (isBackward) {\n    //   up.z = 1;\n    // } else {\n    //   up.z = -1;\n    // }\n    // const tangent = line.getTangent(fraction);\n    // axis.crossVectors(up, tangent).normalize();\n    // const radians = Math.acos(up.dot(tangent));\n    // useStore.getState().paperPlane.setRotationAngle({ axis, angle: radians });\n    // if (moveCamera) {\n    //   camera.position.set(...[x, y + 3, z + 10]);\n    // }\n  }\n\n  let oldProgress = -Infinity;\n\n  function handleProgress(progress) {\n    // console.log(\"progress: \", progress);\n    let isBackward = false;\n    if (oldProgress > progress) {\n      isBackward = true;\n    } else {\n      isBackward = false;\n    }\n    oldProgress = progress;\n\n    if (progress <= 18000) {\n      animatePlane(progress);\n    } else if (progress > 18000 && progress <= 20000) {\n      const fraction = progress - 18000;\n      animatePlaneToInitialTrajectoryPoint(fraction);\n    } else if (progress > 18000) {\n      const localProgress = progress - 18000;\n      const fraction = localProgress / 30000;\n      let prevCameraPosition = camera.position;\n      if (progress > 20760 && progress <= 26262) {\n        //PLANE\n        movePlane({\n          fraction,\n          isBackward,\n          moveCamera: false,\n        });\n        const xFactor = isBackward ? 1 : -1;\n        const zFactor = 1;\n        let cameraX;\n        let cameraY;\n        let cameraZ;\n        const zoomProgress = localProgress / 50000;\n        if (isBackward) {\n          cameraX = Math.min(\n            -190,\n            prevCameraPosition.x + zoomProgress * xFactor\n          );\n        } else {\n          cameraX = Math.max(\n            -190,\n            prevCameraPosition.x + zoomProgress * xFactor\n          );\n        }\n        cameraY = camera.position.y;\n        cameraZ = Math.min(550, prevCameraPosition.z + zoomProgress * zFactor);\n        camera.position.set(...[cameraX, cameraY, cameraZ]);\n      } else if (progress > 26262 && progress <= 27300) {\n        //PLANE TO BRAIN\n        movePlane({\n          fraction,\n          isBackward,\n          moveCamera: true,\n        });\n      } else if (progress > 27300 && progress <= 33611) {\n        //BRAIN\n        movePlane({\n          fraction,\n          isBackward,\n          moveCamera: false,\n        });\n        const xFactor = isBackward ? 1 : -1;\n        const zFactor = 1;\n        let cameraX;\n        let cameraY;\n        let cameraZ;\n        const zoomProgress = localProgress / 50000;\n        if (isBackward) {\n          cameraX = Math.min(\n            190,\n            prevCameraPosition.x + zoomProgress * xFactor\n          );\n        } else {\n          cameraX = Math.max(\n            190,\n            prevCameraPosition.x + zoomProgress * xFactor\n          );\n        }\n        cameraY = Math.min(8, prevCameraPosition.y + zoomProgress);\n        if (isBackward) {\n          cameraZ = Math.max(\n            490,\n            prevCameraPosition.z + zoomProgress * zFactor\n          );\n        }\n        cameraZ = Math.min(490, prevCameraPosition.z + zoomProgress * zFactor);\n        camera.position.set(...[cameraX, cameraY, cameraZ]);\n      } else if (progress > 33611 && progress <= 34600) {\n        //BRAIN TO WORLD\n        movePlane({\n          fraction,\n          isBackward,\n          moveCamera: true,\n        });\n      } else if (progress > 34600 && progress <= 42000) {\n        movePlane({\n          fraction,\n          isBackward,\n          moveCamera: true,\n        });\n      } else {\n        movePlane({\n          fraction,\n          isBackward,\n          moveCamera: true,\n        });\n      }\n    }\n  }\n\n  function onTouchStart(e) {\n    var t = e.targetTouches ? e.targetTouches[0] : e;\n    touchStartY = t.pageY;\n  }\n\n  function onTouchMove(e) {\n    var evt = event;\n    var t = e.targetTouches ? e.targetTouches[0] : e;\n    // the multiply factor on mobile must be about 10x the factor applied on the wheel\n    evt.deltaY = (t.pageY - touchStartY) * 5;\n    touchStartY = t.pageY;\n    scroll(e);\n  }\n\n  return (\n    <>\n      <Effect />\n      <Stats />\n      <AnimHandler />\n      <Suspense fallback={null}>\n        <Loading />\n        <Everything />\n        <TestPlane />\n        <Sheet />\n      </Suspense>\n      <directionalLight intensity={1} position={[2, 1, 697]} color=\"white\" />\n    </>\n  );\n};\n\nexport default World;\n","import React, { useRef } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport World from \"../objects/world\";\n\nimport \"./styles.css\";\n\nconst Scene = () => {\n  const canvas = useRef();\n\n  return (\n    <div id=\"wrapper\">\n      <div id=\"webgl\" className=\"container\">\n        <Canvas\n          shadows\n          camera={{\n            far: 50, //important to have a clean view from the curve path (plane trajectory)\n            near: 1,\n            fov: 45,\n            aspect: window.innerWidth / window.innerHeight,\n          }}\n          antialias\n          ref={canvas}\n        >\n          <World />\n        </Canvas>\n      </div>\n      <div id=\"fold\" className=\"container\" />\n    </div>\n  );\n};\n\nexport default Scene;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./globals\";\n\nimport Scene from \"./scene\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Scene />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}