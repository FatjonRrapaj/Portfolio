/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useFrame, useLoader } from "@react-three/fiber";
import { useEffect } from "react/cjs/react.development";
import { TextureLoader } from "three";

export default function Model({ ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(
    process.env.PUBLIC_URL + "/plane.glb"
  );
  const { actions } = useAnimations(animations, group);

  const front = useLoader(TextureLoader, process.env.PUBLIC_URL + "/front.jpg");
  front.flipY = false;
  const back = useLoader(TextureLoader, process.env.PUBLIC_URL + "/back.jpg");
  const alphaMap = useLoader(
    TextureLoader,
    process.env.PUBLIC_URL + "/aMap.jpg"
  );

  useEffect(() => {
    const { toPlane, toSheet } = actions;
    toSheet.repetitions = 1;
    toSheet.clampWhenFinished = true;
    toSheet.play();

    toPlane.repetitions = 1;
    toPlane.clampWhenFinished = true;

    setTimeout(() => {
      toPlane.play();
    }, 2000);
  });

  // useFrame(() => {
  //   if (actions.toSheet.time >= actions.toSheet._clip.duration - 0.1) {
  //     actions.toSheet.paused = true;
  //   }
  // });

  return (
    <group
      position={[0, -1, 695]}
      rotation={[0, Math.PI / 3, 0]}
      ref={group}
      {...props}
      dispose={null}
    >
      <mesh
        layers={2}
        name="plane_1"
        geometry={nodes.plane_1.geometry}
        material={nodes.plane_1.material}
        morphTargetDictionary={nodes.plane_1.morphTargetDictionary}
        morphTargetInfluences={nodes.plane_1.morphTargetInfluences}
      >
        <meshStandardMaterial
          {...nodes.plane_1.material}
          emissive={"#fff"}
          roughness={1}
          metalness={0.4}
          transparent={true}
          depthTest={true}
          alphaTest={0.5}
        />
      </mesh>
      <mesh
        layers={2}
        name="plane_2"
        geometry={nodes.plane_2.geometry}
        material={nodes.plane_2.material}
        morphTargetDictionary={nodes.plane_2.morphTargetDictionary}
        morphTargetInfluences={nodes.plane_2.morphTargetInfluences}
      >
        <meshStandardMaterial
          map={front}
          emissive={"#fff"}
          roughness={1}
          metalness={0.4}
          transparent={true}
          depthTest={true}
          alphaTest={0.5}
        />
      </mesh>
      <mesh
        layers={2}
        name="plane_3"
        geometry={nodes.plane_3.geometry}
        material={nodes.plane_3.material}
        morphTargetDictionary={nodes.plane_3.morphTargetDictionary}
        morphTargetInfluences={nodes.plane_3.morphTargetInfluences}
      >
        <meshStandardMaterial
          {...nodes.plane_3.material}
          color="red"
          map={back}
          emissive="red"
          roughness={1}
          metalness={0.4}
          transparent={true}
          depthTest={true}
          alphaTest={0.5}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload(process.env.PUBLIC_URL + "/plane.glb");

// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */

// import React, { useRef } from 'react'
// import { useGLTF, useAnimations } from '@react-three/drei'

// export default function Model({ ...props }) {
//   const group = useRef()
//   const { nodes, materials, animations } = useGLTF('/plane.glb')
//   const { actions } = useAnimations(animations, group)
//   return (
//     <group ref={group} {...props} dispose={null}>
//       <mesh
//         name="plane_1"
//         geometry={nodes.plane_1.geometry}
//         material={nodes.plane_1.material}
//         morphTargetDictionary={nodes.plane_1.morphTargetDictionary}
//         morphTargetInfluences={nodes.plane_1.morphTargetInfluences}
//       />
//       <mesh
//         name="plane_2"
//         geometry={nodes.plane_2.geometry}
//         material={nodes.plane_2.material}
//         morphTargetDictionary={nodes.plane_2.morphTargetDictionary}
//         morphTargetInfluences={nodes.plane_2.morphTargetInfluences}
//       />
//       <mesh
//         name="plane_3"
//         geometry={nodes.plane_3.geometry}
//         material={nodes.plane_3.material}
//         morphTargetDictionary={nodes.plane_3.morphTargetDictionary}
//         morphTargetInfluences={nodes.plane_3.morphTargetInfluences}
//       />
//     </group>
//   )
// }

// useGLTF.preload('/plane.glb')
