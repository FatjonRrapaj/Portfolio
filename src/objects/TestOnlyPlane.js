/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useEffect } from "react/cjs/react.development";
import { useLoader } from "@react-three/fiber";
import { FrontSide, TextureLoader } from "three";

export default function Model({ ...props }) {
  const group = useRef();
  const { nodes, animations } = useGLTF(
    process.env.PUBLIC_URL + "/testOnlyPlane.glb"
  );
  const { actions } = useAnimations(animations, group);

  const front = useLoader(TextureLoader, process.env.PUBLIC_URL + "/front.jpg");
  front.flipY = false;
  const back = useLoader(TextureLoader, process.env.PUBLIC_URL + "/back.jpg");

  useEffect(() => {
    const { fold } = actions;

    fold.repetitions = 1;
    fold.clampWhenFinished = true;
    fold.play();
  }, []);

  return (
    <group
      position={[0, -0.5, 696]}
      rotation={[0, 0, 0]}
      ref={group}
      {...props}
      dispose={null}
    >
      <mesh
        name="material"
        geometry={nodes.material.geometry}
        material={nodes.material.material}
        morphTargetDictionary={nodes.material.morphTargetDictionary}
        morphTargetInfluences={nodes.material.morphTargetInfluences}
      >
        <meshStandardMaterial
          {...nodes.material.material}
          map={back}
          roughness={1}
          metalness={0.4}
          transparent={true}
          depthTest={true}
          alphaTest={0.5}
        />
      </mesh>
      <mesh
        name="material_1"
        geometry={nodes.material_1.geometry}
        material={nodes.material_1.material}
        morphTargetDictionary={nodes.material_1.morphTargetDictionary}
        morphTargetInfluences={nodes.material_1.morphTargetInfluences}
      >
        <meshStandardMaterial
          {...nodes.material_1.material}
          map={front}
          roughness={1}
          metalness={0.4}
          transparent={true}
          depthTest={true}
          alphaTest={0.5}
        />
      </mesh>
      <mesh
        name="material_2"
        geometry={nodes.material_2.geometry}
        material={nodes.material_2.material}
        morphTargetDictionary={nodes.material_2.morphTargetDictionary}
        morphTargetInfluences={nodes.material_2.morphTargetInfluences}
      >
        <meshStandardMaterial
          {...nodes.material_2.material}
          color="#fff"
          emissive="#fff"
        />
      </mesh>
    </group>
  );
}

useGLTF.preload(process.env.PUBLIC_URL + "/testOnlyPlane.glb");
