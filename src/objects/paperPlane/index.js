/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from "react";
import * as THREE from "three";
import { useGLTF, useAnimations } from "@react-three/drei";
import { act, useLoader } from "@react-three/fiber";
import { useControls } from "leva";

export default function Model({ ...props }) {
  const {
    scaleFactor,
    color,
    positionX,
    positionY,
    positionZ,
    wireframe,
    rotationX,
    rotationY,
    rotationZ,
    emissiveIntensity,
  } = useControls("plane", {
    scaleFactor: {
      value: 10,
      min: 0.1,
      max: 100,
      step: 0.5,
    },
    emissiveIntensity: {
      min: 0,
      max: 100,
      value: 0,
      step: 0.01,
    },
    color: "#fff",
    positionX: {
      value: 0,
      min: -1000,
      max: 1000,
      step: 0.01,
    },
    positionY: {
      value: 0,
      min: -1000,
      max: 1000,
      step: 0.1,
    },
    positionZ: {
      value: 695,
      min: -1000,
      max: 1000,
      step: 0.1,
    },
    rotationX: {
      value: Math.PI / 2,
      step: 0.1,
      min: -1000,
      max: 1000,
    },
    rotationY: {
      value: 0,
      step: 0.1,
      min: -1000,
      max: 1000,
    },
    rotationZ: {
      value: -Math.PI * 2,
      step: 0.001,
      min: -1000,
      max: 1000,
    },
    wireframe: false,
  });

  const test = useLoader(THREE.TextureLoader, "/test.jpg");
  const hello = useLoader(THREE.TextureLoader, "/hello.jpeg");
  hello.flipY = false;
  test.flipY = false;

  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/ekzotik.glb");
  const { actions } = useAnimations(animations, group);
  useEffect(() => {
    console.log("ACTIONS", actions);
    const { fold } = actions;
    fold.play();
  }, []);
  console.log("nodes: ", nodes);
  return (
    <group
      scale={[scaleFactor, scaleFactor, scaleFactor]}
      position={[positionX, positionY, positionZ]}
      rotation={[rotationX, rotationY, rotationZ]}
      ref={group}
      {...props}
      dispose={null}
    >
      <mesh
        layers={2}
        name="Plane_1"
        geometry={nodes.Plane_1.geometry}
        material={materials.back}
        morphTargetDictionary={nodes.Plane_1.morphTargetDictionary}
        morphTargetInfluences={nodes.Plane_1.morphTargetInfluences}
      />
      <mesh
        layers={2}
        name="Plane_2"
        geometry={nodes.Plane_2.geometry}
        material={materials.side}
        morphTargetDictionary={nodes.Plane_2.morphTargetDictionary}
        morphTargetInfluences={nodes.Plane_2.morphTargetInfluences}
      />
      <mesh
        layers={2}
        name="Plane_3"
        geometry={nodes.Plane_3.geometry}
        material={materials.front}
        morphTargetDictionary={nodes.Plane_3.morphTargetDictionary}
        morphTargetInfluences={nodes.Plane_3.morphTargetInfluences}
      />
    </group>
  );
}

useGLTF.preload("/ekzotik.glb");
