{"version":3,"sources":["reportWebVitals.js","store/index.js","objects/paragraphs/Paragraph.jsx","objects/paragraphs/Time.jsx","objects/paragraphs/Patience.jsx","objects/paragraphs/Android.jsx","objects/paragraphs/IOS.jsx","objects/paragraphs/ReactJS.jsx","objects/constants.js","objects/Starter.js","helpers/animation.js","objects/world/createPath.js","objects/TestOnlyPlane.js","objects/Sheet.js","fonts/bold.blob","objects/Text.jsx","objects/Loading.js","postprocessing/index.js","objects/animHandler.js","objects/world/index.jsx","scene/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStore","create","subscribeWithSelector","set","get","scrollStatus","isScrolling","setIsSCrolling","state","initialAnimation","progress","planeAndSheetReverseOpacitiesProgress","lastChanged","setProgress","setPlaneAndSheetReverseOpacitiesProgress","experience","visible","initialJoinProgress","initialGoProgress","initialScaleProgress","experienceCubesToClockPositionProgress","experienceCubesToClockRotationProgress","toClockProgress","clockMoveProgress","timeDefinitionProgress","clockCloseProgress","timeDefinitionCloseProgress","cubesToCamelPositionProgress","cubesToCamelRotationProgress","toCamelProgress","camelMoveProgress","patienceDefinitionProgress","camelGoProgress","patienceDefitionCloseProgress","cubesToAndroidPositionProgress","cubesToAndroidRotationProgress","toAndroidProgress","androidParagraphProgress","androidMoveProgress","androidGoProgress","androidParagraphCloseProgress","experienceCubesToApplePositionProgress","experienceCubesToAppleRotationProgress","toAppleProgress","appleParagraphProgress","appleParagraphCloseProgress","appleMoveProgress","appleGoProgress","cubesToReactPositionProgress","cubesToReactRotationProgress","flowerColorsProgress","toFlowerProgress","flowerParagraphProgress","flowerParagraphCloseProgress","pineappleColorsProgress","toPineAppleProgress","pineappleParagraphProgress","pineappleParagraphCloseProgress","cannonColorsProgress","toCannonProgress","cannonParagraphProgress","cannonParagraphCloseProgress","setInitialJoinProgress","setInitialScaleProgress","setInitialGoProgress","setExperienceCubesToClockPositionProgress","setExperienceCubesToClockRotationProgress","setToClockProgress","setClockMoveProgress","setTimeDefinitionProgress","setClockCloseProgress","setTimeDefintionCloseProgress","setCubesToCamelPositionProgress","setCubesToCamelRotationProgress","setToCamelProgress","setCamelMoveProgress","setPatienceDefinitonProgress","setCamelGoProgress","setPatinceDefinitionCloseProgres","setCubesToAndroidPositionProgress","setCubesToAndroidRotationProgress","setToAndroidProgress","setAndroidParagraphProgress","setAndroidMoveProgress","setAndroidGoProgress","setAndroidParagraphCloseProgress","setExperienceCubesToApplePositionProgress","setExperienceCubesToAppleRotationProgress","setToAppleProgress","setAppleParagraphProgress","setAppleMoveProgress","setAppleGoProgress","setAppleParagraphCloseProgress","setCubesToReactPositionProgress","setCubesToReactRotationProgress","setFlowerColorsProgress","setToFLowerProgress","setFlowerParagraphProgress","setFlowerParagraphCloseProgress","setPineappleColorsProgress","setToPinappleProgress","setPineappleParagraphProgress","setPineappleParagraphCloseProgress","setCannonColorsProgress","setToCannonProgress","setCannonParagraphProgress","setCannonParagraphCloseProgress","sheet","moveToCenterProgress","rotateToSheetProgress","sheetProgress","backRotateProgress","fixSheetPositonbeforeConvertingToSheetProgress","setMoveToCenterProgress","setRotateToSheetProgress","setSheetProgress","setBackRotateProgress","setFixSheetPositonbeforeConvertingToSheetProgress","plane","planeFoldingProgress","planeToInitialTrajectoryPointProgress","planeToClockProgress","planeToCamelProgres","planeToAndroidProgress","planeToAppleProgress","planeToReactPositionProgress","setPlaneFoldingProgress","setPlaneToInitialTrajectoryPointProgress","setPlaneToClockProgress","setPlaneToCamelProgress","setPlaneToAndroidProgress","setPlaneToAppleProgress","setPlaneToReactPositionProgress","Paragraph","ref","title","pronounciation","definition","sentence1","sentence2","conclusion","position","children","Html","transform","sprite","style","opacity","color","forwardRef","Time","_","Patience","Android","IOS","ReactJS","objectPositionsInSpace","x","y","z","Model","props","mainContainer","useThree","camera","useRef","secondaryContainer","mainCubeMaterial","mainCubeFaceMaterial","cube1Material","cube2Material","cube3Material","cube4Material","timeDefinition","patienceDefintion","andoridParagraph","appleParagraph","reactParagraph","useGLTF","process","nodes","animations","useAnimations","actions","mixer","activeAnimation","play","timeTweak","animationLoop","LoopOnce","action","current","repetitions","setLoop","time","_clip","duration","reset","setTime","paused","useEffect","clock","camel","android","ios","react","initialRotation","anime","targets","autoplay","rotation","Math","PI","unsubscribeInitialAnimation","subscribe","seek","scaleDown","scale","join","cubesToClockPosition","cubesToClockRotation","timeDefinitionShow","timeDefinitionClose","cubesToCamelPosition","rotateCubesForCamelAnim","showPatienceDefinition","hidePatienceDefinition","cubesToAndroidPosition","rotateCubesForAndroidAnimation","showAndroidParagraph","hideAndroidParagraph","cubesToApplePosition","cubesToAppleRotation","showAppleParagraph","hideAppleParagraph","cubesToReactPosition","cubesToReactRotation","showReactParagraph","go","toClock","clockMove","toCamel","camelMove","toAndroid","androidMove","toApple","appleMove","toFlower","toPineapple","toCannon","unsubscribeExperieneStore","stopAllAction","LoopRepeat","moveTweak","useFrame","acAnim","dispose","name","geometry","cube","material","receiveShadow","morphTargetDictionary","morphTargetInfluences","layers","roughness","metalness","emissive","cube_1","cube_2","cube_3","cube_4","cube_5","preload","seekGltfAnimation","animation","playbackControllerRef","customAnimationDuration","clampWhenFinished","setDuration","factor","_mixer","timeScale","createSpiralPathFromCoordinateWithRadius","coordinate","radius","spirals","heightDivider","direction","type","vector3Array","i","yCord","v1","Vector3","v2","v3","v4","push","points","lastPosition","length","group","front","useLoader","TextureLoader","flipY","back","planeFoldingProgressChecker","planeToClockProgressChecker","planeToCamelProgressChecker","planeToAndroidProgressChecker","planeToAppleProgressChecker","planeToReactPositionProgressChecker","moveCamera","lineRef","computeLineDistances","p","useState","c","CatmullRomCurve3","tension","arcLengthDivisions","curveType","closed","line","BufferGeometry","setFromPoints","getSpacedPoints","lineGeometry","planePosition","planeRotation","up","axis","unsubscribeFromSheetListener","planeToIntialPosition","planeToInitialRotation","quaternion","w","fold","unsubcribeFromPlaneAnimationListener","setFromAxisAngle","handleMovePlane","sheetProgressCheckerRef","shouldCameraMove","fraction","isBackward","getPoint","tangent","getTangent","crossVectors","normalize","angle","acos","dot","movePlane","copy","emissiveIntensity","dashSize","gapSize","map","transparent","depthTest","alphaTest","material_1","material_2","material1Ref","material2Ref","material3Ref","sheetProgressChecker","unsubscribeFromPlaneListener","moveToCenterAnimation","rotateToSheet","rotateBack","unsubscribeSheetStore","toSheet","Text","vAlign","hAlign","size","font","FontLoader","boldUrl","config","useMemo","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","mesh","useLayoutEffect","computeBoundingBox","boundingBox","getSize","args","extend","TextGeometry","LoadingText","text","createRef","positionChange","unsubscribeStore","EffectComposer","ShaderPass","RenderPass","Effect","gl","scene","effectComposer","renderScene","toneMappingExposure","pow","autoClear","antialias","finalComposer","unrealBloomPass","UnrealBloomPass","Vector2","width","addPass","setSize","clear","render","clearDepth","Animator","_event","deltaY","percentage","touchStartY","divContainer","document","getElementById","maxHeight","clientHeight","offsetHeight","window","innerHeight","scrollTimeout","onWheel","e","clearTimeout","setTimeout","getState","wheelDeltaY","scroll","onTouchStart","t","targetTouches","pageY","onTouchMove","onResize","a","b","timeline","easing","empty","initialAnimationProgress","initalCubeJoinProgress","initalCubeGoProgress","centerSheetProgress","rotateSheetProgress","toSheetProgress","sheetBackRotateProgress","planeFoldProgress","clockGoProgress","experienceCubesToCamelPosition","experienceCubesToCamelRotation","patienceDefitionProgress","showAndroidParagraphProgress","handleUpdateAnimation","anim","progressTracker","progressSetter","completed","addEventListener","passive","add","update","removeEventListener","World","Stats","fallback","Loading","intensity","Scene","canvas","id","className","shadows","far","near","fov","aspect","innerWidth","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.8893f09b.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import create from \"zustand\";\nimport { subscribeWithSelector } from \"zustand/middleware\";\n\nconst useStore = create(\n  subscribeWithSelector((set, get) => ({\n    //TODO: set scrollstatus checks before each update.\n    //TODO: separate initialAnimation,experience,shet,plane to different files\n    //TODO: create state modifier function with key string as arguments (or don't do that)\n    scrollStatus: {\n      isScrolling: false,\n      setIsSCrolling(isScrolling) {\n        set((state) => ({\n          scrollStatus: {\n            ...state.scrollStatus,\n            isScrolling,\n          },\n        }));\n      },\n    },\n\n    //todo: change name to mutual animations\n    initialAnimation: {\n      //todo: change name to intial animations progress\n      progress: null,\n      planeAndSheetReverseOpacitiesProgress: null,\n      lastChanged: null,\n      setProgress(progress) {\n        set((state) => {\n          return {\n            initialAnimation: {\n              ...state.initialAnimation,\n              progress,\n              lastChanged: \"progress\",\n            },\n          };\n        });\n      },\n      setPlaneAndSheetReverseOpacitiesProgress(\n        planeAndSheetReverseOpacitiesProgress\n      ) {\n        set((state) => {\n          return {\n            initialAnimation: {\n              ...state.initialAnimation,\n              planeAndSheetReverseOpacitiesProgress,\n              lastChanged: \"planeAndSheetReverseOpacitiesProgress\",\n            },\n          };\n        });\n      },\n    },\n    experience: {\n      visible: false,\n      //initial animations progress values\n      initialJoinProgress: null,\n      initialGoProgress: null,\n      lastChanged: null,\n      initialScaleProgress: null,\n      experienceCubesToClockPositionProgress: null,\n      experienceCubesToClockRotationProgress: null,\n\n      //clock animation progress values\n      toClockProgress: null,\n      clockMoveProgress: null,\n      timeDefinitionProgress: null,\n      clockCloseProgress: null,\n      timeDefinitionCloseProgress: null,\n\n      //camel animation progress values\n      cubesToCamelPositionProgress: null,\n      cubesToCamelRotationProgress: null,\n      toCamelProgress: null,\n      camelMoveProgress: null,\n      patienceDefinitionProgress: null,\n      camelGoProgress: null,\n      patienceDefitionCloseProgress: null,\n\n      //android animation progress values\n      cubesToAndroidPositionProgress: null,\n      cubesToAndroidRotationProgress: null,\n      toAndroidProgress: null,\n      androidParagraphProgress: null,\n      androidMoveProgress: null,\n      androidGoProgress: null,\n      androidParagraphCloseProgress: null,\n\n      //apple animation progress values\n      experienceCubesToApplePositionProgress: null,\n      experienceCubesToAppleRotationProgress: null,\n      toAppleProgress: null,\n      appleParagraphProgress: null,\n      appleParagraphCloseProgress: null,\n      appleMoveProgress: null,\n      appleGoProgress: null,\n\n      //react animation progress values\n      cubesToReactPositionProgress: null,\n      cubesToReactRotationProgress: null,\n\n      //flower\n      flowerColorsProgress: null,\n      toFlowerProgress: null,\n      flowerParagraphProgress: null,\n      flowerParagraphCloseProgress: null,\n\n      //pineapple\n      pineappleColorsProgress: null,\n      toPineAppleProgress: null,\n      pineappleParagraphProgress: null,\n      pineappleParagraphCloseProgress: null,\n\n      //cannon\n      cannonColorsProgress: null,\n      toCannonProgress: null,\n      cannonParagraphProgress: null,\n      cannonParagraphCloseProgress: null,\n\n      setInitialJoinProgress(initialJoinProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              initialJoinProgress,\n              lastChanged: \"initialJoinProgress\",\n            },\n          };\n        });\n      },\n      setInitialScaleProgress(initialScaleProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              initialScaleProgress,\n              lastChanged: \"initialScaleProgress\",\n            },\n          };\n        });\n      },\n      setInitialGoProgress(initialGoProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              initialGoProgress,\n              lastChanged: \"initialGoProgress\",\n            },\n          };\n        });\n      },\n      setExperienceCubesToClockPositionProgress(\n        experienceCubesToClockPositionProgress\n      ) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              experienceCubesToClockPositionProgress,\n              lastChanged: \"experienceCubesToClockPositionProgress\",\n            },\n          };\n        });\n      },\n\n      setExperienceCubesToClockRotationProgress(\n        experienceCubesToClockRotationProgress\n      ) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              experienceCubesToClockRotationProgress,\n              lastChanged: \"experienceCubesToClockRotationProgress\",\n            },\n          };\n        });\n      },\n      setToClockProgress(toClockProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              toClockProgress,\n              lastChanged: \"toClockProgress\",\n            },\n          };\n        });\n      },\n      setClockMoveProgress(clockMoveProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              clockMoveProgress,\n              lastChanged: \"clockMoveProgress\",\n            },\n          };\n        });\n      },\n      setTimeDefinitionProgress(timeDefinitionProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              timeDefinitionProgress,\n              lastChanged: \"timeDefinitionProgress\",\n            },\n          };\n        });\n      },\n      setClockCloseProgress(clockCloseProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              clockCloseProgress,\n              lastChanged: \"clockCloseProgress\",\n            },\n          };\n        });\n      },\n      setTimeDefintionCloseProgress(timeDefinitionCloseProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              timeDefinitionCloseProgress,\n              lastChanged: \"timeDefinitionCloseProgress\",\n            },\n          };\n        });\n      },\n      setCubesToCamelPositionProgress(cubesToCamelPositionProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cubesToCamelPositionProgress,\n              lastChanged: \"cubesToCamelPositionProgress\",\n            },\n          };\n        });\n      },\n      setCubesToCamelRotationProgress(cubesToCamelRotationProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cubesToCamelRotationProgress,\n              lastChanged: \"cubesToCamelRotationProgress\",\n            },\n          };\n        });\n      },\n      setToCamelProgress(toCamelProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              toCamelProgress,\n              lastChanged: \"toCamelProgress\",\n            },\n          };\n        });\n      },\n      setCamelMoveProgress(camelMoveProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              camelMoveProgress,\n              lastChanged: \"camelMoveProgress\",\n            },\n          };\n        });\n      },\n      setPatienceDefinitonProgress(patienceDefinitionProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              patienceDefinitionProgress,\n              lastChanged: \"patienceDefinitionProgress\",\n            },\n          };\n        });\n      },\n      setCamelGoProgress(camelGoProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              camelGoProgress,\n              lastChanged: \"camelGoProgress\",\n            },\n          };\n        });\n      },\n      setPatinceDefinitionCloseProgres(patienceDefitionCloseProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              patienceDefitionCloseProgress,\n              lastChanged: \"patienceDefitionCloseProgress\",\n            },\n          };\n        });\n      },\n      setCubesToAndroidPositionProgress(cubesToAndroidPositionProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cubesToAndroidPositionProgress,\n              lastChanged: \"cubesToAndroidPositionProgress\",\n            },\n          };\n        });\n      },\n      setCubesToAndroidRotationProgress(cubesToAndroidRotationProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cubesToAndroidRotationProgress,\n              lastChanged: \"cubesToAndroidRotationProgress\",\n            },\n          };\n        });\n      },\n      setToAndroidProgress(toAndroidProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              toAndroidProgress,\n              lastChanged: \"toAndroidProgress\",\n            },\n          };\n        });\n      },\n      setAndroidParagraphProgress(androidParagraphProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              androidParagraphProgress,\n              lastChanged: \"androidParagraphProgress\",\n            },\n          };\n        });\n      },\n      setAndroidMoveProgress(androidMoveProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              androidMoveProgress,\n              lastChanged: \"androidMoveProgress\",\n            },\n          };\n        });\n      },\n      setAndroidGoProgress(androidGoProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              androidGoProgress,\n              lastChanged: \"androidGoProgress\",\n            },\n          };\n        });\n      },\n      setAndroidParagraphCloseProgress(androidParagraphCloseProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              androidParagraphCloseProgress,\n              lastChanged: \"androidParagraphCloseProgress\",\n            },\n          };\n        });\n      },\n      setExperienceCubesToApplePositionProgress(\n        experienceCubesToApplePositionProgress\n      ) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              experienceCubesToApplePositionProgress,\n              lastChanged: \"experienceCubesToApplePositionProgress\",\n            },\n          };\n        });\n      },\n      setExperienceCubesToAppleRotationProgress(\n        experienceCubesToAppleRotationProgress\n      ) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              experienceCubesToAppleRotationProgress,\n              lastChanged: \"experienceCubesToAppleRotationProgress\",\n            },\n          };\n        });\n      },\n      setToAppleProgress(toAppleProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              toAppleProgress,\n              lastChanged: \"toAppleProgress\",\n            },\n          };\n        });\n      },\n      setAppleParagraphProgress(appleParagraphProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              appleParagraphProgress,\n              lastChanged: \"appleParagraphProgress\",\n            },\n          };\n        });\n      },\n      setAppleMoveProgress(appleMoveProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              appleMoveProgress,\n              lastChanged: \"appleMoveProgress\",\n            },\n          };\n        });\n      },\n      setAppleGoProgress(appleGoProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              appleGoProgress,\n              lastChanged: \"appleGoProgress\",\n            },\n          };\n        });\n      },\n      setAppleParagraphCloseProgress(appleParagraphCloseProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              appleParagraphCloseProgress,\n              lastChanged: \"appleParagraphCloseProgress\",\n            },\n          };\n        });\n      },\n      setCubesToReactPositionProgress(cubesToReactPositionProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cubesToReactPositionProgress,\n              lastChanged: \"cubesToReactPositionProgress\",\n            },\n          };\n        });\n      },\n      setCubesToReactRotationProgress(cubesToReactRotationProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cubesToReactRotationProgress,\n              lastChanged: \"cubesToReactRotationProgress\",\n            },\n          };\n        });\n      },\n      setFlowerColorsProgress(flowerColorsProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              flowerColorsProgress,\n              lastChanged: \"flowerColorsProgress\",\n            },\n          };\n        });\n      },\n      setToFLowerProgress(toFlowerProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              toFlowerProgress,\n              lastChanged: \"toFlowerProgress\",\n            },\n          };\n        });\n      },\n      setFlowerParagraphProgress(flowerParagraphProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              flowerParagraphProgress,\n              lastChanged: \"flowerParagraphProgress\",\n            },\n          };\n        });\n      },\n      setFlowerParagraphCloseProgress(flowerParagraphCloseProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              flowerParagraphCloseProgress,\n              lastChanged: \"flowerParagraphCloseProgress\",\n            },\n          };\n        });\n      },\n      setPineappleColorsProgress(pineappleColorsProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              pineappleColorsProgress,\n              lastChanged: \"pineappleColorsProgress\",\n            },\n          };\n        });\n      },\n      setToPinappleProgress(toPineAppleProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              toPineAppleProgress,\n              lastChanged: \"toPineAppleProgress\",\n            },\n          };\n        });\n      },\n      setPineappleParagraphProgress(pineappleParagraphProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              pineappleParagraphProgress,\n              lastChanged: \"pineappleParagraphProgress\",\n            },\n          };\n        });\n      },\n      setPineappleParagraphCloseProgress(pineappleParagraphCloseProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              pineappleParagraphCloseProgress,\n              lastChanged: \"pineappleParagraphCloseProgress\",\n            },\n          };\n        });\n      },\n      setCannonColorsProgress(cannonColorsProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cannonColorsProgress,\n              lastChanged: \"cannonColorsProgress\",\n            },\n          };\n        });\n      },\n      setToCannonProgress(toCannonProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              toCannonProgress,\n              lastChanged: \"toCannonProgress\",\n            },\n          };\n        });\n      },\n      setCannonParagraphProgress(cannonParagraphProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cannonParagraphProgress,\n              lastChanged: \"cannonParagraphProgress\",\n            },\n          };\n        });\n      },\n      setCannonParagraphCloseProgress(cannonParagraphCloseProgress) {\n        set((state) => {\n          return {\n            experience: {\n              ...state.experience,\n              cannonParagraphCloseProgress,\n              lastChanged: \"cannonParagraphCloseProgress\",\n            },\n          };\n        });\n      },\n    },\n    sheet: {\n      moveToCenterProgress: null,\n      rotateToSheetProgress: null,\n      sheetProgress: null,\n      backRotateProgress: null,\n      fixSheetPositonbeforeConvertingToSheetProgress: null,\n      lastChanged: null,\n      setMoveToCenterProgress(moveToCenterProgress) {\n        set((state) => {\n          return {\n            sheet: {\n              ...state.sheet,\n              moveToCenterProgress,\n              lastChanged: \"moveToCenterProgress\",\n            },\n          };\n        });\n      },\n      setRotateToSheetProgress(rotateToSheetProgress) {\n        set((state) => {\n          return {\n            sheet: {\n              ...state.sheet,\n              rotateToSheetProgress,\n              lastChanged: \"rotateToSheetProgress\",\n            },\n          };\n        });\n      },\n      setSheetProgress(sheetProgress) {\n        set((state) => {\n          return {\n            sheet: {\n              ...state.sheet,\n              sheetProgress,\n              lastChanged: \"sheetProgress\",\n            },\n          };\n        });\n      },\n      setBackRotateProgress(backRotateProgress) {\n        set((state) => {\n          return {\n            sheet: {\n              ...state.sheet,\n              backRotateProgress,\n              lastChanged: \"backRotateProgress\",\n            },\n          };\n        });\n      },\n      setFixSheetPositonbeforeConvertingToSheetProgress(\n        fixSheetPositonbeforeConvertingToSheetProgress\n      ) {\n        set((state) => {\n          return {\n            sheet: {\n              ...state.sheet,\n              fixSheetPositonbeforeConvertingToSheetProgress,\n              lastChanged: \"fixSheetPositonbeforeConvertingToSheet\",\n            },\n          };\n        });\n      },\n    },\n    plane: {\n      planeFoldingProgress: null,\n      planeToInitialTrajectoryPointProgress: null,\n      planeToClockProgress: null,\n      lastChanged: null,\n      planeToCamelProgres: null,\n      planeToAndroidProgress: null,\n      planeToAppleProgress: null,\n      planeToReactPositionProgress: null,\n      setPlaneFoldingProgress(planeFoldingProgress) {\n        set((state) => {\n          return {\n            plane: {\n              ...state.plane,\n              planeFoldingProgress,\n              lastChanged: \"planeFoldingProgress\",\n            },\n          };\n        });\n      },\n      setPlaneToInitialTrajectoryPointProgress(\n        planeToInitialTrajectoryPointProgress\n      ) {\n        set((state) => {\n          return {\n            plane: {\n              ...state.plane,\n              planeToInitialTrajectoryPointProgress,\n              lastChanged: \"planeToInitialTrajectoryPointProgress\",\n            },\n          };\n        });\n      },\n      setPlaneToClockProgress(planeToClockProgress) {\n        set((state) => {\n          return {\n            plane: {\n              ...state.plane,\n              planeToClockProgress,\n              lastChanged: \"planeToClockProgress\",\n            },\n          };\n        });\n      },\n      setPlaneToCamelProgress(planeToCamelProgres) {\n        set((state) => {\n          return {\n            plane: {\n              ...state.plane,\n              planeToCamelProgres,\n              lastChanged: \"planeToCamelProgres\",\n            },\n          };\n        });\n      },\n      setPlaneToAndroidProgress(planeToAndroidProgress) {\n        set((state) => {\n          return {\n            plane: {\n              ...state.plane,\n              planeToAndroidProgress,\n              lastChanged: \"planeToAndroidProgress\",\n            },\n          };\n        });\n      },\n      setPlaneToAppleProgress(planeToAppleProgress) {\n        set((state) => {\n          return {\n            plane: {\n              ...state.plane,\n              planeToAppleProgress,\n              lastChanged: \"planeToAppleProgress\",\n            },\n          };\n        });\n      },\n      setPlaneToReactPositionProgress(planeToReactPositionProgress) {\n        set((state) => {\n          return {\n            plane: {\n              ...state.plane,\n              planeToReactPositionProgress,\n              lastChanged: \"planeToReactPositionProgress\",\n            },\n          };\n        });\n      },\n    },\n  }))\n);\n\nexport default useStore;\n","import { forwardRef } from \"react\";\nimport { Html } from \"@react-three/drei\";\n\nfunction Paragraph(\n  {\n    title = \"Time\",\n    pronounciation = \"/tʌɪm/\",\n    definition = \"Time is valuable, and it's running\",\n    sentence1 = \" If you dont' have the time right now\",\n    sentence2 = \" Just download my resume by pressing [SPACE]\",\n    conclusion = \"Otherwise, keep scrolling\",\n    position = [15, 4, 0],\n    children,\n  },\n  ref\n) {\n  return (\n    <Html\n      position={position}\n      ref={ref}\n      transform\n      sprite\n      style={{\n        opacity: 0,\n      }}\n    >\n      <h1 style={{ color: \"white\" }}>{title}</h1>\n      <h2 style={{ color: \"white\" }}>{pronounciation}</h2>\n      <h3 style={{ color: \"white\" }}>{definition}</h3>\n      <p style={{ color: \"white\" }}>{sentence1}</p>\n      <p style={{ color: \"white\" }}>{sentence2}</p>\n      <p style={{ color: \"white\" }}>{conclusion}</p>\n      {children}\n    </Html>\n  );\n}\n\nexport default forwardRef(Paragraph);\n","import { forwardRef } from \"react\";\n\nimport Paragraph from \"./Paragraph\";\n\nfunction Time(_, ref) {\n  return (\n    <Paragraph\n      ref={ref}\n      position={[15, 4, 0]}\n      title=\"Time\"\n      pronounciation=\"/tʌɪm/\"\n      definition=\"Time is valuable and it's running\"\n      sentence1=\"If you dont' have the time right now\"\n      sentence2=\"Just download my resume by pressing [SPACE]\"\n      conclusion=\"Otherwise keep scrolling\"\n    />\n  );\n}\n\nexport default forwardRef(Time);\n","import { forwardRef } from \"react\";\n\nimport Paragraph from \"./Paragraph\";\n\nfunction Patience(_, ref) {\n  return (\n    <Paragraph\n      ref={ref}\n      position={[-22, 2, 0]}\n      title=\"Patience\"\n      pronounciation=\"/ˈpeɪʃ(ə)ns/\"\n      definition=\"Sometimes I put myself in difficult circumstances 😤\"\n      sentence1=\"Just to endure them 💪\"\n      sentence2=\"Don't worry, I tend not to do this in work-related stuff\"\n      conclusion=\"If we don't train our patience, we cannot acomplish bigger things\"\n    />\n  );\n}\n\nexport default forwardRef(Patience);\n","import { forwardRef } from \"react\";\n\nimport Paragraph from \"./Paragraph\";\n\nfunction Android(_, ref) {\n  return (\n    <Paragraph\n      ref={ref}\n      position={[0, 0, 5]}\n      title=\"Android\"\n      pronounciation=\"/ˈpeɪʃ(ə)ns/\"\n      definition=\"This is the starting point of my career as a Software Developer\"\n      sentence1=\"I learned the internal mobile lifecycle and some OOP design patterns\"\n      sentence2=\"Build and shipped 2 Android Native Apps\"\n      conclusion=\"Press [1] for app 1 and press [2] for app 2\"\n    />\n  );\n}\n\nexport default forwardRef(Android);\n","import { forwardRef } from \"react\";\n\nimport Paragraph from \"./Paragraph\";\n\nfunction IOS(_, ref) {\n  return (\n    <Paragraph\n      ref={ref}\n      position={[0, 2, 10]}\n      title=\"iOS\"\n      pronounciation=\"/ʌɪəʊˈɛs/\"\n      definition=\"iOS development was next, and I had the chance to learn some even more complex design patterns on SWIFT\"\n      sentence1=\"Refactored, Maintained and Built from scratch multipe iOS Apps qe the ti Bash\"\n      sentence2=\"iOS was fun, but React Was better\"\n      conclusion=\"Press [1] for app 1 and press [2] for app 2\"\n    />\n  );\n}\n\nexport default forwardRef(IOS);\n","import { forwardRef } from \"react\";\n\nimport Paragraph from \"./Paragraph\";\n\nfunction ReactJS(_, ref) {\n  return (\n    <Paragraph\n      ref={ref}\n      position={[0, 0, 0]}\n      title=\"React JS\"\n      pronounciation=\"/rɪˈakt/\"\n      definition=\"I got into the javascript and react world, and I'm here to stay\"\n      sentence1=\"bla bla bla bla\"\n      sentence2=\"la la la la\"\n      conclusion=\"ahahhahahhahhahaha\"\n    />\n  );\n}\n\nexport default forwardRef(ReactJS);\n","export const objectPositionsInSpace = {\n  planeInitialPosition: { x: 15, y: -1.09, z: 682 },\n  clock: {\n    x: 0,\n    y: 0,\n    z: 500,\n  },\n  camel: {\n    x: 50,\n    y: 10,\n    z: 400,\n  },\n  android: {\n    x: 100,\n    y: 0,\n    z: 300,\n  },\n  ios: {\n    x: 0,\n    y: 10,\n    z: 200,\n  },\n  react: {\n    x: 0,\n    y: 0,\n    z: 100,\n  },\n};\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useEffect, useRef } from \"react\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport useStore from \"../store\";\nimport anime from \"animejs/lib/anime.es\";\n\nimport { Time, Patience, Android, IOS, ReactJS } from \"./paragraphs\";\n\nimport { objectPositionsInSpace } from \"./constants\";\nimport { LoopRepeat, LoopOnce } from \"three\";\n\n//https://discourse.threejs.org/t/playing-an-animation-changes-behaviour-of-next-animation/14928/7\n\nexport default function Model({ ...props }) {\n  const { camera } = useThree();\n\n  //cube refs\n  const mainContainer = useRef();\n  const secondaryContainer = useRef();\n\n  //material refs\n  const mainCubeMaterial = useRef();\n  const mainCubeFaceMaterial = useRef();\n  const cube1Material = useRef();\n  const cube2Material = useRef();\n  const cube3Material = useRef();\n  const cube4Material = useRef();\n\n  //TODO: REFACTOR THE PARAGRAPHGS with forwardrefs\n  //paragraphs ref\n  const timeDefinition = useRef();\n  const patienceDefintion = useRef();\n  const andoridParagraph = useRef();\n  const appleParagraph = useRef();\n  const reactParagraph = useRef();\n\n  const { nodes, animations } = useGLTF(process.env.PUBLIC_URL + \"/all.glb\");\n  const { actions, mixer } = useAnimations(animations, mainContainer);\n  const activeAnimation = useRef({});\n\n  function play({ progress = 0.0, timeTweak = 0.0, animationLoop = LoopOnce }) {\n    const action = activeAnimation.current;\n    action.repetitions = 1;\n    action.setLoop(animationLoop);\n\n    if (action.time <= action._clip.duration - timeTweak) {\n      //handle transform animation reset glitch\n      action.reset().play();\n      mixer.setTime((action._clip.duration / 100) * progress);\n    } else {\n      action.paused = true;\n    }\n  }\n\n  useEffect(() => {\n    if (!mainContainer.current) return;\n    const { clock, camel, android, ios, react } = objectPositionsInSpace;\n\n    const _ = anime({\n      targets: mainContainer.current.position,\n      x: [15.45, 15.45],\n      y: [-0.6, -0.6],\n      z: [681.4, 681.4],\n      duration: 1,\n      autoplay: true,\n    });\n    const __ = anime({\n      targets: mainContainer.current.rotation,\n      y: [Math.PI / 8, Math.PI / 8],\n      duration: 1,\n      autoplay: true,\n    });\n\n    //initial rotation\n    const initialRotation = anime({\n      targets: mainContainer.current.rotation,\n      x: 0,\n      y: 0,\n      z: 0,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //store listener for intial anim\n    const unsubscribeInitialAnimation = useStore.subscribe(\n      (state) => state.initialAnimation,\n      ({ progress }) => {\n        initialRotation.seek(progress);\n      }\n    );\n\n    //initial scaleDown for playing the go animation\n    const scaleDown = anime({\n      targets: secondaryContainer.current.scale,\n      x: 1,\n      y: 1,\n      z: 1,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //joining the cubes.\n    const join = anime({\n      targets: secondaryContainer.current.position,\n      x: secondaryContainer.current.position.x - 2.6,\n      y: 0,\n      z: 0,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //bring cubes to the clock position\n    const cubesToClockPosition = anime({\n      targets: mainContainer.current.position,\n      //small adjustments for the camera\n      x: [15.45, clock.x - 2],\n      y: [-0.6, clock.y + 8],\n      z: [681.4, clock.z + 50],\n      duration: 500,\n      autoplay: false,\n    });\n\n    //rotate cubes to show good clock animation\n    const cubesToClockRotation = anime({\n      targets: mainContainer.current.rotation,\n      y: [Math.PI / 8, Math.PI / 3],\n      duration: 500,\n      autoplay: false,\n    });\n\n    //show timeDefinition\n    const timeDefinitionShow = anime({\n      targets: timeDefinition.current.style,\n      opacity: 1,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //hide timeDefinition\n    const timeDefinitionClose = anime({\n      targets: timeDefinition.current.style,\n      opacity: 0,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //TODO: set clock colors\n\n    //bring cubes to the camel position\n    const cubesToCamelPosition = anime({\n      targets: mainContainer.current.position,\n      x: [clock.x - 4, camel.x - 10],\n      y: [clock.y + 10, camel.y + 5],\n      z: [clock.z + 20, camel.z + 40],\n      duration: 500,\n      autoplay: false,\n    });\n\n    //rotate cubes for camel anim\n    const rotateCubesForCamelAnim = anime({\n      targets: mainContainer.current.rotation,\n      y: [0, -Math.PI / 3],\n      duration: 500,\n      autoplay: false,\n    });\n\n    //show patience definition\n    const showPatienceDefinition = anime({\n      targets: patienceDefintion.current.style,\n      opacity: 1,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //hide patience definition\n    const hidePatienceDefinition = anime({\n      targets: patienceDefintion.current.style,\n      opacity: 0,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //bring the cubes to android position\n    const cubesToAndroidPosition = anime({\n      targets: mainContainer.current.position,\n      x: [camel.x - 4, android.x - 6],\n      y: [camel.y + 5, android.y + 3],\n      z: [camel.z + 20, android.z + 36],\n      duration: 500,\n      autoplay: false,\n    });\n\n    const rotateCubesForAndroidAnimation = anime({\n      targets: mainContainer.current.rotation,\n      y: [0, Math.PI / 3],\n      duration: 500,\n      autoplay: false,\n    });\n\n    //show android paragraph\n    const showAndroidParagraph = anime({\n      targets: andoridParagraph.current.style,\n      opacity: 1,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //hide android paragraph\n    const hideAndroidParagraph = anime({\n      targets: andoridParagraph.current.style,\n      opacity: 0,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //bring the cubes to apple position\n    const cubesToApplePosition = anime({\n      targets: mainContainer.current.position,\n      x: [android.x + 2, ios.x + 15],\n      y: [android.y, ios.y],\n      z: [android.z + 20, ios.z + 40],\n      duration: 500,\n      autoplay: false,\n    });\n    //adjust helper cubes 4 apple animation\n    //TODO: adjust\n\n    //rotate main cubes for apple animation\n    //TODO: adjust\n    const cubesToAppleRotation = anime({\n      targets: mainContainer.current.rotation,\n      y: [Math.PI / 3, Math.PI / 2],\n      duration: 500,\n      autoplay: false,\n    });\n\n    //show apple paragraph\n    const showAppleParagraph = anime({\n      targets: appleParagraph.current.style,\n      opacity: 1,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //hideAppleParagraph\n    const hideAppleParagraph = anime({\n      targets: appleParagraph.current.style,\n      opacity: 0,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //cubes to react animation\n    const cubesToReactPosition = anime({\n      targets: mainContainer.current.position,\n      x: [ios.x - 4, react.x - 2],\n      y: [ios.y, react.y + 2],\n      z: [ios.z + 30, react.z + 20],\n      duration: 500,\n      autoplay: false,\n    });\n\n    //cubes to react rotation\n    const cubesToReactRotation = anime({\n      targets: mainContainer.current.rotation,\n      y: Math.PI / 2, //TODO: check this\n      duration: 500,\n      autoplay: false,\n    });\n\n    //show react paragraph\n    const showReactParagraph = anime({\n      targets: reactParagraph.current.style,\n      opacity: 1,\n      duration: 500,\n      autoplay: false,\n    });\n\n    //flower colors\n    //TODO: add refs for cube materials or fowradref them from another file or use context and have them reused for performance\n    //this initial time just go with local refs to save time (23:35 pm me to next day's 8:00 am me)\n\n    const mainCubeMaterialToXColor = anime({\n      targets: mainCubeFaceMaterial.current.color,\n    });\n\n    const {\n      go,\n      toClock,\n      clockMove,\n      toCamel,\n      camelMove,\n      toAndroid,\n      androidMove,\n      toApple,\n      appleMove,\n      toFlower,\n      toPineapple,\n      toCannon,\n    } = actions;\n    const unsubscribeExperieneStore = useStore.subscribe(\n      (state) => state.experience,\n      ({\n        //last changed (very important)\n        lastChanged,\n        //intial animation\n        initialJoinProgress,\n        initialGoProgress,\n        initialScaleProgress,\n\n        //clock\n        experienceCubesToClockPositionProgress,\n        experienceCubesToClockRotationProgress,\n        toClockProgress,\n        clockMoveProgress,\n        timeDefinitionProgress,\n        clockCloseProgress,\n        timeDefinitionCloseProgress,\n\n        //camel\n        cubesToCamelPositionProgress,\n        cubesToCamelRotationProgress,\n        toCamelProgress,\n        patienceDefinitionProgress,\n        camelMoveProgress,\n        camelGoProgress,\n        patienceDefitionCloseProgress,\n\n        //android\n        cubesToAndroidPositionProgress,\n        cubesToAndroidRotationProgress,\n        toAndroidProgress,\n        androidParagraphProgress,\n        androidMoveProgress,\n        androidGoProgress,\n        androidParagraphCloseProgress,\n\n        //apple\n        experienceCubesToApplePositionProgress,\n        experienceCubesToAppleRotationProgress,\n        toAppleProgress,\n        appleParagraphProgress,\n        appleMoveProgress,\n        appleGoProgress,\n        appleParagraphCloseProgress,\n\n        //react\n        cubesToReactPositionProgress,\n        cubesToReactRotationProgress,\n        //fower\n        toFlowerProgress,\n        flowerColorsProgress,\n        flowerParagraphProgress,\n        flowerParagraphCloseProgress,\n        //pineapple\n        toPineAppleProgress,\n        pineappleColorsProgress,\n        pineappleParagraphProgress,\n        pineappleParagraphCloseProgress,\n        //cannon\n        toCannonProgress,\n        cannonColorsProgress,\n        cannonParagraphProgress,\n        cannonParagraphCloseProgress,\n      }) => {\n        switch (lastChanged) {\n          case \"initialJoinProgress\":\n            join.seek(initialJoinProgress);\n            break;\n          case \"initialScaleProgress\":\n            scaleDown.seek(initialScaleProgress);\n\n            mixer.stopAllAction();\n            break;\n          case \"initialGoProgress\":\n            if (activeAnimation.current !== go) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = go;\n            play({\n              progress: initialGoProgress,\n              timeTweak: 0.1,\n            });\n            break;\n          case \"experienceCubesToClockPositionProgress\":\n            cubesToClockPosition.seek(experienceCubesToClockPositionProgress);\n            break;\n          case \"experienceCubesToClockRotationProgress\":\n            cubesToClockRotation.seek(experienceCubesToClockRotationProgress);\n            break;\n          case \"toClockProgress\":\n            if (activeAnimation.current !== toClock) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = toClock;\n            play({\n              progress: toClockProgress,\n              timeTweak: 0.1,\n            });\n            break;\n          case \"clockMoveProgress\":\n            if (activeAnimation.current !== clockMove) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = clockMove;\n            play({\n              animationLoop: LoopRepeat,\n              repetitions: 1,\n              progress: clockMoveProgress,\n            });\n            break;\n          case \"timeDefinitionProgress\":\n            timeDefinitionShow.seek(timeDefinitionProgress);\n            break;\n          case \"clockCloseProgress\":\n            if (activeAnimation.current !== go) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = go;\n            play({\n              progress: clockCloseProgress,\n              timeTweak: 0.1,\n            });\n            break;\n          case \"timeDefinitionCloseProgress\":\n            timeDefinitionClose.seek(timeDefinitionCloseProgress);\n            break;\n          case \"cubesToCamelPositionProgress\":\n            cubesToCamelPosition.seek(cubesToCamelPositionProgress);\n            break;\n          case \"cubesToCamelRotationProgress\":\n            rotateCubesForCamelAnim.seek(cubesToCamelRotationProgress);\n            break;\n          case \"toCamelProgress\":\n            if (activeAnimation.current !== toCamel) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = toCamel;\n            play({\n              progress: toCamelProgress,\n              timeTweak: 0.1,\n            });\n            break;\n          case \"patienceDefinitionProgress\":\n            showPatienceDefinition.seek(patienceDefinitionProgress);\n            break;\n          case \"camelMoveProgress\":\n            if (activeAnimation.current !== camelMove) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = camelMove;\n            play({\n              progress: camelMoveProgress,\n              moveTweak: 0.055,\n              animationLoop: LoopRepeat,\n            });\n            break;\n          case \"camelGoProgress\":\n            if (activeAnimation.current !== go) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = go;\n            play({\n              progress: camelGoProgress,\n              timeTweak: 0.1,\n            });\n            break;\n          case \"patienceDefitionCloseProgress\":\n            hidePatienceDefinition.seek(patienceDefitionCloseProgress);\n            break;\n          case \"cubesToAndroidPositionProgress\":\n            cubesToAndroidPosition.seek(cubesToAndroidPositionProgress);\n            //TODO: animate color chages for cube materials and mabybe environment\n            break;\n          case \"cubesToAndroidRotationProgress\":\n            rotateCubesForAndroidAnimation.seek(cubesToAndroidRotationProgress);\n            //TODO: animate color chages for cube materials and mabybe environment\n            break;\n          case \"toAndroidProgress\":\n            if (activeAnimation.current !== toAndroid) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = toAndroid;\n            play({\n              timeTweak: 0.1,\n              progress: toAndroidProgress,\n            });\n            break;\n          case \"androidParagraphProgress\":\n            showAndroidParagraph.seek(androidParagraphProgress);\n            break;\n          case \"androidMoveProgress\":\n            if (activeAnimation.current !== androidMove) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = androidMove;\n            play({\n              moveTweak: 0.05,\n              animationLoop: LoopRepeat,\n              progress: androidMoveProgress,\n            });\n            break;\n          case \"androidGoProgress\":\n            if (activeAnimation.current !== go) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = go;\n\n            play({\n              progress: androidGoProgress,\n              timeTweak: 0.1,\n            });\n            break;\n          case \"androidParagraphCloseProgress\":\n            hideAndroidParagraph.seek(androidParagraphCloseProgress);\n            break;\n          case \"experienceCubesToApplePositionProgress\":\n            //TODO: FIX THE FISIBILITIY 4 WHEN GOING BACKWARDS\n            //adjust cubes\n            //TODO: ADJUST ALL CUBES AND ALSO ANIMATE THE COLORS HERE & MAYBE CHANGE THE DURATION TO 1000\n            cubesToApplePosition.seek(experienceCubesToApplePositionProgress);\n\n            cubesToAppleRotation.seek(experienceCubesToApplePositionProgress);\n            break;\n          case \"experienceCubesToAppleRotationProgress\":\n            cubesToAppleRotation.seek(experienceCubesToAppleRotationProgress);\n            break;\n          case \"toAppleProgress\":\n            if (activeAnimation.current !== toApple) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = toApple;\n            play({\n              timeTweak: 0.1,\n              animationLoop: LoopOnce,\n              progress: toAppleProgress,\n            });\n            break;\n          case \"appleParagraphProgress\":\n            showAppleParagraph.seek(appleParagraphProgress);\n            break;\n          case \"appleMoveProgress\":\n            if (activeAnimation.current !== appleMove) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = appleMove;\n            play({\n              animationLoop: LoopRepeat,\n              progress: appleMoveProgress,\n            });\n            break;\n          case \"appleGoProgress\":\n            if (activeAnimation.current !== go) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = go;\n\n            play({\n              progress: appleGoProgress,\n              timeTweak: 0.1,\n            });\n            break;\n          case \"appleParagraphCloseProgress\":\n            hideAppleParagraph.seek(appleParagraphCloseProgress);\n            break;\n          case \"cubesToReactPositionProgress\":\n            cubesToReactPosition.seek(cubesToReactPositionProgress);\n            break;\n          case \"cubesToReactRotationProgress\":\n            cubesToReactRotation.seek(cubesToReactRotationProgress);\n            break;\n          case \"toFlowerProgress\":\n            if (activeAnimation.current !== toFlower) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = toFlower;\n            play({\n              progress: toFlowerProgress,\n              timeTweak: 0.15,\n            });\n            break;\n          case \"flowerColorsProgress\":\n            break;\n          case \"flowerParagraphProgress\":\n            showReactParagraph.seek(flowerParagraphProgress);\n            break;\n          case \"flowerParagraphCloseProgress\":\n            break;\n          case \"toPineAppleProgress\":\n            if (activeAnimation.current !== toPineapple) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = toPineapple;\n            play({\n              progress: toPineAppleProgress,\n              timeTweak: 0.15,\n            });\n            break;\n          case \"pineappleColorsProgress\":\n            break;\n          case \"pineappleParagraphProgress\":\n            break;\n          case \"pineappleParagraphCloseProgress\":\n            break;\n          case \"toCannonProgress\":\n            if (activeAnimation.current !== toCannon) {\n              mixer.stopAllAction();\n            }\n            activeAnimation.current = toCannon;\n            play({\n              progress: toCannonProgress,\n              timeTweak: 0.15,\n            });\n            break;\n          case \"cannonColorsProgress\":\n            break;\n          case \"cannonParagraphProgress\":\n            break;\n          case \"cannonParagraphCloseProgress\":\n            break;\n          default:\n            break;\n        }\n      }\n    );\n\n    return () => {\n      unsubscribeInitialAnimation();\n      unsubscribeExperieneStore();\n    };\n  }, [mainContainer.current]);\n\n  useFrame(() => {\n    if (!activeAnimation.current) return;\n    const { clockMove, camelMove, androidMove, appleMove } = actions;\n    const acAnim = activeAnimation.current;\n    if (\n      acAnim === clockMove ||\n      acAnim === androidMove ||\n      acAnim === camelMove ||\n      acAnim === androidMove\n    ) {\n      if (acAnim.time + 0.055 >= acAnim._clip.duration) {\n        acAnim.time = 0.055;\n      }\n    } else if (acAnim === appleMove) {\n      if (acAnim.time + 0.1 >= acAnim._clip.duration) {\n        acAnim.time = 0.1;\n      }\n    }\n  });\n\n  return (\n    <group\n      position={[15.45, -0.6, 681.4]}\n      rotation={[0, Math.PI / 8, 0]}\n      ref={mainContainer}\n      {...props}\n      dispose={null}\n    >\n      <mesh\n        name=\"cube\"\n        geometry={nodes.cube.geometry}\n        material={nodes.cube.material}\n        receiveShadow={true}\n        morphTargetDictionary={nodes.cube.morphTargetDictionary}\n        morphTargetInfluences={nodes.cube.morphTargetInfluences}\n      >\n        {/**this is the main cube */}\n        <meshStandardMaterial\n          {...nodes.cube.material}\n          layers={2}\n          roughness={0.8}\n          metalness={0.2}\n          emissive=\"green\"\n          ref={mainCubeMaterial}\n        />\n      </mesh>\n      <mesh\n        name=\"cube_1\"\n        geometry={nodes.cube_1.geometry}\n        material={nodes.cube_1.material}\n        morphTargetDictionary={nodes.cube_1.morphTargetDictionary}\n        morphTargetInfluences={nodes.cube_1.morphTargetInfluences}\n      >\n        {/** this is the face of the main cube */}\n        <meshStandardMaterial\n          {...nodes.cube_1.material}\n          layers={2}\n          emissive=\"#fff000\"\n          ref={mainCubeFaceMaterial}\n        />\n      </mesh>\n      <group\n        ref={secondaryContainer}\n        position={[3.1, -0.25, 0]}\n        scale={[1.255, 1.255, 1.255]}\n      >\n        <mesh\n          name=\"cube_2\"\n          geometry={nodes.cube_2.geometry}\n          material={nodes.cube_2.material}\n          morphTargetDictionary={nodes.cube_2.morphTargetDictionary}\n          morphTargetInfluences={nodes.cube_2.morphTargetInfluences}\n        >\n          <meshStandardMaterial\n            {...nodes.cube_2.material}\n            layers={2}\n            emissive=\"#00ff00\"\n            ref={cube1Material}\n          />\n        </mesh>\n        <mesh\n          name=\"cube_3\"\n          geometry={nodes.cube_3.geometry}\n          material={nodes.cube_3.material}\n          morphTargetDictionary={nodes.cube_3.morphTargetDictionary}\n          morphTargetInfluences={nodes.cube_3.morphTargetInfluences}\n        >\n          <meshStandardMaterial\n            {...nodes.cube_3.material}\n            layers={2}\n            emissive=\"#ff00ff\"\n            ref={cube2Material}\n          />\n        </mesh>\n        <mesh\n          name=\"cube_4\"\n          geometry={nodes.cube_4.geometry}\n          material={nodes.cube_4.material}\n          morphTargetDictionary={nodes.cube_4.morphTargetDictionary}\n          morphTargetInfluences={nodes.cube_4.morphTargetInfluences}\n        >\n          <meshStandardMaterial layers={2} emissive=\"red\" ref={cube3Material} />\n        </mesh>\n        <mesh\n          name=\"cube_5\"\n          geometry={nodes.cube_5.geometry}\n          material={nodes.cube_5.material}\n          morphTargetDictionary={nodes.cube_5.morphTargetDictionary}\n          morphTargetInfluences={nodes.cube_5.morphTargetInfluences}\n        >\n          <meshStandardMaterial\n            {...nodes.cube_5.material}\n            layers={2}\n            emissive=\"#ff00aa\"\n            ref={cube4Material}\n          />\n        </mesh>\n      </group>\n      <Time ref={timeDefinition} />\n      <Patience ref={patienceDefintion} />\n      <Android ref={andoridParagraph} />\n      <IOS ref={appleParagraph} />\n      <ReactJS ref={reactParagraph} />\n    </group>\n  );\n}\n\nuseGLTF.preload(process.env.PUBLIC_URL + \"/all.glb\");\n","import { LoopRepeat } from \"three\";\n\nexport function lerp(a, b, t) {\n  return (1 - t) * a + t * b;\n}\n\n/**\n * this function handles gltf animation seeking, which are more complicated than the plain animation seeking from anime JS as they have their own time and mixer\n * @param {object} animation gltf action (animation) that's imported from gltf model that's imported from blender and converted to a jsx component using gltfjsx from https://github.com/pmndrs/gltfjsx\n * @param {number} progress  value emited from the generic timeline from animHandler.js for the specific action\n * @param {object} playbackControllerRef is a ref that is used to check if the naimation is being played backwards\n * @param {number | null} customAnimationDuration is an optional value provided to change the animation duration default value\n * @param {boolean} clampWhenFinished i optional value provided to set animation clampWhenFinished https://threejs.org/docs/#api/en/animation/AnimationAction.clampWhenFinished\n * @param {boolean} onlyOnce optional value provided if the animation should be played only once\n */\nexport function seekGltfAnimation(\n  animation,\n  progress,\n  playbackControllerRef,\n  customAnimationDuration = null,\n  clampWhenFinished = true,\n  repetitions = 1\n) {\n  if (!animation) return;\n  animation.reset();\n\n  animation.clampWhenFinished = clampWhenFinished;\n  animation.repetitions = repetitions;\n\n  if (customAnimationDuration) {\n    animation.setDuration(customAnimationDuration);\n  }\n\n  //check if animation is playing backwards\n  if (playbackControllerRef.current > progress) {\n    const factor = customAnimationDuration / 100;\n    animation._mixer.setTime(progress * factor);\n  } else {\n    //animation is playing forward\n    animation.timeScale = 1;\n    animation._mixer.setTime((animation._clip.duration * progress) / 100);\n    animation.play();\n  }\n  //very important\n  playbackControllerRef.current = progress;\n}\n","import { Vector3 } from \"three\";\n\nfunction createSpiralPathFromCoordinateWithRadius({\n  coordinate = [0, 0, 0],\n  radius = 1,\n  spirals = 5,\n  heightDivider = 2,\n  direction = -1,\n  type = null,\n}) {\n  let vector3Array = [];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  const z = coordinate[2];\n  for (let i = 0; i < spirals; i++) {\n    const yCord = y + (radius / heightDivider) * direction * i;\n    const v1 = new Vector3(x, yCord, z);\n    const v2 = new Vector3(x - radius, yCord, z + radius);\n    const v3 = new Vector3(x, yCord, z + radius * 2);\n    const v4 = new Vector3(x + radius, yCord, z + radius);\n\n    vector3Array.push(v1);\n    if (type === \"double\") vector3Array.push(v1);\n    if (type === \"twisted\")\n      vector3Array.push(new Vector3(v1.x + 2, v1.y + 2, v1.z + 2));\n    if (type === \"twistedDown\")\n      vector3Array.push(new Vector3(v1.x - 2, v1.y - 2, v1.z - 2));\n\n    // vector3Array.push(new Vector3(x +2, yCord +2, z +2));\n    vector3Array.push(v2);\n    if (type === \"double\") vector3Array.push(v2);\n    if (type === \"twisted\")\n      vector3Array.push(new Vector3(v2.x + 2, v2.y + 2, v2.z + 2));\n    if (type === \"twistedDown\")\n      vector3Array.push(new Vector3(v2.x - 2, v2.y - 2, v2.z - 2));\n\n    // vector3Array.push(new Vector3(x - radius +2, yCord +2, z + radius +2));\n    vector3Array.push(v3);\n    if (type === \"double\") vector3Array.push(v3);\n    if (type === \"twisted\")\n      vector3Array.push(new Vector3(v3.x + 2, v3.y + 2, v3.z + 2));\n    if (type === \"twistedDown\")\n      vector3Array.push(new Vector3(v3.x - 2, v3.y - 2, v3.z - 2));\n\n    // vector3Array.push(new Vector3(x +2, yCord +2, z + radius * 2 +2));\n    vector3Array.push(v4);\n    if (type === \"double\") vector3Array.push(v4);\n    if (type === \"twisted\")\n      vector3Array.push(new Vector3(v4.x + 2, v4.y + 2, v4.z + 2));\n    if (type === \"twistedDown\")\n      vector3Array.push(new Vector3(v4.x - 2, v4.y - 2, v4.z - 2));\n  }\n\n  const lastPosition = vector3Array[vector3Array.length - 1];\n\n  return { points: vector3Array, lastPosition };\n}\n\nexport default createSpiralPathFromCoordinateWithRadius;\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\n//the lifesaver (source):https://observablehq.com/@rveciana/three-js-object-moving-object-along-path\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Vector3, BufferGeometry, CatmullRomCurve3 } from \"three\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\nimport { useFrame, useLoader, useThree } from \"@react-three/fiber\";\nimport anime from \"animejs/lib/anime.es\";\nimport { TextureLoader } from \"three\";\n\nimport useStore from \"../store\";\nimport { seekGltfAnimation } from \"../helpers/animation\";\nimport createSpiralPathFromCoordinateWithRadius from \"./world/createPath\";\nimport { objectPositionsInSpace } from \"./constants\";\n\nexport default function Model({ ...props }) {\n  const { camera } = useThree();\n\n  const group = useRef();\n  const { nodes, animations } = useGLTF(\n    process.env.PUBLIC_URL + \"/testOnlyPlane.glb\"\n  );\n  const { actions } = useAnimations(animations, group);\n\n  const front = useLoader(TextureLoader, process.env.PUBLIC_URL + \"/front.jpg\");\n  front.flipY = false;\n  const back = useLoader(TextureLoader, process.env.PUBLIC_URL + \"/back.jpg\");\n  back.flipY = false;\n\n  //animation progress checkers for handling going backwards\n  const planeFoldingProgressChecker = useRef(0);\n  const planeToClockProgressChecker = useRef(0);\n  const planeToCamelProgressChecker = useRef(0);\n  const planeToAndroidProgressChecker = useRef(0);\n  const planeToAppleProgressChecker = useRef(0);\n  const planeToReactPositionProgressChecker = useRef(0);\n  const moveCamera = useRef(false);\n\n  const lineRef = useRef();\n\n  lineRef.current && lineRef.current.computeLineDistances();\n\n  const {\n    planeInitialPosition: p,\n    clock,\n    camel,\n    android,\n    ios,\n    react,\n  } = objectPositionsInSpace;\n\n  /** Line */\n  const [points] = useState(() => {\n    return [\n      new Vector3(p.x, p.y, p.z),\n      //clock\n      ...createSpiralPathFromCoordinateWithRadius({\n        coordinate: [clock.x, clock.y, clock.z],\n        radius: 10,\n        direction: 1,\n        spirals: 4,\n        heightDivider: 4,\n      }).points,\n      //camel\n      ...createSpiralPathFromCoordinateWithRadius({\n        coordinate: [camel.x, camel.y, camel.z],\n        direction: 1,\n        radius: 10,\n        spirals: 2,\n        type: \"twisted\",\n        heightDivider: 3,\n      }).points,\n      //android\n      ...createSpiralPathFromCoordinateWithRadius({\n        coordinate: [android.x, android.y, android.z],\n        direction: -1,\n        radius: 10,\n        spirals: 2,\n        heightDivider: 3,\n        type: \"double\",\n      }).points,\n      //ios\n      ...createSpiralPathFromCoordinateWithRadius({\n        coordinate: [ios.x, ios.y, ios.z],\n        direction: -1,\n        radius: 10,\n        spirals: 2,\n        heightDivider: 4,\n        type: \"twistedDown\",\n      }).points,\n      //react\n      ...createSpiralPathFromCoordinateWithRadius({\n        coordinate: [react.x, react.y, react.z],\n        direction: 1,\n        radius: 10,\n        spirals: 2,\n        heightDivider: 5,\n      }).points,\n      new Vector3(0, 0, 0),\n    ];\n  });\n\n  const [line] = useState(() => {\n    const c = new CatmullRomCurve3(points);\n    c.tension = 0.65;\n    c.arcLengthDivisions = 20000;\n    c.curveType = \"catmullrom\";\n    c.closed = false;\n    return c;\n  });\n\n  const [lineGeometry] = useState(() =>\n    new BufferGeometry().setFromPoints(line.getSpacedPoints(20000))\n  );\n\n  const planePosition = useRef(null);\n  const planeRotation = useRef(null);\n\n  const up = new Vector3(0, 1, 0);\n  const axis = new Vector3();\n\n  function movePlane({ fraction, isBackward, moveCamera }) {\n    if (!group.current) return;\n    //move\n    const position = line.getPoint(fraction);\n    planePosition.current = { ...position };\n    if (isBackward) {\n      //TODO: take care of this when the all journey is completed.\n      up.y = -1;\n    } else {\n      up.y = 1;\n    }\n    //rotate\n    const tangent = line.getTangent(fraction);\n    axis.crossVectors(up, tangent).normalize();\n    const angle = Math.acos(up.dot(tangent));\n    planeRotation.current = { axis, angle };\n  }\n\n  useEffect(() => {\n    if (!group.current) return;\n\n    //switch between plane & sheet visibilities\n    const unsubscribeFromSheetListener = useStore.subscribe(\n      (state) => state.sheet,\n      ({ lastChanged }) => {\n        if (lastChanged === \"sheetProgress\") {\n          if (group.current.visible) group.current.visible = false;\n          if (lineRef.current.visible) lineRef.current.visible = false;\n        }\n      }\n    );\n\n    // position={[15, -1.09, 682]}\n\n    //TODO: fix this\n    const planeToIntialPosition = anime({\n      targets: group.current.position,\n      x: [15, 12.949322347666651],\n      y: [-1.09, -0.9357873478198813],\n      z: [682, 656.1792166619816],\n      duration: 500,\n      autoplay: false,\n    });\n\n    //TODO: fix this\n    const planeToInitialRotation = anime({\n      targets: group.current.quaternion,\n      w: [1, 0.709238017607531],\n      x: [0, -0.701731634510443],\n      y: [0, 0],\n      z: [0, 0.06748442418396647],\n      duration: 500,\n      autoplay: false,\n    });\n\n    const { fold } = actions;\n    const unsubcribeFromPlaneAnimationListener = useStore.subscribe(\n      (state) => state.plane,\n      ({\n        planeFoldingProgress,\n        lastChanged,\n        planeToInitialTrajectoryPointProgress,\n        planeToClockProgress,\n        planeToCamelProgres,\n        planeToAndroidProgress,\n        planeToAppleProgress,\n        planeToReactPositionProgress,\n      }) => {\n        switch (lastChanged) {\n          case \"planeFoldingProgress\":\n            if (!group.current.visible) group.current.visible = true;\n            if (!lineRef.current.visible) lineRef.current.visible = true;\n            group.current.quaternion.setFromAxisAngle(new Vector3(0, 0, 0), 0);\n            camera.position.z = group.current.position.z + 3;\n            camera.position.y = group.current.position.y + 0.6;\n            seekGltfAnimation(\n              fold,\n              planeFoldingProgress,\n              planeFoldingProgressChecker,\n              10000,\n              true,\n              1,\n              true\n            );\n            break;\n          case \"planeToInitialTrajectoryPointProgress\":\n            planeToIntialPosition.seek(planeToInitialTrajectoryPointProgress);\n            planeToInitialRotation.seek(planeToInitialTrajectoryPointProgress);\n            break;\n          case \"planeToClockProgress\":\n            handleMovePlane(\n              planeToClockProgress,\n              planeToClockProgressChecker,\n              true\n            );\n            break;\n          case \"planeToCamelProgres\":\n            handleMovePlane(\n              planeToCamelProgres,\n              planeToCamelProgressChecker,\n              true\n            );\n            break;\n          case \"planeToAndroidProgress\":\n            handleMovePlane(\n              planeToAndroidProgress,\n              planeToAndroidProgressChecker,\n              true\n            );\n            break;\n          case \"planeToAppleProgress\":\n            handleMovePlane(\n              planeToAppleProgress,\n              planeToAppleProgressChecker,\n              true\n            );\n            break;\n          case \"planeToReactPositionProgress\":\n            handleMovePlane(\n              planeToReactPositionProgress,\n              planeToReactPositionProgressChecker,\n              true\n            );\n            break;\n          default:\n            break;\n        }\n      }\n    );\n\n    function handleMovePlane(\n      progress,\n      sheetProgressCheckerRef,\n      shouldCameraMove\n    ) {\n      const fraction = progress / 550;\n      const isBackward = sheetProgressCheckerRef.current > progress;\n      movePlane({\n        fraction,\n        isBackward,\n      });\n      moveCamera.current = shouldCameraMove;\n      sheetProgressCheckerRef.current = progress;\n    }\n\n    return () => {\n      unsubcribeFromPlaneAnimationListener();\n      unsubscribeFromSheetListener();\n    };\n  }, [group.current]);\n\n  useFrame(() => {\n    if (group.current && planePosition.current && planeRotation.current) {\n      group.current.position.copy(planePosition.current);\n      group.current.quaternion.setFromAxisAngle(\n        planeRotation.current.axis,\n        planeRotation.current.angle\n      );\n      if (moveCamera.current) {\n        camera.position.copy({\n          x: planePosition.current.x,\n          y: planePosition.current.y + 3.5,\n          z: planePosition.current.z + 30,\n        });\n      }\n    }\n  }, 1);\n\n  return (\n    <>\n      <line ref={lineRef} geometry={lineGeometry}>\n        <lineDashedMaterial\n          emissive=\"white\"\n          emissiveIntensity={10}\n          scale={1}\n          dashSize={0.5}\n          gapSize={0.5}\n          color=\"white\"\n        />\n      </line>\n      <group\n        //it's a very very very absolutley bad idea to change the position, only if you match it with the seet position, as they swap visibilies. incopetent blender trick just to save some time, please don't be judge too much :/\n        position={[15, -1.09, 682]}\n        rotation={[0, 0, 0]}\n        ref={group}\n        {...props}\n        visible={false}\n        dispose={null}\n      >\n        <mesh\n          name=\"material\"\n          geometry={nodes.material.geometry}\n          material={nodes.material.material}\n          morphTargetDictionary={nodes.material.morphTargetDictionary}\n          morphTargetInfluences={nodes.material.morphTargetInfluences}\n        >\n          <meshStandardMaterial\n            {...nodes.material.material}\n            map={back}\n            roughness={1}\n            metalness={0.4}\n            transparent={true}\n            depthTest={true}\n            alphaTest={0.5}\n          />\n        </mesh>\n        <mesh\n          name=\"material_1\"\n          geometry={nodes.material_1.geometry}\n          material={nodes.material_1.material}\n          morphTargetDictionary={nodes.material_1.morphTargetDictionary}\n          morphTargetInfluences={nodes.material_1.morphTargetInfluences}\n        >\n          <meshStandardMaterial\n            {...nodes.material_1.material}\n            map={front}\n            roughness={1}\n            metalness={0.4}\n            transparent={true}\n            depthTest={true}\n            alphaTest={0.5}\n          />\n        </mesh>\n        <mesh\n          name=\"material_2\"\n          geometry={nodes.material_2.geometry}\n          material={nodes.material_2.material}\n          morphTargetDictionary={nodes.material_2.morphTargetDictionary}\n          morphTargetInfluences={nodes.material_2.morphTargetInfluences}\n        >\n          <meshStandardMaterial\n            {...nodes.material_2.material}\n            color=\"#fff\"\n            emissive=\"#fff\"\n          />\n        </mesh>\n      </group>\n    </>\n  );\n}\n\nuseGLTF.preload(process.env.PUBLIC_URL + \"/testOnlyPlane.glb\");\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { TextureLoader } from \"three\";\nimport anime from \"animejs/lib/anime.es\";\n\nimport useStore from \"../store\";\nimport { seekGltfAnimation } from \"../helpers/animation\";\n\nexport default function Model({ ...props }) {\n  const group = useRef();\n  const material1Ref = useRef();\n  const material2Ref = useRef();\n  const material3Ref = useRef();\n  const { nodes, animations } = useGLTF(process.env.PUBLIC_URL + \"/sheet.glb\");\n  const { actions } = useAnimations(animations, group);\n  const front = useLoader(TextureLoader, process.env.PUBLIC_URL + \"/front.jpg\");\n  front.flipY = false;\n  const back = useLoader(TextureLoader, process.env.PUBLIC_URL + \"/back.jpg\");\n  back.flipY = false;\n\n  let sheetProgressChecker = useRef(0);\n\n  useEffect(() => {\n    if (!group.current) return;\n    const initialRotation = anime({\n      targets: group.current.rotation,\n      x: 0,\n      y: 0,\n      z: 0,\n      duration: 400,\n      autoplay: false,\n    });\n\n    const unsubscribeInitialAnimation = useStore.subscribe(\n      (state) => state.initialAnimation,\n      ({ progress, lastChanged }) => {\n        if (lastChanged === \"progress\") {\n          initialRotation.seek(progress);\n        }\n      }\n    );\n\n    //switch between shet & plane visibilities\n    const unsubscribeFromPlaneListener = useStore.subscribe(\n      (state) => state.plane,\n      ({ lastChanged }) => {\n        if (lastChanged === \"planeFoldingProgress\") {\n          if (group.current.visible) group.current.visible = false;\n        }\n      }\n    );\n\n    const moveToCenterAnimation = anime({\n      //it's a very very very absolutley bad idea to change the position, only if you match it with the plane position, as they swap visibilies. incopetent blender trick just to save some time, please don't be judge too much :/\n      targets: group.current.position,\n      x: 14.5,\n      y: -1,\n      z: 682,\n      duration: 500,\n      autoplay: false,\n    });\n\n    const rotateToSheet = anime({\n      targets: group.current.rotation,\n      x: 0,\n      y: Math.PI / 6,\n      z: 0,\n      duration: 500,\n      autoplay: false,\n    });\n\n    const rotateBack = anime({\n      targets: group.current.rotation,\n      x: 0,\n      y: 0,\n      z: 0,\n      duration: 500,\n      autoplay: false,\n    });\n\n    const fixSheetPositonbeforeConvertingToSheet = anime({\n      targets: group.current.position,\n      x: 13.5,\n      y: 0,\n      z: 682,\n      duration: 200,\n      autoplay: false,\n    });\n\n    const unsubscribeSheetStore = useStore.subscribe(\n      (state) => {\n        return state.sheet;\n      },\n      ({\n        moveToCenterProgress,\n        sheetProgress,\n        rotateToSheetProgress,\n        backRotateProgress,\n        lastChanged,\n      }) => {\n        switch (lastChanged) {\n          case \"moveToCenterProgress\":\n            moveToCenterAnimation.seek(moveToCenterProgress);\n            break;\n\n          case \"rotateToSheetProgress\":\n            rotateToSheet.seek(rotateToSheetProgress);\n            break;\n\n          //this is a gltf animation seeking case:\n          case \"sheetProgress\":\n            if (!group.current.visible) group.current.visible = true;\n            const { toSheet } = actions;\n            seekGltfAnimation(\n              toSheet,\n              sheetProgress,\n              sheetProgressChecker,\n              2000\n            );\n            break;\n          case \"backRotateProgress\":\n            rotateBack.seek(backRotateProgress);\n            break;\n\n          default:\n            break;\n        }\n      }\n    );\n\n    return () => {\n      unsubscribeInitialAnimation();\n      unsubscribeSheetStore();\n      unsubscribeFromPlaneListener();\n    };\n  }, [group.current]);\n\n  return (\n    <group\n      //it's a very very very absolutley bad idea to change the position, only if you match it with the plane position, as they swap visibilies. incopetent blender trick just to save some time, please don't be judge too much :/\n      //todo: check if you can throw an error if the sheet & plane positions don't match\n      position={[12, -0.6, 682]}\n      // scale={[0.4, 0.4, 0.4]}\n      rotation={[0, Math.PI / 8, 0]}\n      ref={group}\n      {...props}\n      dispose={null}\n    >\n      <mesh\n        name=\"material\"\n        geometry={nodes.material.geometry}\n        morphTargetDictionary={nodes.material.morphTargetDictionary}\n        morphTargetInfluences={nodes.material.morphTargetInfluences}\n      >\n        <meshStandardMaterial\n          {...nodes.material.material}\n          map={back}\n          ref={material1Ref}\n          roughness={1}\n          metalness={0.4}\n          transparent={true}\n          depthTest={true}\n          alphaTest={0.5}\n        />\n      </mesh>\n      <mesh\n        name=\"material_1\"\n        geometry={nodes.material_1.geometry}\n        morphTargetDictionary={nodes.material_1.morphTargetDictionary}\n        morphTargetInfluences={nodes.material_1.morphTargetInfluences}\n      >\n        <meshStandardMaterial\n          {...nodes.material_1.material}\n          map={front}\n          ref={material2Ref}\n          roughness={1}\n          metalness={0.4}\n          transparent={true}\n          depthTest={true}\n          alphaTest={0.5}\n        />\n      </mesh>\n      <mesh\n        name=\"material_2\"\n        geometry={nodes.material_2.geometry}\n        morphTargetDictionary={nodes.material_2.morphTargetDictionary}\n        morphTargetInfluences={nodes.material_2.morphTargetInfluences}\n      >\n        <meshStandardMaterial\n          {...nodes.material_2.material}\n          ref={material3Ref}\n          color=\"#fff\"\n          emissive=\"#fff\"\n        />\n      </mesh>\n    </group>\n  );\n}\n\nuseGLTF.preload(process.env.PUBLIC_URL + \"/sheet.glb\");\n","export default __webpack_public_path__ + \"static/media/bold.65e5a908.blob\";","import { Vector3 } from \"three\";\nimport React, {\n  useMemo,\n  useRef,\n  useLayoutEffect,\n  forwardRef,\n  createRef,\n} from \"react\";\nimport { extend, useLoader } from \"@react-three/fiber\";\nimport { FontLoader } from \"three/examples/jsm/loaders/FontLoader\";\nimport { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\nimport boldUrl from \"../fonts/bold.blob\";\n\nextend({ TextGeometry });\n\nfunction Text(\n  {\n    children,\n    vAlign = \"center\",\n    hAlign = \"center\",\n    size = 1.5,\n    color = \"#000000\",\n    ...props\n  },\n  ref\n) {\n  const font = useLoader(FontLoader, boldUrl);\n  const config = useMemo(\n    () => ({\n      font,\n      size: 36,\n      height: 10,\n      curveSegments: 32,\n      bevelEnabled: true,\n      bevelThickness: 5,\n      bevelSize: 1,\n      bevelOffset: -0.1,\n      bevelSegments: 8,\n    }),\n    [font]\n  );\n  const mesh = useRef();\n  useLayoutEffect(() => {\n    const size = new Vector3();\n    mesh.current.geometry.computeBoundingBox();\n    mesh.current.geometry.boundingBox.getSize(size);\n    mesh.current.position.x =\n      hAlign === \"center\" ? -size.x / 2 : hAlign === \"right\" ? 0 : -size.x;\n    mesh.current.position.y =\n      vAlign === \"center\" ? -size.y / 2 : vAlign === \"top\" ? 0 : -size.y;\n  }, [children]);\n  return (\n    <group ref={ref} {...props} scale={[0.05 * size, 0.05 * size, 0.05]}>\n      <mesh ref={mesh}>\n        <textGeometry args={[children, config]} />\n        <meshNormalMaterial />\n      </mesh>\n    </group>\n  );\n}\n\nexport default forwardRef(Text);\n","import anime from \"animejs/lib/anime.es\";\nimport { useEffect, forwardRef, createRef } from \"react\";\nimport useStore from \"../store\";\nimport Text from \"./Text\";\n\nfunction LoadingText() {\n  const text = createRef();\n\n  useEffect(() => {\n    if (!text.current) return;\n    const positionChange = anime({\n      duration: 400,\n      autoplay: false,\n      targets: text.current.position,\n      x: -10,\n      y: 1,\n      z: 688,\n    });\n\n    const unsubscribeStore = useStore.subscribe(\n      (state) => state.initialAnimation,\n      ({ progress }) => {\n        positionChange.seek(progress);\n      }\n    );\n\n    return () => {\n      unsubscribeStore();\n    };\n  }, [text.current]);\n\n  return (\n    <group position={[2, 1, 686]} rotation={[0, Math.PI / 8, 0]}>\n      <Text position={[-13, 0, 0]} ref={text} children=\"JUST\" />\n      <Text ref={text} children=\"SCROLL\" />\n    </group>\n  );\n}\n\nexport default forwardRef(LoadingText);\n","import { useEffect, useMemo } from \"react\";\nimport { WebGLRenderTarget, Vector2 } from \"three\";\nimport { extend, useFrame, useThree } from \"@react-three/fiber\";\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer\";\nimport { ShaderPass } from \"three/examples/jsm/postprocessing/ShaderPass\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass\";\nimport { UnrealBloomPass } from \"three/examples/jsm/postprocessing/UnrealBloomPass\";\nimport { useControls } from \"leva\";\n\nextend({ EffectComposer, ShaderPass, RenderPass });\n\nfunction Effect() {\n  const { gl, scene, camera, size } = useThree();\n\n  useEffect(() => {}, []);\n\n  // /**\n  //  * Bloom Pass controls\n  //  */\n  // const { exposure, bloomThreshold, bloomRadius, bloomStrength } = useControls(\n  //   \"bloomPass\",\n  //   {\n  //     exposure: {\n  //       value: 1,\n  //       min: 0,\n  //       max: 5,\n  //       step: 0.01,\n  //     },\n  //     bloomThreshold: {\n  //       min: 0,\n  //       max: 1,\n  //       value: 0,\n  //       step: 0.01,\n  //     },\n  //     bloomRadius: {\n  //       min: 0,\n  //       max: 5,\n  //       step: 0.01,\n  //       value: 1,\n  //     },\n  //     bloomStrength: {\n  //       min: 0,\n  //       max: 5,\n  //       step: 0.01,\n  //       value: 1,\n  //     },\n  //   }\n  // );\n\n  const effectComposer = useMemo(() => {\n    const renderScene = new RenderPass(scene, camera);\n\n    //renderer exposure\n    gl.toneMappingExposure = Math.pow(1, 4.0);\n    gl.autoClear = false;\n    gl.antialias = true;\n\n    const finalComposer = new EffectComposer(gl);\n    const unrealBloomPass = new UnrealBloomPass(\n      //resolution,\n      //strength,\n      //radius,\n      //threshold\n      new Vector2(size.width, size.height),\n      1.5,\n      1,\n      0\n    );\n    finalComposer.addPass(renderScene);\n    finalComposer.addPass(unrealBloomPass);\n    return finalComposer;\n  }, []);\n\n  useEffect(() => {\n    effectComposer.setSize(size.width, size.height);\n  }, [effectComposer, size]);\n\n  useFrame(() => {\n    //APPLY EFFECTS TO A PARTICULAR LAYER.\n\n    gl.autoClear = false;\n    gl.clear();\n    camera.layers.set(1);\n    effectComposer.render();\n\n    gl.clearDepth();\n    camera.layers.set(2);\n    gl.render(scene, camera);\n\n    gl.clearDepth();\n    camera.layers.set(3);\n    gl.render(scene, camera);\n\n    gl.clearDepth();\n    camera.layers.set(0);\n    gl.render(scene, camera);\n  }, 1);\n\n  return null;\n}\n\nexport default Effect;\n","//the lifesaver (source): https://codeburst.io/scroll-based-animate-timeline-with-easing-functions-on-a-webgl-scene-ef7c3f5a8d9b\n\nimport { useEffect, useState, useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport anime from \"animejs/lib/anime.es.js\";\nimport { useThree } from \"@react-three/fiber\";\nimport useStore from \"../store\";\n\nexport default function Animator() {\n  const _event = useRef({\n    y: 0,\n    deltaY: 0,\n  });\n  var percentage = 0;\n  var touchStartY = 0;\n\n  // this is the container where we will attach the scroll event. For this example we will set its height to 1200vh.\n  const divContainer = document.getElementById(\"fold\");\n  // container height - window height to limit the scroll at the top of the screen when we are at the bottom of the container\n  var maxHeight =\n    (divContainer.clientHeight || divContainer.offsetHeight) -\n    window.innerHeight;\n\n  let scrollTimeout = null;\n\n  const isScrolling = useRef(false);\n\n  function onWheel(e) {\n    // e.preventDefault();\n\n    if (scrollTimeout) {\n      clearTimeout(scrollTimeout);\n    }\n    scrollTimeout = setTimeout(() => {\n      scrollTimeout = null;\n      useStore.getState().scrollStatus.setIsSCrolling(false);\n      isScrolling.current = false;\n    }, 100);\n    if (!isScrolling.current) {\n      isScrolling.current = true;\n      useStore.getState().scrollStatus.setIsSCrolling(true);\n    }\n\n    _event.current.deltaY = e.wheelDeltaY || e.deltaY * -1;\n    // reduce by half the delta amount otherwise it scroll too fast (in a other way we could increase the height of the container too)\n    _event.current.deltaY *= 0.2;\n    scroll(e);\n  }\n\n  function scroll(e) {\n    // limit scroll top\n    if (_event.current.y + _event.current.deltaY > 0) {\n      _event.current.y = 0;\n      // limit scroll bottom\n    } else if (-(_event.current.y + _event.current.deltaY) >= maxHeight) {\n      _event.current.y = -maxHeight;\n    } else {\n      _event.current.y += _event.current.deltaY;\n    }\n  }\n\n  function onTouchStart(e) {\n    var t = e.targetTouches ? e.targetTouches[0] : e;\n    touchStartY = t.pageY;\n  }\n\n  function onTouchMove(e) {\n    var t = e.targetTouches ? e.targetTouches[0] : e;\n    // the multiply factor on mobile must be about 10x the factor applied on the wheel\n    _event.current.deltaY = (t.pageY - touchStartY) * 5;\n    touchStartY = t.pageY;\n    scroll(e);\n  }\n\n  function onResize() {\n    maxHeight = divContainer.clientHeight - window.innerHeight;\n  }\n\n  function lerp(a, b, t) {\n    return (1 - t) * a + t * b;\n  }\n\n  function render() {\n    percentage = lerp(percentage, -_event.current.y, 0.07);\n    timeline.seek(percentage * (timeline.duration / maxHeight));\n  }\n\n  useFrame(() => {\n    render();\n  });\n\n  const [timeline] = useState(() =>\n    anime.timeline({\n      autoplay: false,\n      easing: \"easeOutSine\",\n    })\n  );\n\n  /**\n   * Taken from actions, exported from blender. //TODO: check for automatization\n   */\n\n  const { camera } = useThree();\n\n  const empty = {};\n\n  // function onTouchStart(e) {\n  //   var t = e.targetTouches ? e.targetTouches[0] : e;\n  //   touchStartY = t.pageY;\n  // }\n\n  // function onTouchMove(e) {\n  //   var evt = event;\n  //   var t = e.targetTouches ? e.targetTouches[0] : e;\n  //   // the multiply factor on mobile must be about 10x the factor applied on the wheel\n  //   evt.deltaY = (t.pageY - touchStartY) * 5;\n  //   touchStartY = t.pageY;\n  //   scroll(e);\n  // }\n\n  //these refs control animations to avoid emitting multiple times 0's and 100's progress from onUpdate(animation.progress) function from anime js\n\n  //intitial animations\n  const initialAnimationProgress = useRef(0);\n  const initialScaleProgress = useRef(0);\n  const initalCubeJoinProgress = useRef(0);\n  const initalCubeGoProgress = useRef(0);\n  const centerSheetProgress = useRef(0);\n  const rotateSheetProgress = useRef(0);\n  const toSheetProgress = useRef(0);\n  const sheetBackRotateProgress = useRef(0);\n  const planeAndSheetReverseOpacitiesProgress = useRef(0);\n\n  //plane folding progress\n  const planeFoldProgress = useRef(0);\n\n  //plane to intial trajectory point progress\n  const planeToInitialTrajectoryPointProgress = useRef(0);\n\n  //to clock animations group progress\n  const planeToClockProgress = useRef(0);\n  const experienceCubesToClockPositionProgress = useRef(0);\n  const experienceCubesToClockRotationProgress = useRef(0);\n  const toClockProgress = useRef(0);\n  const clockMoveProgress = useRef(0);\n  const timeDefinitionProgress = useRef(0);\n  const clockGoProgress = useRef(0);\n  const timeDefinitionCloseProgress = useRef(0);\n\n  //camel animations group progress handlers\n  const planeToCamelProgres = useRef(0);\n  const experienceCubesToCamelPosition = useRef(0);\n  const experienceCubesToCamelRotation = useRef(0);\n  const toCamelProgress = useRef(0);\n  const camelMoveProgress = useRef(0);\n  const patienceDefitionProgress = useRef(0);\n  const camelGoProgress = useRef(0);\n  const patienceDefitionCloseProgress = useRef(0);\n\n  //android animations group progress\n  const planeToAndroidProgress = useRef(0);\n  const cubesToAndroidPositionProgress = useRef(0);\n  const cubesToAndroidRotationProgress = useRef(0);\n  const toAndroidProgress = useRef(0);\n  const showAndroidParagraphProgress = useRef(0);\n  const androidMoveProgress = useRef(0);\n  const androidGoProgress = useRef(0);\n  const androidParagraphCloseProgress = useRef(0);\n\n  //apple animations group progress\n  const planeToAppleProgress = useRef(0);\n  const experienceCubesToApplePositionProgress = useRef(0);\n  const experienceCubesToAppleRotationProgress = useRef(0);\n  const toAppleProgress = useRef(0);\n  const appleParagraphProgress = useRef(0);\n  const appleMoveProgress = useRef(0);\n  const appleGoProgress = useRef(0);\n  const appleParagraphCloseProgress = useRef(0);\n\n  //react animations group progress\n  const planeToReactPositionProgress = useRef(0);\n  const cubesToReactPositionProgress = useRef(0);\n  const cubesToReactRotationProgress = useRef(0);\n\n  //flower\n  const flowerColorsProgress = useRef(0);\n  const toFlowerProgress = useRef(0);\n  const flowerParagraphProgress = useRef(0);\n  const flowerParagraphCloseProgress = useRef(0);\n\n  //pineapple\n  const pineappleColorsProgress = useRef(0);\n  const toPineAppleProgress = useRef(0);\n  const pineappleParagraphProgress = useRef(0);\n  const pineappleParagraphCloseProgress = useRef(0);\n\n  //cannon\n  const cannonColorsProgress = useRef(0);\n  const toCannonProgress = useRef(0);\n  const cannonParagraphProgress = useRef(0);\n  const cannonParagraphCloseProgress = useRef(0);\n\n  /**\n   * handles the animation updates, making sure to play the animation even when going backwards\n   * @param {object} anim the animation received from update function on animeJS timeline\n   * @param {object} progressTracker a ref for each animation that prevents emiting unnecessary values\n   * @param {function} progressSetter a function with the logic that modifies the state for each animation\n   */\n  function handleUpdateAnimation(anim, progressTracker, progressSetter) {\n    if (!anim.completed) {\n      if (progressTracker.current !== 0) {\n        progressSetter(anim);\n      }\n      progressTracker.current = anim.progress;\n    } else {\n      if (anim.progress < 100) {\n        anim.completed = false;\n      }\n    }\n  }\n\n  function addTimelineEvents() {\n    //set camera to middle of 3 cubes\n    timeline.add({\n      targets: camera.position,\n      x: 15,\n      y: 0,\n      z: 710,\n      duration: 200,\n    });\n\n    //rotate cubes & remove loading text from screen animation control\n    timeline.add({\n      //target is empty because we just control the timing, animation happens on other files via animation.seek()\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          initialAnimationProgress,\n          function progresSetter(anim) {\n            useStore.getState().initialAnimation.setProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //scale down experience helper cubes\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          initialScaleProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setInitialScaleProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //join experience cubes animation control\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          initalCubeJoinProgress,\n          function progresSetter(anim) {\n            useStore\n              .getState()\n              .experience.setInitialJoinProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //initial go (experience cubes) animation control (GLTF anim)\n    timeline.add({\n      targets: empty,\n      duration: 2000, //TO MILLISECONDS\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          initalCubeGoProgress,\n          function progresSetter(anim) {\n            useStore.getState().experience.setInitialGoProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    // set sheet to center animation control\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          centerSheetProgress,\n          function progresSetter(anim) {\n            useStore.getState().sheet.setMoveToCenterProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //zoom into sheet cube\n    timeline.add({\n      targets: camera.position,\n      x: 15,\n      y: 0,\n      z: 688,\n      duration: 500,\n    });\n\n    //rotate the sheet cube\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          rotateSheetProgress,\n          function progresSetter(anim) {\n            useStore.getState().sheet.setRotateToSheetProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //to sheet animation controler (GLTF ANIM)\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          toSheetProgress,\n          function progresSetter(anim) {\n            useStore.getState().sheet.setSheetProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //rotate sheet back to place controller\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          sheetBackRotateProgress,\n          function progresSetter(anim) {\n            useStore.getState().sheet.setBackRotateProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //change sheet to plane\n    timeline.add({\n      targets: empty,\n      duration: 100,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          planeAndSheetReverseOpacitiesProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .initialAnimation.setPlaneAndSheetReverseOpacitiesProgress(\n                anim.progress\n              );\n          }\n        );\n      },\n    });\n\n    //the coolest plane folding animation ever\n    timeline.add({\n      targets: empty,\n      duration: 10000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          planeFoldProgress,\n          function progressSetter(anim) {\n            useStore.getState().plane.setPlaneFoldingProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //move plane to the initial trajectory point\n    //todo: this\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          planeToInitialTrajectoryPointProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .plane.setPlaneToInitialTrajectoryPointProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //move plane from intial point to the clock position\n    //from here the plane movement anim progress will be each time increased with +100 in order to be consistent with the line progress.\n    timeline.add({\n      targets: empty,\n      duration: 5000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          planeToClockProgress,\n          function progressSetter(anim) {\n            useStore.getState().plane.setPlaneToClockProgress(anim.progress);\n            //todo: add on finish function:  increase Plane movement along lines total progress by 100 each time mabe\n          }\n        );\n      },\n    });\n\n    //bring the cubes to clock position\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          experienceCubesToClockPositionProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setExperienceCubesToClockPositionProgress(\n                anim.progress\n              );\n          }\n        );\n      },\n    });\n\n    //rotate for clock animations\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          experienceCubesToClockRotationProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setExperienceCubesToClockRotationProgress(\n                anim.progress\n              );\n          }\n        );\n      },\n    });\n\n    //convert to clock (GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          toClockProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setToClockProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //show time definition\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          timeDefinitionProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setTimeDefinitionProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //clockMove (GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          clockMoveProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setClockMoveProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //give it some time\n    //TODO: move the clock around or rotate or something\n    timeline.add({\n      targets: empty,\n      duration: 3000,\n    });\n\n    //clock go (GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 1000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          clockGoProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setClockCloseProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //remove timeDefinition\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          timeDefinitionCloseProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setTimeDefintionCloseProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //move plane to camel position\n    timeline.add({\n      targets: empty,\n      duration: 5000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          planeToCamelProgres,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .plane.setPlaneToCamelProgress(100 + anim.progress); //add +100 because plane has moved 100 units from the last position\n          }\n        );\n      },\n    });\n\n    //bring the cubes to camel position\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          experienceCubesToCamelPosition,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCubesToCamelPositionProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //rotate the cubes to camel position\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          experienceCubesToCamelRotation,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCubesToCamelRotationProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //transform cubes to camel (GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          toCamelProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setToCamelProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //show patienceDefinition\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          patienceDefitionProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setPatienceDefinitonProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //play camel move animation (GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          camelMoveProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setCamelMoveProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //give it some extra time\n    timeline.add({\n      targets: empty,\n      duration: 3000,\n    });\n\n    //camel go (GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 1000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          camelGoProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setCamelGoProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //remove patience definition\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          patienceDefitionCloseProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setPatinceDefinitionCloseProgres(anim.progress);\n          }\n        );\n      },\n    });\n\n    //move the plane to android position\n    timeline.add({\n      targets: empty,\n      duration: 5000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          planeToAndroidProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .plane.setPlaneToAndroidProgress(200 + anim.progress); //+200 because of the two previous plane movements\n          }\n        );\n      },\n    });\n\n    //bring the cubes to android position\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          cubesToAndroidPositionProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCubesToAndroidPositionProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //bring the cubes to android rotation\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          cubesToAndroidRotationProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCubesToAndroidRotationProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //transform to android(GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          toAndroidProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setToAndroidProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //show android paragraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          showAndroidParagraphProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setAndroidParagraphProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //android move (GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          androidMoveProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setAndroidMoveProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //TODO: check if it's waiting on backwars play too\n    //wait some time\n    timeline.add({\n      targets: empty,\n      duration: 3000,\n    });\n\n    //android go (GLTF)\n    timeline.add({\n      targets: empty,\n      duration: 1000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          androidGoProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setAndroidGoProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //hide android paragraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          androidParagraphCloseProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setAndroidParagraphCloseProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //move the plane to apple position\n    timeline.add({\n      targets: empty,\n      duration: 5000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          planeToAppleProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .plane.setPlaneToAppleProgress(300 + anim.progress); //+300 for the plane to continue it's journey when it left off\n          }\n        );\n      },\n    });\n\n    //bring the cubes to apple position\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          experienceCubesToApplePositionProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setExperienceCubesToApplePositionProgress(\n                anim.progress\n              );\n          }\n        );\n      },\n    });\n    //bring the cubes to apple rotation\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          experienceCubesToAppleRotationProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setExperienceCubesToAppleRotationProgress(\n                anim.progress\n              );\n          }\n        );\n      },\n    });\n\n    //transform the cubes to apple\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          toAppleProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setToAppleProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    // show apple paragraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          appleParagraphProgress,\n          function progressSeter(anim) {\n            useStore\n              .getState()\n              .experience.setAppleParagraphProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //move apple\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          appleMoveProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setAppleMoveProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //give it some extra time\n    timeline.add({\n      targets: empty,\n      duration: 3000,\n    });\n\n    //apple go\n    timeline.add({\n      targets: empty,\n      duration: 1000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          appleGoProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setAppleGoProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //remove apple paragraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          appleParagraphCloseProgress,\n          function progressSeter(anim) {\n            useStore\n              .getState()\n              .experience.setAppleParagraphCloseProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //set plane to react position\n    timeline.add({\n      targets: empty,\n      duration: 3000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          planeToReactPositionProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .plane.setPlaneToReactPositionProgress(400 + anim.progress); //+400 in order for the plane to continue where it left of (in the trajectory)\n          }\n        );\n      },\n    });\n\n    //bring cubes to react position\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          cubesToReactPositionProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCubesToReactPositionProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //cubes to react rotation\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          cubesToReactRotationProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCubesToReactRotationProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //set flower colors\n    timeline.add({\n      targets: empty,\n      duration: 1000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          flowerColorsProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setFlowerColorsProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //transform to flower\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          toFlowerProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setToFLowerProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //TODO: try setting colors before animation???\n\n    //show flowerParagraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          flowerParagraphProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setFlowerParagraphProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //set pineAppleColors\n    timeline.add({\n      targets: empty,\n      duration: 1000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          pineappleColorsProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setPineappleColorsProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //hide flowerParagraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          flowerParagraphCloseProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setFlowerParagraphCloseProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //transform to pineAPple\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          toPineAppleProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setToPinappleProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //show pineapple paragraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          pineappleParagraphProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setPineappleParagraphProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //hide pineapple paragraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          pineappleParagraphCloseProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setPineappleParagraphCloseProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //set cannon colors\n    timeline.add({\n      targets: empty,\n      duration: 1000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          cannonColorsProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCannonColorsProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //transform to Cannon\n    timeline.add({\n      targets: empty,\n      duration: 2000,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          toCannonProgress,\n          function progressSetter(anim) {\n            useStore.getState().experience.setToCannonProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //show cannon paragraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          cannonParagraphProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCannonParagraphProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //hide cannon paragraph\n    timeline.add({\n      targets: empty,\n      duration: 500,\n      update: function (anim) {\n        handleUpdateAnimation(\n          anim,\n          cannonParagraphCloseProgress,\n          function progressSetter(anim) {\n            useStore\n              .getState()\n              .experience.setCannonParagraphCloseProgress(anim.progress);\n          }\n        );\n      },\n    });\n\n    //****************** just for fixing the timeline */\n    timeline.add({\n      targets: empty,\n      duration: 200,\n    });\n  }\n\n  useEffect(() => {\n    camera.position.z = 725;\n    camera.position.y = 8;\n    // divContainer.scroll({ top: 0, left: 0 });\n    //Scroll & resize event listeners\n    divContainer.addEventListener(\"wheel\", onWheel, false);\n    window.addEventListener(\"resize\", onResize, { passive: true });\n    divContainer.addEventListener(\"touchstart\", onTouchStart);\n    divContainer.addEventListener(\"touchmove\", onTouchMove);\n\n    addTimelineEvents();\n    return () => {\n      divContainer.removeEventListener(\"wheel\", onWheel);\n      window.removeEventListener(\"resize\", onResize);\n      divContainer.removeEventListener(\"touchstart\", onTouchStart);\n      divContainer.removeEventListener(\"touchmove\", onTouchMove);\n\n      //TODO: CHECK IF CAN CLEAR REF????\n    };\n  }, []);\n\n  return null;\n}\n","import { Suspense } from \"react\";\nimport { Stats } from \"@react-three/drei\";\n\nimport Everything from \"../Starter\";\nimport TestPlane from \"../TestOnlyPlane\";\nimport Sheet from \"../Sheet\";\nimport Loading from \"../Loading\";\nimport Effect from \"../../postprocessing\";\nimport AnimHandler from \"../animHandler\";\n\nconst World = () => {\n  return (\n    <>\n      <Effect />\n      <Stats />\n      <AnimHandler />\n      <Suspense fallback={null}>\n        <Loading />\n        <Everything />\n        <TestPlane />\n        <Sheet />\n      </Suspense>\n      <directionalLight intensity={1} position={[2, 1, 697]} color=\"white\" />\n    </>\n  );\n};\n\nexport default World;\n","import React, { useRef } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport World from \"../objects/world\";\n\nimport \"./styles.css\";\n\nconst Scene = () => {\n  const canvas = useRef();\n\n  return (\n    <div id=\"wrapper\">\n      <div id=\"webgl\" className=\"container\">\n        <Canvas\n          shadows\n          camera={{\n            far: 50, //important to have a clean view from the curve path (plane trajectory)\n            near: 1,\n            fov: 45,\n            aspect: window.innerWidth / window.innerHeight,\n          }}\n          antialias\n          ref={canvas}\n        >\n          <World />\n        </Canvas>\n      </div>\n      <div id=\"fold\" className=\"container\">\n        {/* <div\n          style={{\n            position: \"absolute\",\n            height: \"100vh\",\n            backgroundColor: \"red\",\n          }}\n        >\n          <h1>Cool stuff going on here</h1>\n          <h1>Cool stuff going on here</h1>\n          <h1>Cool stuff going on here</h1>\n          <h1>Cool stuff going on here</h1>\n          <h1>Cool stuff going on here</h1>\n          <h1>Cool stuff going on here</h1>\n          <h1>Cool stuff going on here</h1>\n          <h1>Cool stuff going on here</h1>\n        </div> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Scene;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport Scene from \"./scene\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Scene />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}